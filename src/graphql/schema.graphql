# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AffectedRowsOutput {
  count: Int!
}

type AggregateBotFlow {
  _avg: BotFlowAvgAggregate
  _count: BotFlowCountAggregate
  _max: BotFlowMaxAggregate
  _min: BotFlowMinAggregate
  _sum: BotFlowSumAggregate
}

type AggregateBotFlowVersion {
  _avg: BotFlowVersionAvgAggregate
  _count: BotFlowVersionCountAggregate
  _max: BotFlowVersionMaxAggregate
  _min: BotFlowVersionMinAggregate
  _sum: BotFlowVersionSumAggregate
}

type AggregateConnection {
  _avg: ConnectionAvgAggregate
  _count: ConnectionCountAggregate
  _max: ConnectionMaxAggregate
  _min: ConnectionMinAggregate
  _sum: ConnectionSumAggregate
}

type AggregateFlowNode {
  _avg: FlowNodeAvgAggregate
  _count: FlowNodeCountAggregate
  _max: FlowNodeMaxAggregate
  _min: FlowNodeMinAggregate
  _sum: FlowNodeSumAggregate
}

type AggregateNodeAudioProps {
  _avg: NodeAudioPropsAvgAggregate
  _count: NodeAudioPropsCountAggregate
  _max: NodeAudioPropsMaxAggregate
  _min: NodeAudioPropsMinAggregate
  _sum: NodeAudioPropsSumAggregate
}

type AggregateNodeCountdownProps {
  _avg: NodeCountdownPropsAvgAggregate
  _count: NodeCountdownPropsCountAggregate
  _max: NodeCountdownPropsMaxAggregate
  _min: NodeCountdownPropsMinAggregate
  _sum: NodeCountdownPropsSumAggregate
}

type AggregateNodeFileProps {
  _avg: NodeFilePropsAvgAggregate
  _count: NodeFilePropsCountAggregate
  _max: NodeFilePropsMaxAggregate
  _min: NodeFilePropsMinAggregate
  _sum: NodeFilePropsSumAggregate
}

type AggregateNodeImageProps {
  _avg: NodeImagePropsAvgAggregate
  _count: NodeImagePropsCountAggregate
  _max: NodeImagePropsMaxAggregate
  _min: NodeImagePropsMinAggregate
  _sum: NodeImagePropsSumAggregate
}

type AggregateNodeInfo {
  _avg: NodeInfoAvgAggregate
  _count: NodeInfoCountAggregate
  _max: NodeInfoMaxAggregate
  _min: NodeInfoMinAggregate
  _sum: NodeInfoSumAggregate
}

type AggregateNodeLinkProps {
  _avg: NodeLinkPropsAvgAggregate
  _count: NodeLinkPropsCountAggregate
  _max: NodeLinkPropsMaxAggregate
  _min: NodeLinkPropsMinAggregate
  _sum: NodeLinkPropsSumAggregate
}

type AggregateNodeProps {
  _avg: NodePropsAvgAggregate
  _count: NodePropsCountAggregate
  _max: NodePropsMaxAggregate
  _min: NodePropsMinAggregate
  _sum: NodePropsSumAggregate
}

type AggregateNodeSwitchOptionProps {
  _avg: NodeSwitchOptionPropsAvgAggregate
  _count: NodeSwitchOptionPropsCountAggregate
  _max: NodeSwitchOptionPropsMaxAggregate
  _min: NodeSwitchOptionPropsMinAggregate
  _sum: NodeSwitchOptionPropsSumAggregate
}

type AggregateNodeSwitchProps {
  _avg: NodeSwitchPropsAvgAggregate
  _count: NodeSwitchPropsCountAggregate
  _max: NodeSwitchPropsMaxAggregate
  _min: NodeSwitchPropsMinAggregate
  _sum: NodeSwitchPropsSumAggregate
}

type AggregateNodeTextProps {
  _avg: NodeTextPropsAvgAggregate
  _count: NodeTextPropsCountAggregate
  _max: NodeTextPropsMaxAggregate
  _min: NodeTextPropsMinAggregate
  _sum: NodeTextPropsSumAggregate
}

type AggregateNodeVideoProps {
  _avg: NodeVideoPropsAvgAggregate
  _count: NodeVideoPropsCountAggregate
  _max: NodeVideoPropsMaxAggregate
  _min: NodeVideoPropsMinAggregate
  _sum: NodeVideoPropsSumAggregate
}

type AggregateNodeWaitProps {
  _avg: NodeWaitPropsAvgAggregate
  _count: NodeWaitPropsCountAggregate
  _max: NodeWaitPropsMaxAggregate
  _min: NodeWaitPropsMinAggregate
  _sum: NodeWaitPropsSumAggregate
}

type AggregatePort {
  _avg: PortAvgAggregate
  _count: PortCountAggregate
  _max: PortMaxAggregate
  _min: PortMinAggregate
  _sum: PortSumAggregate
}

type AggregateTemplateNode {
  _avg: TemplateNodeAvgAggregate
  _count: TemplateNodeCountAggregate
  _max: TemplateNodeMaxAggregate
  _min: TemplateNodeMinAggregate
  _sum: TemplateNodeSumAggregate
}

type AggregateTemplateNodesGroup {
  _avg: TemplateNodesGroupAvgAggregate
  _count: TemplateNodesGroupCountAggregate
  _max: TemplateNodesGroupMaxAggregate
  _min: TemplateNodesGroupMinAggregate
  _sum: TemplateNodesGroupSumAggregate
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

type BotFlow {
  _count: BotFlowCount
  description: String!
  id: Int!
  name: String!
  versions(cursor: BotFlowVersionWhereUniqueInput, distinct: [BotFlowVersionScalarFieldEnum!], orderBy: [BotFlowVersionOrderByWithRelationInput!], skip: Int, take: Int, where: BotFlowVersionWhereInput): [BotFlowVersion!]!
}

type BotFlowAvgAggregate {
  id: Float
}

input BotFlowAvgOrderByAggregateInput {
  id: SortOrder
}

type BotFlowCount {
  versions: Int!
}

type BotFlowCountAggregate {
  _all: Int!
  description: Int!
  id: Int!
  name: Int!
}

input BotFlowCountOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input BotFlowCreateInput {
  description: String
  name: String
  versions: BotFlowVersionCreateNestedManyWithoutBotFlowInput
}

input BotFlowCreateManyInput {
  description: String
  id: Int
  name: String
}

input BotFlowCreateNestedOneWithoutVersionsInput {
  connect: BotFlowWhereUniqueInput
  connectOrCreate: BotFlowCreateOrConnectWithoutVersionsInput
  create: BotFlowCreateWithoutVersionsInput
}

input BotFlowCreateOrConnectWithoutVersionsInput {
  create: BotFlowCreateWithoutVersionsInput!
  where: BotFlowWhereUniqueInput!
}

input BotFlowCreateWithoutVersionsInput {
  description: String
  name: String
}

type BotFlowGroupBy {
  _avg: BotFlowAvgAggregate
  _count: BotFlowCountAggregate
  _max: BotFlowMaxAggregate
  _min: BotFlowMinAggregate
  _sum: BotFlowSumAggregate
  description: String!
  id: Int!
  name: String!
}

type BotFlowMaxAggregate {
  description: String
  id: Int
  name: String
}

input BotFlowMaxOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

type BotFlowMinAggregate {
  description: String
  id: Int
  name: String
}

input BotFlowMinOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input BotFlowOrderByWithAggregationInput {
  _avg: BotFlowAvgOrderByAggregateInput
  _count: BotFlowCountOrderByAggregateInput
  _max: BotFlowMaxOrderByAggregateInput
  _min: BotFlowMinOrderByAggregateInput
  _sum: BotFlowSumOrderByAggregateInput
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input BotFlowOrderByWithRelationInput {
  description: SortOrder
  id: SortOrder
  name: SortOrder
  versions: BotFlowVersionOrderByRelationAggregateInput
}

input BotFlowRelationFilter {
  is: BotFlowWhereInput
  isNot: BotFlowWhereInput
}

enum BotFlowScalarFieldEnum {
  description
  id
  name
}

input BotFlowScalarWhereWithAggregatesInput {
  AND: [BotFlowScalarWhereWithAggregatesInput!]
  NOT: [BotFlowScalarWhereWithAggregatesInput!]
  OR: [BotFlowScalarWhereWithAggregatesInput!]
  description: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
}

type BotFlowSumAggregate {
  id: Int
}

input BotFlowSumOrderByAggregateInput {
  id: SortOrder
}

input BotFlowUpdateInput {
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  versions: BotFlowVersionUpdateManyWithoutBotFlowInput
}

input BotFlowUpdateManyMutationInput {
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input BotFlowUpdateOneRequiredWithoutVersionsInput {
  connect: BotFlowWhereUniqueInput
  connectOrCreate: BotFlowCreateOrConnectWithoutVersionsInput
  create: BotFlowCreateWithoutVersionsInput
  update: BotFlowUpdateWithoutVersionsInput
  upsert: BotFlowUpsertWithoutVersionsInput
}

input BotFlowUpdateWithoutVersionsInput {
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input BotFlowUpsertWithoutVersionsInput {
  create: BotFlowCreateWithoutVersionsInput!
  update: BotFlowUpdateWithoutVersionsInput!
}

type BotFlowVersion {
  _count: BotFlowVersionCount
  botFlow: BotFlow!
  botFlowId: Int!
  connections(cursor: ConnectionWhereUniqueInput, distinct: [ConnectionScalarFieldEnum!], orderBy: [ConnectionOrderByWithRelationInput!], skip: Int, take: Int, where: ConnectionWhereInput): [Connection!]!
  id: Int!
  nodes(cursor: FlowNodeWhereUniqueInput, distinct: [FlowNodeScalarFieldEnum!], orderBy: [FlowNodeOrderByWithRelationInput!], skip: Int, take: Int, where: FlowNodeWhereInput): [FlowNode!]!
  version: Int!
}

type BotFlowVersionAvgAggregate {
  botFlowId: Float
  id: Float
  version: Float
}

input BotFlowVersionAvgOrderByAggregateInput {
  botFlowId: SortOrder
  id: SortOrder
  version: SortOrder
}

type BotFlowVersionCount {
  connections: Int!
  nodes: Int!
}

type BotFlowVersionCountAggregate {
  _all: Int!
  botFlowId: Int!
  id: Int!
  version: Int!
}

input BotFlowVersionCountOrderByAggregateInput {
  botFlowId: SortOrder
  id: SortOrder
  version: SortOrder
}

input BotFlowVersionCreateInput {
  botFlow: BotFlowCreateNestedOneWithoutVersionsInput!
  connections: ConnectionCreateNestedManyWithoutFlowInput
  nodes: FlowNodeCreateNestedManyWithoutFlowInput
  version: Int
}

input BotFlowVersionCreateManyBotFlowInput {
  id: Int
  version: Int
}

input BotFlowVersionCreateManyBotFlowInputEnvelope {
  data: [BotFlowVersionCreateManyBotFlowInput!]!
  skipDuplicates: Boolean
}

input BotFlowVersionCreateManyInput {
  botFlowId: Int!
  id: Int
  version: Int
}

input BotFlowVersionCreateNestedManyWithoutBotFlowInput {
  connect: [BotFlowVersionWhereUniqueInput!]
  connectOrCreate: [BotFlowVersionCreateOrConnectWithoutBotFlowInput!]
  create: [BotFlowVersionCreateWithoutBotFlowInput!]
  createMany: BotFlowVersionCreateManyBotFlowInputEnvelope
}

input BotFlowVersionCreateNestedOneWithoutConnectionsInput {
  connect: BotFlowVersionWhereUniqueInput
  connectOrCreate: BotFlowVersionCreateOrConnectWithoutConnectionsInput
  create: BotFlowVersionCreateWithoutConnectionsInput
}

input BotFlowVersionCreateNestedOneWithoutNodesInput {
  connect: BotFlowVersionWhereUniqueInput
  connectOrCreate: BotFlowVersionCreateOrConnectWithoutNodesInput
  create: BotFlowVersionCreateWithoutNodesInput
}

input BotFlowVersionCreateOrConnectWithoutBotFlowInput {
  create: BotFlowVersionCreateWithoutBotFlowInput!
  where: BotFlowVersionWhereUniqueInput!
}

input BotFlowVersionCreateOrConnectWithoutConnectionsInput {
  create: BotFlowVersionCreateWithoutConnectionsInput!
  where: BotFlowVersionWhereUniqueInput!
}

input BotFlowVersionCreateOrConnectWithoutNodesInput {
  create: BotFlowVersionCreateWithoutNodesInput!
  where: BotFlowVersionWhereUniqueInput!
}

input BotFlowVersionCreateWithoutBotFlowInput {
  connections: ConnectionCreateNestedManyWithoutFlowInput
  nodes: FlowNodeCreateNestedManyWithoutFlowInput
  version: Int
}

input BotFlowVersionCreateWithoutConnectionsInput {
  botFlow: BotFlowCreateNestedOneWithoutVersionsInput!
  nodes: FlowNodeCreateNestedManyWithoutFlowInput
  version: Int
}

input BotFlowVersionCreateWithoutNodesInput {
  botFlow: BotFlowCreateNestedOneWithoutVersionsInput!
  connections: ConnectionCreateNestedManyWithoutFlowInput
  version: Int
}

type BotFlowVersionGroupBy {
  _avg: BotFlowVersionAvgAggregate
  _count: BotFlowVersionCountAggregate
  _max: BotFlowVersionMaxAggregate
  _min: BotFlowVersionMinAggregate
  _sum: BotFlowVersionSumAggregate
  botFlowId: Int!
  id: Int!
  version: Int!
}

input BotFlowVersionListRelationFilter {
  every: BotFlowVersionWhereInput
  none: BotFlowVersionWhereInput
  some: BotFlowVersionWhereInput
}

type BotFlowVersionMaxAggregate {
  botFlowId: Int
  id: Int
  version: Int
}

input BotFlowVersionMaxOrderByAggregateInput {
  botFlowId: SortOrder
  id: SortOrder
  version: SortOrder
}

type BotFlowVersionMinAggregate {
  botFlowId: Int
  id: Int
  version: Int
}

input BotFlowVersionMinOrderByAggregateInput {
  botFlowId: SortOrder
  id: SortOrder
  version: SortOrder
}

input BotFlowVersionOrderByRelationAggregateInput {
  _count: SortOrder
}

input BotFlowVersionOrderByWithAggregationInput {
  _avg: BotFlowVersionAvgOrderByAggregateInput
  _count: BotFlowVersionCountOrderByAggregateInput
  _max: BotFlowVersionMaxOrderByAggregateInput
  _min: BotFlowVersionMinOrderByAggregateInput
  _sum: BotFlowVersionSumOrderByAggregateInput
  botFlowId: SortOrder
  id: SortOrder
  version: SortOrder
}

input BotFlowVersionOrderByWithRelationInput {
  botFlow: BotFlowOrderByWithRelationInput
  botFlowId: SortOrder
  connections: ConnectionOrderByRelationAggregateInput
  id: SortOrder
  nodes: FlowNodeOrderByRelationAggregateInput
  version: SortOrder
}

input BotFlowVersionRelationFilter {
  is: BotFlowVersionWhereInput
  isNot: BotFlowVersionWhereInput
}

enum BotFlowVersionScalarFieldEnum {
  botFlowId
  id
  version
}

input BotFlowVersionScalarWhereInput {
  AND: [BotFlowVersionScalarWhereInput!]
  NOT: [BotFlowVersionScalarWhereInput!]
  OR: [BotFlowVersionScalarWhereInput!]
  botFlowId: IntFilter
  id: IntFilter
  version: IntFilter
}

input BotFlowVersionScalarWhereWithAggregatesInput {
  AND: [BotFlowVersionScalarWhereWithAggregatesInput!]
  NOT: [BotFlowVersionScalarWhereWithAggregatesInput!]
  OR: [BotFlowVersionScalarWhereWithAggregatesInput!]
  botFlowId: IntWithAggregatesFilter
  id: IntWithAggregatesFilter
  version: IntWithAggregatesFilter
}

type BotFlowVersionSumAggregate {
  botFlowId: Int
  id: Int
  version: Int
}

input BotFlowVersionSumOrderByAggregateInput {
  botFlowId: SortOrder
  id: SortOrder
  version: SortOrder
}

input BotFlowVersionUpdateInput {
  botFlow: BotFlowUpdateOneRequiredWithoutVersionsInput
  connections: ConnectionUpdateManyWithoutFlowInput
  nodes: FlowNodeUpdateManyWithoutFlowInput
  version: IntFieldUpdateOperationsInput
}

input BotFlowVersionUpdateManyMutationInput {
  version: IntFieldUpdateOperationsInput
}

input BotFlowVersionUpdateManyWithWhereWithoutBotFlowInput {
  data: BotFlowVersionUpdateManyMutationInput!
  where: BotFlowVersionScalarWhereInput!
}

input BotFlowVersionUpdateManyWithoutBotFlowInput {
  connect: [BotFlowVersionWhereUniqueInput!]
  connectOrCreate: [BotFlowVersionCreateOrConnectWithoutBotFlowInput!]
  create: [BotFlowVersionCreateWithoutBotFlowInput!]
  createMany: BotFlowVersionCreateManyBotFlowInputEnvelope
  delete: [BotFlowVersionWhereUniqueInput!]
  deleteMany: [BotFlowVersionScalarWhereInput!]
  disconnect: [BotFlowVersionWhereUniqueInput!]
  set: [BotFlowVersionWhereUniqueInput!]
  update: [BotFlowVersionUpdateWithWhereUniqueWithoutBotFlowInput!]
  updateMany: [BotFlowVersionUpdateManyWithWhereWithoutBotFlowInput!]
  upsert: [BotFlowVersionUpsertWithWhereUniqueWithoutBotFlowInput!]
}

input BotFlowVersionUpdateOneRequiredWithoutConnectionsInput {
  connect: BotFlowVersionWhereUniqueInput
  connectOrCreate: BotFlowVersionCreateOrConnectWithoutConnectionsInput
  create: BotFlowVersionCreateWithoutConnectionsInput
  update: BotFlowVersionUpdateWithoutConnectionsInput
  upsert: BotFlowVersionUpsertWithoutConnectionsInput
}

input BotFlowVersionUpdateOneRequiredWithoutNodesInput {
  connect: BotFlowVersionWhereUniqueInput
  connectOrCreate: BotFlowVersionCreateOrConnectWithoutNodesInput
  create: BotFlowVersionCreateWithoutNodesInput
  update: BotFlowVersionUpdateWithoutNodesInput
  upsert: BotFlowVersionUpsertWithoutNodesInput
}

input BotFlowVersionUpdateWithWhereUniqueWithoutBotFlowInput {
  data: BotFlowVersionUpdateWithoutBotFlowInput!
  where: BotFlowVersionWhereUniqueInput!
}

input BotFlowVersionUpdateWithoutBotFlowInput {
  connections: ConnectionUpdateManyWithoutFlowInput
  nodes: FlowNodeUpdateManyWithoutFlowInput
  version: IntFieldUpdateOperationsInput
}

input BotFlowVersionUpdateWithoutConnectionsInput {
  botFlow: BotFlowUpdateOneRequiredWithoutVersionsInput
  nodes: FlowNodeUpdateManyWithoutFlowInput
  version: IntFieldUpdateOperationsInput
}

input BotFlowVersionUpdateWithoutNodesInput {
  botFlow: BotFlowUpdateOneRequiredWithoutVersionsInput
  connections: ConnectionUpdateManyWithoutFlowInput
  version: IntFieldUpdateOperationsInput
}

input BotFlowVersionUpsertWithWhereUniqueWithoutBotFlowInput {
  create: BotFlowVersionCreateWithoutBotFlowInput!
  update: BotFlowVersionUpdateWithoutBotFlowInput!
  where: BotFlowVersionWhereUniqueInput!
}

input BotFlowVersionUpsertWithoutConnectionsInput {
  create: BotFlowVersionCreateWithoutConnectionsInput!
  update: BotFlowVersionUpdateWithoutConnectionsInput!
}

input BotFlowVersionUpsertWithoutNodesInput {
  create: BotFlowVersionCreateWithoutNodesInput!
  update: BotFlowVersionUpdateWithoutNodesInput!
}

input BotFlowVersionWhereInput {
  AND: [BotFlowVersionWhereInput!]
  NOT: [BotFlowVersionWhereInput!]
  OR: [BotFlowVersionWhereInput!]
  botFlow: BotFlowRelationFilter
  botFlowId: IntFilter
  connections: ConnectionListRelationFilter
  id: IntFilter
  nodes: FlowNodeListRelationFilter
  version: IntFilter
}

input BotFlowVersionWhereUniqueInput {
  id: Int
}

input BotFlowWhereInput {
  AND: [BotFlowWhereInput!]
  NOT: [BotFlowWhereInput!]
  OR: [BotFlowWhereInput!]
  description: StringFilter
  id: IntFilter
  name: StringFilter
  versions: BotFlowVersionListRelationFilter
}

input BotFlowWhereUniqueInput {
  id: Int
}

type Connection {
  botFlowVersionId: Int!
  createdAt: DateTime!
  flow: BotFlowVersion!
  from: Int!
  fromPort: Port!
  id: Int!
  to: Int!
  toPort: Port!
}

type ConnectionAvgAggregate {
  botFlowVersionId: Float
  from: Float
  id: Float
  to: Float
}

input ConnectionAvgOrderByAggregateInput {
  botFlowVersionId: SortOrder
  from: SortOrder
  id: SortOrder
  to: SortOrder
}

type ConnectionCountAggregate {
  _all: Int!
  botFlowVersionId: Int!
  createdAt: Int!
  from: Int!
  id: Int!
  to: Int!
}

input ConnectionCountOrderByAggregateInput {
  botFlowVersionId: SortOrder
  createdAt: SortOrder
  from: SortOrder
  id: SortOrder
  to: SortOrder
}

input ConnectionCreateInput {
  createdAt: DateTime
  flow: BotFlowVersionCreateNestedOneWithoutConnectionsInput!
  fromPort: PortCreateNestedOneWithoutOutConnectionsInput!
  toPort: PortCreateNestedOneWithoutInConnectionInput!
}

input ConnectionCreateManyFlowInput {
  createdAt: DateTime
  from: Int!
  id: Int
  to: Int!
}

input ConnectionCreateManyFlowInputEnvelope {
  data: [ConnectionCreateManyFlowInput!]!
  skipDuplicates: Boolean
}

input ConnectionCreateManyFromPortInput {
  botFlowVersionId: Int!
  createdAt: DateTime
  id: Int
  to: Int!
}

input ConnectionCreateManyFromPortInputEnvelope {
  data: [ConnectionCreateManyFromPortInput!]!
  skipDuplicates: Boolean
}

input ConnectionCreateManyInput {
  botFlowVersionId: Int!
  createdAt: DateTime
  from: Int!
  id: Int
  to: Int!
}

input ConnectionCreateNestedManyWithoutFlowInput {
  connect: [ConnectionWhereUniqueInput!]
  connectOrCreate: [ConnectionCreateOrConnectWithoutFlowInput!]
  create: [ConnectionCreateWithoutFlowInput!]
  createMany: ConnectionCreateManyFlowInputEnvelope
}

input ConnectionCreateNestedManyWithoutFromPortInput {
  connect: [ConnectionWhereUniqueInput!]
  connectOrCreate: [ConnectionCreateOrConnectWithoutFromPortInput!]
  create: [ConnectionCreateWithoutFromPortInput!]
  createMany: ConnectionCreateManyFromPortInputEnvelope
}

input ConnectionCreateNestedOneWithoutToPortInput {
  connect: ConnectionWhereUniqueInput
  connectOrCreate: ConnectionCreateOrConnectWithoutToPortInput
  create: ConnectionCreateWithoutToPortInput
}

input ConnectionCreateOrConnectWithoutFlowInput {
  create: ConnectionCreateWithoutFlowInput!
  where: ConnectionWhereUniqueInput!
}

input ConnectionCreateOrConnectWithoutFromPortInput {
  create: ConnectionCreateWithoutFromPortInput!
  where: ConnectionWhereUniqueInput!
}

input ConnectionCreateOrConnectWithoutToPortInput {
  create: ConnectionCreateWithoutToPortInput!
  where: ConnectionWhereUniqueInput!
}

input ConnectionCreateWithoutFlowInput {
  createdAt: DateTime
  fromPort: PortCreateNestedOneWithoutOutConnectionsInput!
  toPort: PortCreateNestedOneWithoutInConnectionInput!
}

input ConnectionCreateWithoutFromPortInput {
  createdAt: DateTime
  flow: BotFlowVersionCreateNestedOneWithoutConnectionsInput!
  toPort: PortCreateNestedOneWithoutInConnectionInput!
}

input ConnectionCreateWithoutToPortInput {
  createdAt: DateTime
  flow: BotFlowVersionCreateNestedOneWithoutConnectionsInput!
  fromPort: PortCreateNestedOneWithoutOutConnectionsInput!
}

type ConnectionGroupBy {
  _avg: ConnectionAvgAggregate
  _count: ConnectionCountAggregate
  _max: ConnectionMaxAggregate
  _min: ConnectionMinAggregate
  _sum: ConnectionSumAggregate
  botFlowVersionId: Int!
  createdAt: DateTime!
  from: Int!
  id: Int!
  to: Int!
}

input ConnectionListRelationFilter {
  every: ConnectionWhereInput
  none: ConnectionWhereInput
  some: ConnectionWhereInput
}

type ConnectionMaxAggregate {
  botFlowVersionId: Int
  createdAt: DateTime
  from: Int
  id: Int
  to: Int
}

input ConnectionMaxOrderByAggregateInput {
  botFlowVersionId: SortOrder
  createdAt: SortOrder
  from: SortOrder
  id: SortOrder
  to: SortOrder
}

type ConnectionMinAggregate {
  botFlowVersionId: Int
  createdAt: DateTime
  from: Int
  id: Int
  to: Int
}

input ConnectionMinOrderByAggregateInput {
  botFlowVersionId: SortOrder
  createdAt: SortOrder
  from: SortOrder
  id: SortOrder
  to: SortOrder
}

input ConnectionOrderByRelationAggregateInput {
  _count: SortOrder
}

input ConnectionOrderByWithAggregationInput {
  _avg: ConnectionAvgOrderByAggregateInput
  _count: ConnectionCountOrderByAggregateInput
  _max: ConnectionMaxOrderByAggregateInput
  _min: ConnectionMinOrderByAggregateInput
  _sum: ConnectionSumOrderByAggregateInput
  botFlowVersionId: SortOrder
  createdAt: SortOrder
  from: SortOrder
  id: SortOrder
  to: SortOrder
}

input ConnectionOrderByWithRelationInput {
  botFlowVersionId: SortOrder
  createdAt: SortOrder
  flow: BotFlowVersionOrderByWithRelationInput
  from: SortOrder
  fromPort: PortOrderByWithRelationInput
  id: SortOrder
  to: SortOrder
  toPort: PortOrderByWithRelationInput
}

input ConnectionRelationFilter {
  is: ConnectionWhereInput
  isNot: ConnectionWhereInput
}

enum ConnectionScalarFieldEnum {
  botFlowVersionId
  createdAt
  from
  id
  to
}

input ConnectionScalarWhereInput {
  AND: [ConnectionScalarWhereInput!]
  NOT: [ConnectionScalarWhereInput!]
  OR: [ConnectionScalarWhereInput!]
  botFlowVersionId: IntFilter
  createdAt: DateTimeFilter
  from: IntFilter
  id: IntFilter
  to: IntFilter
}

input ConnectionScalarWhereWithAggregatesInput {
  AND: [ConnectionScalarWhereWithAggregatesInput!]
  NOT: [ConnectionScalarWhereWithAggregatesInput!]
  OR: [ConnectionScalarWhereWithAggregatesInput!]
  botFlowVersionId: IntWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  from: IntWithAggregatesFilter
  id: IntWithAggregatesFilter
  to: IntWithAggregatesFilter
}

type ConnectionSumAggregate {
  botFlowVersionId: Int
  from: Int
  id: Int
  to: Int
}

input ConnectionSumOrderByAggregateInput {
  botFlowVersionId: SortOrder
  from: SortOrder
  id: SortOrder
  to: SortOrder
}

input ConnectionUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  flow: BotFlowVersionUpdateOneRequiredWithoutConnectionsInput
  fromPort: PortUpdateOneRequiredWithoutOutConnectionsInput
  toPort: PortUpdateOneRequiredWithoutInConnectionInput
}

input ConnectionUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
}

input ConnectionUpdateManyWithWhereWithoutFlowInput {
  data: ConnectionUpdateManyMutationInput!
  where: ConnectionScalarWhereInput!
}

input ConnectionUpdateManyWithWhereWithoutFromPortInput {
  data: ConnectionUpdateManyMutationInput!
  where: ConnectionScalarWhereInput!
}

input ConnectionUpdateManyWithoutFlowInput {
  connect: [ConnectionWhereUniqueInput!]
  connectOrCreate: [ConnectionCreateOrConnectWithoutFlowInput!]
  create: [ConnectionCreateWithoutFlowInput!]
  createMany: ConnectionCreateManyFlowInputEnvelope
  delete: [ConnectionWhereUniqueInput!]
  deleteMany: [ConnectionScalarWhereInput!]
  disconnect: [ConnectionWhereUniqueInput!]
  set: [ConnectionWhereUniqueInput!]
  update: [ConnectionUpdateWithWhereUniqueWithoutFlowInput!]
  updateMany: [ConnectionUpdateManyWithWhereWithoutFlowInput!]
  upsert: [ConnectionUpsertWithWhereUniqueWithoutFlowInput!]
}

input ConnectionUpdateManyWithoutFromPortInput {
  connect: [ConnectionWhereUniqueInput!]
  connectOrCreate: [ConnectionCreateOrConnectWithoutFromPortInput!]
  create: [ConnectionCreateWithoutFromPortInput!]
  createMany: ConnectionCreateManyFromPortInputEnvelope
  delete: [ConnectionWhereUniqueInput!]
  deleteMany: [ConnectionScalarWhereInput!]
  disconnect: [ConnectionWhereUniqueInput!]
  set: [ConnectionWhereUniqueInput!]
  update: [ConnectionUpdateWithWhereUniqueWithoutFromPortInput!]
  updateMany: [ConnectionUpdateManyWithWhereWithoutFromPortInput!]
  upsert: [ConnectionUpsertWithWhereUniqueWithoutFromPortInput!]
}

input ConnectionUpdateOneWithoutToPortInput {
  connect: ConnectionWhereUniqueInput
  connectOrCreate: ConnectionCreateOrConnectWithoutToPortInput
  create: ConnectionCreateWithoutToPortInput
  delete: Boolean
  disconnect: Boolean
  update: ConnectionUpdateWithoutToPortInput
  upsert: ConnectionUpsertWithoutToPortInput
}

input ConnectionUpdateWithWhereUniqueWithoutFlowInput {
  data: ConnectionUpdateWithoutFlowInput!
  where: ConnectionWhereUniqueInput!
}

input ConnectionUpdateWithWhereUniqueWithoutFromPortInput {
  data: ConnectionUpdateWithoutFromPortInput!
  where: ConnectionWhereUniqueInput!
}

input ConnectionUpdateWithoutFlowInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  fromPort: PortUpdateOneRequiredWithoutOutConnectionsInput
  toPort: PortUpdateOneRequiredWithoutInConnectionInput
}

input ConnectionUpdateWithoutFromPortInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  flow: BotFlowVersionUpdateOneRequiredWithoutConnectionsInput
  toPort: PortUpdateOneRequiredWithoutInConnectionInput
}

input ConnectionUpdateWithoutToPortInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  flow: BotFlowVersionUpdateOneRequiredWithoutConnectionsInput
  fromPort: PortUpdateOneRequiredWithoutOutConnectionsInput
}

input ConnectionUpsertWithWhereUniqueWithoutFlowInput {
  create: ConnectionCreateWithoutFlowInput!
  update: ConnectionUpdateWithoutFlowInput!
  where: ConnectionWhereUniqueInput!
}

input ConnectionUpsertWithWhereUniqueWithoutFromPortInput {
  create: ConnectionCreateWithoutFromPortInput!
  update: ConnectionUpdateWithoutFromPortInput!
  where: ConnectionWhereUniqueInput!
}

input ConnectionUpsertWithoutToPortInput {
  create: ConnectionCreateWithoutToPortInput!
  update: ConnectionUpdateWithoutToPortInput!
}

input ConnectionWhereInput {
  AND: [ConnectionWhereInput!]
  NOT: [ConnectionWhereInput!]
  OR: [ConnectionWhereInput!]
  botFlowVersionId: IntFilter
  createdAt: DateTimeFilter
  flow: BotFlowVersionRelationFilter
  from: IntFilter
  fromPort: PortRelationFilter
  id: IntFilter
  to: IntFilter
  toPort: PortRelationFilter
}

input ConnectionWhereUniqueInput {
  id: Int
  to: Int
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime!]
}

input EnumNodeTypeFieldUpdateOperationsInput {
  set: NodeType
}

input EnumNodeTypeFilter {
  equals: NodeType
  in: [NodeType!]
  not: NestedEnumNodeTypeFilter
  notIn: [NodeType!]
}

input EnumNodeTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumNodeTypeFilter
  _min: NestedEnumNodeTypeFilter
  equals: NodeType
  in: [NodeType!]
  not: NestedEnumNodeTypeWithAggregatesFilter
  notIn: [NodeType!]
}

input EnumSwitchDisplayTypeFieldUpdateOperationsInput {
  set: SwitchDisplayType
}

input EnumSwitchDisplayTypeFilter {
  equals: SwitchDisplayType
  in: [SwitchDisplayType!]
  not: NestedEnumSwitchDisplayTypeFilter
  notIn: [SwitchDisplayType!]
}

input EnumSwitchDisplayTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumSwitchDisplayTypeFilter
  _min: NestedEnumSwitchDisplayTypeFilter
  equals: SwitchDisplayType
  in: [SwitchDisplayType!]
  not: NestedEnumSwitchDisplayTypeWithAggregatesFilter
  notIn: [SwitchDisplayType!]
}

type FlowNode {
  NodeProps: NodeProps!
  _count: FlowNodeCount
  botFlowVersionId: Int!
  flow: BotFlowVersion!
  id: Int!
  info: NodeInfo!
  nodeInfoId: Int!
  nodePropsId: Int!
  ports(cursor: PortWhereUniqueInput, distinct: [PortScalarFieldEnum!], orderBy: [PortOrderByWithRelationInput!], skip: Int, take: Int, where: PortWhereInput): [Port!]!
  templateNode: TemplateNode
  templateNodeId: Int
  updatedAt: DateTime!
}

type FlowNodeAvgAggregate {
  botFlowVersionId: Float
  id: Float
  nodeInfoId: Float
  nodePropsId: Float
  templateNodeId: Float
}

input FlowNodeAvgOrderByAggregateInput {
  botFlowVersionId: SortOrder
  id: SortOrder
  nodeInfoId: SortOrder
  nodePropsId: SortOrder
  templateNodeId: SortOrder
}

type FlowNodeCount {
  ports: Int!
}

type FlowNodeCountAggregate {
  _all: Int!
  botFlowVersionId: Int!
  id: Int!
  nodeInfoId: Int!
  nodePropsId: Int!
  templateNodeId: Int!
  updatedAt: Int!
}

input FlowNodeCountOrderByAggregateInput {
  botFlowVersionId: SortOrder
  id: SortOrder
  nodeInfoId: SortOrder
  nodePropsId: SortOrder
  templateNodeId: SortOrder
  updatedAt: SortOrder
}

input FlowNodeCreateInput {
  NodeProps: NodePropsCreateNestedOneWithoutFlowNodeInput!
  flow: BotFlowVersionCreateNestedOneWithoutNodesInput!
  info: NodeInfoCreateNestedOneWithoutFlowNodeInput!
  ports: PortCreateNestedManyWithoutNodeInput
  templateNode: TemplateNodeCreateNestedOneWithoutFlowNodeInput
  updatedAt: DateTime
}

input FlowNodeCreateManyFlowInput {
  id: Int
  nodeInfoId: Int!
  nodePropsId: Int!
  templateNodeId: Int
  updatedAt: DateTime
}

input FlowNodeCreateManyFlowInputEnvelope {
  data: [FlowNodeCreateManyFlowInput!]!
  skipDuplicates: Boolean
}

input FlowNodeCreateManyInput {
  botFlowVersionId: Int!
  id: Int
  nodeInfoId: Int!
  nodePropsId: Int!
  templateNodeId: Int
  updatedAt: DateTime
}

input FlowNodeCreateManyTemplateNodeInput {
  botFlowVersionId: Int!
  id: Int
  nodeInfoId: Int!
  nodePropsId: Int!
  updatedAt: DateTime
}

input FlowNodeCreateManyTemplateNodeInputEnvelope {
  data: [FlowNodeCreateManyTemplateNodeInput!]!
  skipDuplicates: Boolean
}

input FlowNodeCreateNestedManyWithoutFlowInput {
  connect: [FlowNodeWhereUniqueInput!]
  connectOrCreate: [FlowNodeCreateOrConnectWithoutFlowInput!]
  create: [FlowNodeCreateWithoutFlowInput!]
  createMany: FlowNodeCreateManyFlowInputEnvelope
}

input FlowNodeCreateNestedManyWithoutTemplateNodeInput {
  connect: [FlowNodeWhereUniqueInput!]
  connectOrCreate: [FlowNodeCreateOrConnectWithoutTemplateNodeInput!]
  create: [FlowNodeCreateWithoutTemplateNodeInput!]
  createMany: FlowNodeCreateManyTemplateNodeInputEnvelope
}

input FlowNodeCreateNestedOneWithoutInfoInput {
  connect: FlowNodeWhereUniqueInput
  connectOrCreate: FlowNodeCreateOrConnectWithoutInfoInput
  create: FlowNodeCreateWithoutInfoInput
}

input FlowNodeCreateNestedOneWithoutNodePropsInput {
  connect: FlowNodeWhereUniqueInput
  connectOrCreate: FlowNodeCreateOrConnectWithoutNodePropsInput
  create: FlowNodeCreateWithoutNodePropsInput
}

input FlowNodeCreateNestedOneWithoutPortsInput {
  connect: FlowNodeWhereUniqueInput
  connectOrCreate: FlowNodeCreateOrConnectWithoutPortsInput
  create: FlowNodeCreateWithoutPortsInput
}

input FlowNodeCreateOrConnectWithoutFlowInput {
  create: FlowNodeCreateWithoutFlowInput!
  where: FlowNodeWhereUniqueInput!
}

input FlowNodeCreateOrConnectWithoutInfoInput {
  create: FlowNodeCreateWithoutInfoInput!
  where: FlowNodeWhereUniqueInput!
}

input FlowNodeCreateOrConnectWithoutNodePropsInput {
  create: FlowNodeCreateWithoutNodePropsInput!
  where: FlowNodeWhereUniqueInput!
}

input FlowNodeCreateOrConnectWithoutPortsInput {
  create: FlowNodeCreateWithoutPortsInput!
  where: FlowNodeWhereUniqueInput!
}

input FlowNodeCreateOrConnectWithoutTemplateNodeInput {
  create: FlowNodeCreateWithoutTemplateNodeInput!
  where: FlowNodeWhereUniqueInput!
}

input FlowNodeCreateWithoutFlowInput {
  NodeProps: NodePropsCreateNestedOneWithoutFlowNodeInput!
  info: NodeInfoCreateNestedOneWithoutFlowNodeInput!
  ports: PortCreateNestedManyWithoutNodeInput
  templateNode: TemplateNodeCreateNestedOneWithoutFlowNodeInput
  updatedAt: DateTime
}

input FlowNodeCreateWithoutInfoInput {
  NodeProps: NodePropsCreateNestedOneWithoutFlowNodeInput!
  flow: BotFlowVersionCreateNestedOneWithoutNodesInput!
  ports: PortCreateNestedManyWithoutNodeInput
  templateNode: TemplateNodeCreateNestedOneWithoutFlowNodeInput
  updatedAt: DateTime
}

input FlowNodeCreateWithoutNodePropsInput {
  flow: BotFlowVersionCreateNestedOneWithoutNodesInput!
  info: NodeInfoCreateNestedOneWithoutFlowNodeInput!
  ports: PortCreateNestedManyWithoutNodeInput
  templateNode: TemplateNodeCreateNestedOneWithoutFlowNodeInput
  updatedAt: DateTime
}

input FlowNodeCreateWithoutPortsInput {
  NodeProps: NodePropsCreateNestedOneWithoutFlowNodeInput!
  flow: BotFlowVersionCreateNestedOneWithoutNodesInput!
  info: NodeInfoCreateNestedOneWithoutFlowNodeInput!
  templateNode: TemplateNodeCreateNestedOneWithoutFlowNodeInput
  updatedAt: DateTime
}

input FlowNodeCreateWithoutTemplateNodeInput {
  NodeProps: NodePropsCreateNestedOneWithoutFlowNodeInput!
  flow: BotFlowVersionCreateNestedOneWithoutNodesInput!
  info: NodeInfoCreateNestedOneWithoutFlowNodeInput!
  ports: PortCreateNestedManyWithoutNodeInput
  updatedAt: DateTime
}

type FlowNodeGroupBy {
  _avg: FlowNodeAvgAggregate
  _count: FlowNodeCountAggregate
  _max: FlowNodeMaxAggregate
  _min: FlowNodeMinAggregate
  _sum: FlowNodeSumAggregate
  botFlowVersionId: Int!
  id: Int!
  nodeInfoId: Int!
  nodePropsId: Int!
  templateNodeId: Int
  updatedAt: DateTime!
}

input FlowNodeListRelationFilter {
  every: FlowNodeWhereInput
  none: FlowNodeWhereInput
  some: FlowNodeWhereInput
}

type FlowNodeMaxAggregate {
  botFlowVersionId: Int
  id: Int
  nodeInfoId: Int
  nodePropsId: Int
  templateNodeId: Int
  updatedAt: DateTime
}

input FlowNodeMaxOrderByAggregateInput {
  botFlowVersionId: SortOrder
  id: SortOrder
  nodeInfoId: SortOrder
  nodePropsId: SortOrder
  templateNodeId: SortOrder
  updatedAt: SortOrder
}

type FlowNodeMinAggregate {
  botFlowVersionId: Int
  id: Int
  nodeInfoId: Int
  nodePropsId: Int
  templateNodeId: Int
  updatedAt: DateTime
}

input FlowNodeMinOrderByAggregateInput {
  botFlowVersionId: SortOrder
  id: SortOrder
  nodeInfoId: SortOrder
  nodePropsId: SortOrder
  templateNodeId: SortOrder
  updatedAt: SortOrder
}

input FlowNodeOrderByRelationAggregateInput {
  _count: SortOrder
}

input FlowNodeOrderByWithAggregationInput {
  _avg: FlowNodeAvgOrderByAggregateInput
  _count: FlowNodeCountOrderByAggregateInput
  _max: FlowNodeMaxOrderByAggregateInput
  _min: FlowNodeMinOrderByAggregateInput
  _sum: FlowNodeSumOrderByAggregateInput
  botFlowVersionId: SortOrder
  id: SortOrder
  nodeInfoId: SortOrder
  nodePropsId: SortOrder
  templateNodeId: SortOrder
  updatedAt: SortOrder
}

input FlowNodeOrderByWithRelationInput {
  NodeProps: NodePropsOrderByWithRelationInput
  botFlowVersionId: SortOrder
  flow: BotFlowVersionOrderByWithRelationInput
  id: SortOrder
  info: NodeInfoOrderByWithRelationInput
  nodeInfoId: SortOrder
  nodePropsId: SortOrder
  ports: PortOrderByRelationAggregateInput
  templateNode: TemplateNodeOrderByWithRelationInput
  templateNodeId: SortOrder
  updatedAt: SortOrder
}

input FlowNodeRelationFilter {
  is: FlowNodeWhereInput
  isNot: FlowNodeWhereInput
}

enum FlowNodeScalarFieldEnum {
  botFlowVersionId
  id
  nodeInfoId
  nodePropsId
  templateNodeId
  updatedAt
}

input FlowNodeScalarWhereInput {
  AND: [FlowNodeScalarWhereInput!]
  NOT: [FlowNodeScalarWhereInput!]
  OR: [FlowNodeScalarWhereInput!]
  botFlowVersionId: IntFilter
  id: IntFilter
  nodeInfoId: IntFilter
  nodePropsId: IntFilter
  templateNodeId: IntNullableFilter
  updatedAt: DateTimeFilter
}

input FlowNodeScalarWhereWithAggregatesInput {
  AND: [FlowNodeScalarWhereWithAggregatesInput!]
  NOT: [FlowNodeScalarWhereWithAggregatesInput!]
  OR: [FlowNodeScalarWhereWithAggregatesInput!]
  botFlowVersionId: IntWithAggregatesFilter
  id: IntWithAggregatesFilter
  nodeInfoId: IntWithAggregatesFilter
  nodePropsId: IntWithAggregatesFilter
  templateNodeId: IntNullableWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type FlowNodeSumAggregate {
  botFlowVersionId: Int
  id: Int
  nodeInfoId: Int
  nodePropsId: Int
  templateNodeId: Int
}

input FlowNodeSumOrderByAggregateInput {
  botFlowVersionId: SortOrder
  id: SortOrder
  nodeInfoId: SortOrder
  nodePropsId: SortOrder
  templateNodeId: SortOrder
}

input FlowNodeUpdateInput {
  NodeProps: NodePropsUpdateOneRequiredWithoutFlowNodeInput
  flow: BotFlowVersionUpdateOneRequiredWithoutNodesInput
  info: NodeInfoUpdateOneRequiredWithoutFlowNodeInput
  ports: PortUpdateManyWithoutNodeInput
  templateNode: TemplateNodeUpdateOneWithoutFlowNodeInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FlowNodeUpdateManyMutationInput {
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FlowNodeUpdateManyWithWhereWithoutFlowInput {
  data: FlowNodeUpdateManyMutationInput!
  where: FlowNodeScalarWhereInput!
}

input FlowNodeUpdateManyWithWhereWithoutTemplateNodeInput {
  data: FlowNodeUpdateManyMutationInput!
  where: FlowNodeScalarWhereInput!
}

input FlowNodeUpdateManyWithoutFlowInput {
  connect: [FlowNodeWhereUniqueInput!]
  connectOrCreate: [FlowNodeCreateOrConnectWithoutFlowInput!]
  create: [FlowNodeCreateWithoutFlowInput!]
  createMany: FlowNodeCreateManyFlowInputEnvelope
  delete: [FlowNodeWhereUniqueInput!]
  deleteMany: [FlowNodeScalarWhereInput!]
  disconnect: [FlowNodeWhereUniqueInput!]
  set: [FlowNodeWhereUniqueInput!]
  update: [FlowNodeUpdateWithWhereUniqueWithoutFlowInput!]
  updateMany: [FlowNodeUpdateManyWithWhereWithoutFlowInput!]
  upsert: [FlowNodeUpsertWithWhereUniqueWithoutFlowInput!]
}

input FlowNodeUpdateManyWithoutTemplateNodeInput {
  connect: [FlowNodeWhereUniqueInput!]
  connectOrCreate: [FlowNodeCreateOrConnectWithoutTemplateNodeInput!]
  create: [FlowNodeCreateWithoutTemplateNodeInput!]
  createMany: FlowNodeCreateManyTemplateNodeInputEnvelope
  delete: [FlowNodeWhereUniqueInput!]
  deleteMany: [FlowNodeScalarWhereInput!]
  disconnect: [FlowNodeWhereUniqueInput!]
  set: [FlowNodeWhereUniqueInput!]
  update: [FlowNodeUpdateWithWhereUniqueWithoutTemplateNodeInput!]
  updateMany: [FlowNodeUpdateManyWithWhereWithoutTemplateNodeInput!]
  upsert: [FlowNodeUpsertWithWhereUniqueWithoutTemplateNodeInput!]
}

input FlowNodeUpdateOneRequiredWithoutPortsInput {
  connect: FlowNodeWhereUniqueInput
  connectOrCreate: FlowNodeCreateOrConnectWithoutPortsInput
  create: FlowNodeCreateWithoutPortsInput
  update: FlowNodeUpdateWithoutPortsInput
  upsert: FlowNodeUpsertWithoutPortsInput
}

input FlowNodeUpdateOneWithoutInfoInput {
  connect: FlowNodeWhereUniqueInput
  connectOrCreate: FlowNodeCreateOrConnectWithoutInfoInput
  create: FlowNodeCreateWithoutInfoInput
  delete: Boolean
  disconnect: Boolean
  update: FlowNodeUpdateWithoutInfoInput
  upsert: FlowNodeUpsertWithoutInfoInput
}

input FlowNodeUpdateOneWithoutNodePropsInput {
  connect: FlowNodeWhereUniqueInput
  connectOrCreate: FlowNodeCreateOrConnectWithoutNodePropsInput
  create: FlowNodeCreateWithoutNodePropsInput
  delete: Boolean
  disconnect: Boolean
  update: FlowNodeUpdateWithoutNodePropsInput
  upsert: FlowNodeUpsertWithoutNodePropsInput
}

input FlowNodeUpdateWithWhereUniqueWithoutFlowInput {
  data: FlowNodeUpdateWithoutFlowInput!
  where: FlowNodeWhereUniqueInput!
}

input FlowNodeUpdateWithWhereUniqueWithoutTemplateNodeInput {
  data: FlowNodeUpdateWithoutTemplateNodeInput!
  where: FlowNodeWhereUniqueInput!
}

input FlowNodeUpdateWithoutFlowInput {
  NodeProps: NodePropsUpdateOneRequiredWithoutFlowNodeInput
  info: NodeInfoUpdateOneRequiredWithoutFlowNodeInput
  ports: PortUpdateManyWithoutNodeInput
  templateNode: TemplateNodeUpdateOneWithoutFlowNodeInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FlowNodeUpdateWithoutInfoInput {
  NodeProps: NodePropsUpdateOneRequiredWithoutFlowNodeInput
  flow: BotFlowVersionUpdateOneRequiredWithoutNodesInput
  ports: PortUpdateManyWithoutNodeInput
  templateNode: TemplateNodeUpdateOneWithoutFlowNodeInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FlowNodeUpdateWithoutNodePropsInput {
  flow: BotFlowVersionUpdateOneRequiredWithoutNodesInput
  info: NodeInfoUpdateOneRequiredWithoutFlowNodeInput
  ports: PortUpdateManyWithoutNodeInput
  templateNode: TemplateNodeUpdateOneWithoutFlowNodeInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FlowNodeUpdateWithoutPortsInput {
  NodeProps: NodePropsUpdateOneRequiredWithoutFlowNodeInput
  flow: BotFlowVersionUpdateOneRequiredWithoutNodesInput
  info: NodeInfoUpdateOneRequiredWithoutFlowNodeInput
  templateNode: TemplateNodeUpdateOneWithoutFlowNodeInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FlowNodeUpdateWithoutTemplateNodeInput {
  NodeProps: NodePropsUpdateOneRequiredWithoutFlowNodeInput
  flow: BotFlowVersionUpdateOneRequiredWithoutNodesInput
  info: NodeInfoUpdateOneRequiredWithoutFlowNodeInput
  ports: PortUpdateManyWithoutNodeInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FlowNodeUpsertWithWhereUniqueWithoutFlowInput {
  create: FlowNodeCreateWithoutFlowInput!
  update: FlowNodeUpdateWithoutFlowInput!
  where: FlowNodeWhereUniqueInput!
}

input FlowNodeUpsertWithWhereUniqueWithoutTemplateNodeInput {
  create: FlowNodeCreateWithoutTemplateNodeInput!
  update: FlowNodeUpdateWithoutTemplateNodeInput!
  where: FlowNodeWhereUniqueInput!
}

input FlowNodeUpsertWithoutInfoInput {
  create: FlowNodeCreateWithoutInfoInput!
  update: FlowNodeUpdateWithoutInfoInput!
}

input FlowNodeUpsertWithoutNodePropsInput {
  create: FlowNodeCreateWithoutNodePropsInput!
  update: FlowNodeUpdateWithoutNodePropsInput!
}

input FlowNodeUpsertWithoutPortsInput {
  create: FlowNodeCreateWithoutPortsInput!
  update: FlowNodeUpdateWithoutPortsInput!
}

input FlowNodeWhereInput {
  AND: [FlowNodeWhereInput!]
  NOT: [FlowNodeWhereInput!]
  NodeProps: NodePropsRelationFilter
  OR: [FlowNodeWhereInput!]
  botFlowVersionId: IntFilter
  flow: BotFlowVersionRelationFilter
  id: IntFilter
  info: NodeInfoRelationFilter
  nodeInfoId: IntFilter
  nodePropsId: IntFilter
  ports: PortListRelationFilter
  templateNode: TemplateNodeRelationFilter
  templateNodeId: IntNullableFilter
  updatedAt: DateTimeFilter
}

input FlowNodeWhereUniqueInput {
  id: Int
  nodeInfoId: Int
  nodePropsId: Int
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input IntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int!]
}

input IntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

type Mutation {
  createBotFlow(data: BotFlowCreateInput!): BotFlow!
  createBotFlowVersion(data: BotFlowVersionCreateInput!): BotFlowVersion!
  createConnection(data: ConnectionCreateInput!): Connection!
  createFlowNode(data: FlowNodeCreateInput!): FlowNode!
  createManyBotFlow(data: [BotFlowCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyBotFlowVersion(data: [BotFlowVersionCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyConnection(data: [ConnectionCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyFlowNode(data: [FlowNodeCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyNodeAudioProps(data: [NodeAudioPropsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyNodeCountdownProps(data: [NodeCountdownPropsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyNodeFileProps(data: [NodeFilePropsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyNodeImageProps(data: [NodeImagePropsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyNodeInfo(data: [NodeInfoCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyNodeLinkProps(data: [NodeLinkPropsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyNodeProps(data: [NodePropsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyNodeSwitchOptionProps(data: [NodeSwitchOptionPropsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyNodeSwitchProps(data: [NodeSwitchPropsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyNodeTextProps(data: [NodeTextPropsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyNodeVideoProps(data: [NodeVideoPropsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyNodeWaitProps(data: [NodeWaitPropsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPort(data: [PortCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTemplateNode(data: [TemplateNodeCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTemplateNodesGroup(data: [TemplateNodesGroupCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createNodeAudioProps(data: NodeAudioPropsCreateInput!): NodeAudioProps!
  createNodeCountdownProps(data: NodeCountdownPropsCreateInput!): NodeCountdownProps!
  createNodeFileProps(data: NodeFilePropsCreateInput!): NodeFileProps!
  createNodeImageProps(data: NodeImagePropsCreateInput!): NodeImageProps!
  createNodeInfo(data: NodeInfoCreateInput!): NodeInfo!
  createNodeLinkProps(data: NodeLinkPropsCreateInput!): NodeLinkProps!
  createNodeProps(data: NodePropsCreateInput!): NodeProps!
  createNodeSwitchOptionProps(data: NodeSwitchOptionPropsCreateInput!): NodeSwitchOptionProps!
  createNodeSwitchProps(data: NodeSwitchPropsCreateInput!): NodeSwitchProps!
  createNodeTextProps(data: NodeTextPropsCreateInput!): NodeTextProps!
  createNodeVideoProps(data: NodeVideoPropsCreateInput!): NodeVideoProps!
  createNodeWaitProps(data: NodeWaitPropsCreateInput!): NodeWaitProps!
  createPort(data: PortCreateInput!): Port!
  createTemplateNode(data: TemplateNodeCreateInput!): TemplateNode!
  createTemplateNodesGroup(data: TemplateNodesGroupCreateInput!): TemplateNodesGroup!
  deleteBotFlow(where: BotFlowWhereUniqueInput!): BotFlow
  deleteBotFlowVersion(where: BotFlowVersionWhereUniqueInput!): BotFlowVersion
  deleteConnection(where: ConnectionWhereUniqueInput!): Connection
  deleteFlowNode(where: FlowNodeWhereUniqueInput!): FlowNode
  deleteManyBotFlow(where: BotFlowWhereInput): AffectedRowsOutput!
  deleteManyBotFlowVersion(where: BotFlowVersionWhereInput): AffectedRowsOutput!
  deleteManyConnection(where: ConnectionWhereInput): AffectedRowsOutput!
  deleteManyFlowNode(where: FlowNodeWhereInput): AffectedRowsOutput!
  deleteManyNodeAudioProps(where: NodeAudioPropsWhereInput): AffectedRowsOutput!
  deleteManyNodeCountdownProps(where: NodeCountdownPropsWhereInput): AffectedRowsOutput!
  deleteManyNodeFileProps(where: NodeFilePropsWhereInput): AffectedRowsOutput!
  deleteManyNodeImageProps(where: NodeImagePropsWhereInput): AffectedRowsOutput!
  deleteManyNodeInfo(where: NodeInfoWhereInput): AffectedRowsOutput!
  deleteManyNodeLinkProps(where: NodeLinkPropsWhereInput): AffectedRowsOutput!
  deleteManyNodeProps(where: NodePropsWhereInput): AffectedRowsOutput!
  deleteManyNodeSwitchOptionProps(where: NodeSwitchOptionPropsWhereInput): AffectedRowsOutput!
  deleteManyNodeSwitchProps(where: NodeSwitchPropsWhereInput): AffectedRowsOutput!
  deleteManyNodeTextProps(where: NodeTextPropsWhereInput): AffectedRowsOutput!
  deleteManyNodeVideoProps(where: NodeVideoPropsWhereInput): AffectedRowsOutput!
  deleteManyNodeWaitProps(where: NodeWaitPropsWhereInput): AffectedRowsOutput!
  deleteManyPort(where: PortWhereInput): AffectedRowsOutput!
  deleteManyTemplateNode(where: TemplateNodeWhereInput): AffectedRowsOutput!
  deleteManyTemplateNodesGroup(where: TemplateNodesGroupWhereInput): AffectedRowsOutput!
  deleteNodeAudioProps(where: NodeAudioPropsWhereUniqueInput!): NodeAudioProps
  deleteNodeCountdownProps(where: NodeCountdownPropsWhereUniqueInput!): NodeCountdownProps
  deleteNodeFileProps(where: NodeFilePropsWhereUniqueInput!): NodeFileProps
  deleteNodeImageProps(where: NodeImagePropsWhereUniqueInput!): NodeImageProps
  deleteNodeInfo(where: NodeInfoWhereUniqueInput!): NodeInfo
  deleteNodeLinkProps(where: NodeLinkPropsWhereUniqueInput!): NodeLinkProps
  deleteNodeProps(where: NodePropsWhereUniqueInput!): NodeProps
  deleteNodeSwitchOptionProps(where: NodeSwitchOptionPropsWhereUniqueInput!): NodeSwitchOptionProps
  deleteNodeSwitchProps(where: NodeSwitchPropsWhereUniqueInput!): NodeSwitchProps
  deleteNodeTextProps(where: NodeTextPropsWhereUniqueInput!): NodeTextProps
  deleteNodeVideoProps(where: NodeVideoPropsWhereUniqueInput!): NodeVideoProps
  deleteNodeWaitProps(where: NodeWaitPropsWhereUniqueInput!): NodeWaitProps
  deletePort(where: PortWhereUniqueInput!): Port
  deleteTemplateNode(where: TemplateNodeWhereUniqueInput!): TemplateNode
  deleteTemplateNodesGroup(where: TemplateNodesGroupWhereUniqueInput!): TemplateNodesGroup
  updateBotFlow(data: BotFlowUpdateInput!, where: BotFlowWhereUniqueInput!): BotFlow
  updateBotFlowVersion(data: BotFlowVersionUpdateInput!, where: BotFlowVersionWhereUniqueInput!): BotFlowVersion
  updateConnection(data: ConnectionUpdateInput!, where: ConnectionWhereUniqueInput!): Connection
  updateFlowNode(data: FlowNodeUpdateInput!, where: FlowNodeWhereUniqueInput!): FlowNode
  updateManyBotFlow(data: BotFlowUpdateManyMutationInput!, where: BotFlowWhereInput): AffectedRowsOutput!
  updateManyBotFlowVersion(data: BotFlowVersionUpdateManyMutationInput!, where: BotFlowVersionWhereInput): AffectedRowsOutput!
  updateManyConnection(data: ConnectionUpdateManyMutationInput!, where: ConnectionWhereInput): AffectedRowsOutput!
  updateManyFlowNode(data: FlowNodeUpdateManyMutationInput!, where: FlowNodeWhereInput): AffectedRowsOutput!
  updateManyNodeAudioProps(data: NodeAudioPropsUpdateManyMutationInput!, where: NodeAudioPropsWhereInput): AffectedRowsOutput!
  updateManyNodeCountdownProps(data: NodeCountdownPropsUpdateManyMutationInput!, where: NodeCountdownPropsWhereInput): AffectedRowsOutput!
  updateManyNodeFileProps(data: NodeFilePropsUpdateManyMutationInput!, where: NodeFilePropsWhereInput): AffectedRowsOutput!
  updateManyNodeImageProps(data: NodeImagePropsUpdateManyMutationInput!, where: NodeImagePropsWhereInput): AffectedRowsOutput!
  updateManyNodeInfo(data: NodeInfoUpdateManyMutationInput!, where: NodeInfoWhereInput): AffectedRowsOutput!
  updateManyNodeLinkProps(data: NodeLinkPropsUpdateManyMutationInput!, where: NodeLinkPropsWhereInput): AffectedRowsOutput!
  updateManyNodeProps(data: NodePropsUpdateManyMutationInput!, where: NodePropsWhereInput): AffectedRowsOutput!
  updateManyNodeSwitchOptionProps(data: NodeSwitchOptionPropsUpdateManyMutationInput!, where: NodeSwitchOptionPropsWhereInput): AffectedRowsOutput!
  updateManyNodeSwitchProps(data: NodeSwitchPropsUpdateManyMutationInput!, where: NodeSwitchPropsWhereInput): AffectedRowsOutput!
  updateManyNodeTextProps(data: NodeTextPropsUpdateManyMutationInput!, where: NodeTextPropsWhereInput): AffectedRowsOutput!
  updateManyNodeVideoProps(data: NodeVideoPropsUpdateManyMutationInput!, where: NodeVideoPropsWhereInput): AffectedRowsOutput!
  updateManyNodeWaitProps(data: NodeWaitPropsUpdateManyMutationInput!, where: NodeWaitPropsWhereInput): AffectedRowsOutput!
  updateManyPort(data: PortUpdateManyMutationInput!, where: PortWhereInput): AffectedRowsOutput!
  updateManyTemplateNode(data: TemplateNodeUpdateManyMutationInput!, where: TemplateNodeWhereInput): AffectedRowsOutput!
  updateManyTemplateNodesGroup(data: TemplateNodesGroupUpdateManyMutationInput!, where: TemplateNodesGroupWhereInput): AffectedRowsOutput!
  updateNodeAudioProps(data: NodeAudioPropsUpdateInput!, where: NodeAudioPropsWhereUniqueInput!): NodeAudioProps
  updateNodeCountdownProps(data: NodeCountdownPropsUpdateInput!, where: NodeCountdownPropsWhereUniqueInput!): NodeCountdownProps
  updateNodeFileProps(data: NodeFilePropsUpdateInput!, where: NodeFilePropsWhereUniqueInput!): NodeFileProps
  updateNodeImageProps(data: NodeImagePropsUpdateInput!, where: NodeImagePropsWhereUniqueInput!): NodeImageProps
  updateNodeInfo(data: NodeInfoUpdateInput!, where: NodeInfoWhereUniqueInput!): NodeInfo
  updateNodeLinkProps(data: NodeLinkPropsUpdateInput!, where: NodeLinkPropsWhereUniqueInput!): NodeLinkProps
  updateNodeProps(data: NodePropsUpdateInput!, where: NodePropsWhereUniqueInput!): NodeProps
  updateNodeSwitchOptionProps(data: NodeSwitchOptionPropsUpdateInput!, where: NodeSwitchOptionPropsWhereUniqueInput!): NodeSwitchOptionProps
  updateNodeSwitchProps(data: NodeSwitchPropsUpdateInput!, where: NodeSwitchPropsWhereUniqueInput!): NodeSwitchProps
  updateNodeTextProps(data: NodeTextPropsUpdateInput!, where: NodeTextPropsWhereUniqueInput!): NodeTextProps
  updateNodeVideoProps(data: NodeVideoPropsUpdateInput!, where: NodeVideoPropsWhereUniqueInput!): NodeVideoProps
  updateNodeWaitProps(data: NodeWaitPropsUpdateInput!, where: NodeWaitPropsWhereUniqueInput!): NodeWaitProps
  updatePort(data: PortUpdateInput!, where: PortWhereUniqueInput!): Port
  updateTemplateNode(data: TemplateNodeUpdateInput!, where: TemplateNodeWhereUniqueInput!): TemplateNode
  updateTemplateNodesGroup(data: TemplateNodesGroupUpdateInput!, where: TemplateNodesGroupWhereUniqueInput!): TemplateNodesGroup
  upsertBotFlow(create: BotFlowCreateInput!, update: BotFlowUpdateInput!, where: BotFlowWhereUniqueInput!): BotFlow!
  upsertBotFlowVersion(create: BotFlowVersionCreateInput!, update: BotFlowVersionUpdateInput!, where: BotFlowVersionWhereUniqueInput!): BotFlowVersion!
  upsertConnection(create: ConnectionCreateInput!, update: ConnectionUpdateInput!, where: ConnectionWhereUniqueInput!): Connection!
  upsertFlowNode(create: FlowNodeCreateInput!, update: FlowNodeUpdateInput!, where: FlowNodeWhereUniqueInput!): FlowNode!
  upsertNodeAudioProps(create: NodeAudioPropsCreateInput!, update: NodeAudioPropsUpdateInput!, where: NodeAudioPropsWhereUniqueInput!): NodeAudioProps!
  upsertNodeCountdownProps(create: NodeCountdownPropsCreateInput!, update: NodeCountdownPropsUpdateInput!, where: NodeCountdownPropsWhereUniqueInput!): NodeCountdownProps!
  upsertNodeFileProps(create: NodeFilePropsCreateInput!, update: NodeFilePropsUpdateInput!, where: NodeFilePropsWhereUniqueInput!): NodeFileProps!
  upsertNodeImageProps(create: NodeImagePropsCreateInput!, update: NodeImagePropsUpdateInput!, where: NodeImagePropsWhereUniqueInput!): NodeImageProps!
  upsertNodeInfo(create: NodeInfoCreateInput!, update: NodeInfoUpdateInput!, where: NodeInfoWhereUniqueInput!): NodeInfo!
  upsertNodeLinkProps(create: NodeLinkPropsCreateInput!, update: NodeLinkPropsUpdateInput!, where: NodeLinkPropsWhereUniqueInput!): NodeLinkProps!
  upsertNodeProps(create: NodePropsCreateInput!, update: NodePropsUpdateInput!, where: NodePropsWhereUniqueInput!): NodeProps!
  upsertNodeSwitchOptionProps(create: NodeSwitchOptionPropsCreateInput!, update: NodeSwitchOptionPropsUpdateInput!, where: NodeSwitchOptionPropsWhereUniqueInput!): NodeSwitchOptionProps!
  upsertNodeSwitchProps(create: NodeSwitchPropsCreateInput!, update: NodeSwitchPropsUpdateInput!, where: NodeSwitchPropsWhereUniqueInput!): NodeSwitchProps!
  upsertNodeTextProps(create: NodeTextPropsCreateInput!, update: NodeTextPropsUpdateInput!, where: NodeTextPropsWhereUniqueInput!): NodeTextProps!
  upsertNodeVideoProps(create: NodeVideoPropsCreateInput!, update: NodeVideoPropsUpdateInput!, where: NodeVideoPropsWhereUniqueInput!): NodeVideoProps!
  upsertNodeWaitProps(create: NodeWaitPropsCreateInput!, update: NodeWaitPropsUpdateInput!, where: NodeWaitPropsWhereUniqueInput!): NodeWaitProps!
  upsertPort(create: PortCreateInput!, update: PortUpdateInput!, where: PortWhereUniqueInput!): Port!
  upsertTemplateNode(create: TemplateNodeCreateInput!, update: TemplateNodeUpdateInput!, where: TemplateNodeWhereUniqueInput!): TemplateNode!
  upsertTemplateNodesGroup(create: TemplateNodesGroupCreateInput!, update: TemplateNodesGroupUpdateInput!, where: TemplateNodesGroupWhereUniqueInput!): TemplateNodesGroup!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime!]
}

input NestedEnumNodeTypeFilter {
  equals: NodeType
  in: [NodeType!]
  not: NestedEnumNodeTypeFilter
  notIn: [NodeType!]
}

input NestedEnumNodeTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumNodeTypeFilter
  _min: NestedEnumNodeTypeFilter
  equals: NodeType
  in: [NodeType!]
  not: NestedEnumNodeTypeWithAggregatesFilter
  notIn: [NodeType!]
}

input NestedEnumSwitchDisplayTypeFilter {
  equals: SwitchDisplayType
  in: [SwitchDisplayType!]
  not: NestedEnumSwitchDisplayTypeFilter
  notIn: [SwitchDisplayType!]
}

input NestedEnumSwitchDisplayTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumSwitchDisplayTypeFilter
  _min: NestedEnumSwitchDisplayTypeFilter
  equals: SwitchDisplayType
  in: [SwitchDisplayType!]
  not: NestedEnumSwitchDisplayTypeWithAggregatesFilter
  notIn: [SwitchDisplayType!]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int!]
}

input NestedIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

type NodeAudioProps {
  id: Int!
  nodeProps: NodeProps!
  src: String!
}

type NodeAudioPropsAvgAggregate {
  id: Float
}

input NodeAudioPropsAvgOrderByAggregateInput {
  id: SortOrder
}

type NodeAudioPropsCountAggregate {
  _all: Int!
  id: Int!
  src: Int!
}

input NodeAudioPropsCountOrderByAggregateInput {
  id: SortOrder
  src: SortOrder
}

input NodeAudioPropsCreateInput {
  nodeProps: NodePropsCreateNestedOneWithoutNodeAudioPropsInput
  src: String!
}

input NodeAudioPropsCreateManyInput {
  id: Int
  src: String!
}

input NodeAudioPropsCreateNestedOneWithoutNodePropsInput {
  connect: NodeAudioPropsWhereUniqueInput
  connectOrCreate: NodeAudioPropsCreateOrConnectWithoutNodePropsInput
  create: NodeAudioPropsCreateWithoutNodePropsInput
}

input NodeAudioPropsCreateOrConnectWithoutNodePropsInput {
  create: NodeAudioPropsCreateWithoutNodePropsInput!
  where: NodeAudioPropsWhereUniqueInput!
}

input NodeAudioPropsCreateWithoutNodePropsInput {
  src: String!
}

type NodeAudioPropsGroupBy {
  _avg: NodeAudioPropsAvgAggregate
  _count: NodeAudioPropsCountAggregate
  _max: NodeAudioPropsMaxAggregate
  _min: NodeAudioPropsMinAggregate
  _sum: NodeAudioPropsSumAggregate
  id: Int!
  src: String!
}

type NodeAudioPropsMaxAggregate {
  id: Int
  src: String
}

input NodeAudioPropsMaxOrderByAggregateInput {
  id: SortOrder
  src: SortOrder
}

type NodeAudioPropsMinAggregate {
  id: Int
  src: String
}

input NodeAudioPropsMinOrderByAggregateInput {
  id: SortOrder
  src: SortOrder
}

input NodeAudioPropsOrderByWithAggregationInput {
  _avg: NodeAudioPropsAvgOrderByAggregateInput
  _count: NodeAudioPropsCountOrderByAggregateInput
  _max: NodeAudioPropsMaxOrderByAggregateInput
  _min: NodeAudioPropsMinOrderByAggregateInput
  _sum: NodeAudioPropsSumOrderByAggregateInput
  id: SortOrder
  src: SortOrder
}

input NodeAudioPropsOrderByWithRelationInput {
  id: SortOrder
  nodeProps: NodePropsOrderByWithRelationInput
  src: SortOrder
}

input NodeAudioPropsRelationFilter {
  is: NodeAudioPropsWhereInput
  isNot: NodeAudioPropsWhereInput
}

enum NodeAudioPropsScalarFieldEnum {
  id
  src
}

input NodeAudioPropsScalarWhereWithAggregatesInput {
  AND: [NodeAudioPropsScalarWhereWithAggregatesInput!]
  NOT: [NodeAudioPropsScalarWhereWithAggregatesInput!]
  OR: [NodeAudioPropsScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  src: StringWithAggregatesFilter
}

type NodeAudioPropsSumAggregate {
  id: Int
}

input NodeAudioPropsSumOrderByAggregateInput {
  id: SortOrder
}

input NodeAudioPropsUpdateInput {
  nodeProps: NodePropsUpdateOneRequiredWithoutNodeAudioPropsInput
  src: StringFieldUpdateOperationsInput
}

input NodeAudioPropsUpdateManyMutationInput {
  src: StringFieldUpdateOperationsInput
}

input NodeAudioPropsUpdateOneWithoutNodePropsInput {
  connect: NodeAudioPropsWhereUniqueInput
  connectOrCreate: NodeAudioPropsCreateOrConnectWithoutNodePropsInput
  create: NodeAudioPropsCreateWithoutNodePropsInput
  delete: Boolean
  disconnect: Boolean
  update: NodeAudioPropsUpdateWithoutNodePropsInput
  upsert: NodeAudioPropsUpsertWithoutNodePropsInput
}

input NodeAudioPropsUpdateWithoutNodePropsInput {
  src: StringFieldUpdateOperationsInput
}

input NodeAudioPropsUpsertWithoutNodePropsInput {
  create: NodeAudioPropsCreateWithoutNodePropsInput!
  update: NodeAudioPropsUpdateWithoutNodePropsInput!
}

input NodeAudioPropsWhereInput {
  AND: [NodeAudioPropsWhereInput!]
  NOT: [NodeAudioPropsWhereInput!]
  OR: [NodeAudioPropsWhereInput!]
  id: IntFilter
  nodeProps: NodePropsRelationFilter
  src: StringFilter
}

input NodeAudioPropsWhereUniqueInput {
  id: Int
}

type NodeCountdownProps {
  duration: Int!
  id: Int!
  nodeProps: NodeProps!
}

type NodeCountdownPropsAvgAggregate {
  duration: Float
  id: Float
}

input NodeCountdownPropsAvgOrderByAggregateInput {
  duration: SortOrder
  id: SortOrder
}

type NodeCountdownPropsCountAggregate {
  _all: Int!
  duration: Int!
  id: Int!
}

input NodeCountdownPropsCountOrderByAggregateInput {
  duration: SortOrder
  id: SortOrder
}

input NodeCountdownPropsCreateInput {
  duration: Int!
  nodeProps: NodePropsCreateNestedOneWithoutNodeCountdownPropsInput
}

input NodeCountdownPropsCreateManyInput {
  duration: Int!
  id: Int
}

input NodeCountdownPropsCreateNestedOneWithoutNodePropsInput {
  connect: NodeCountdownPropsWhereUniqueInput
  connectOrCreate: NodeCountdownPropsCreateOrConnectWithoutNodePropsInput
  create: NodeCountdownPropsCreateWithoutNodePropsInput
}

input NodeCountdownPropsCreateOrConnectWithoutNodePropsInput {
  create: NodeCountdownPropsCreateWithoutNodePropsInput!
  where: NodeCountdownPropsWhereUniqueInput!
}

input NodeCountdownPropsCreateWithoutNodePropsInput {
  duration: Int!
}

type NodeCountdownPropsGroupBy {
  _avg: NodeCountdownPropsAvgAggregate
  _count: NodeCountdownPropsCountAggregate
  _max: NodeCountdownPropsMaxAggregate
  _min: NodeCountdownPropsMinAggregate
  _sum: NodeCountdownPropsSumAggregate
  duration: Int!
  id: Int!
}

type NodeCountdownPropsMaxAggregate {
  duration: Int
  id: Int
}

input NodeCountdownPropsMaxOrderByAggregateInput {
  duration: SortOrder
  id: SortOrder
}

type NodeCountdownPropsMinAggregate {
  duration: Int
  id: Int
}

input NodeCountdownPropsMinOrderByAggregateInput {
  duration: SortOrder
  id: SortOrder
}

input NodeCountdownPropsOrderByWithAggregationInput {
  _avg: NodeCountdownPropsAvgOrderByAggregateInput
  _count: NodeCountdownPropsCountOrderByAggregateInput
  _max: NodeCountdownPropsMaxOrderByAggregateInput
  _min: NodeCountdownPropsMinOrderByAggregateInput
  _sum: NodeCountdownPropsSumOrderByAggregateInput
  duration: SortOrder
  id: SortOrder
}

input NodeCountdownPropsOrderByWithRelationInput {
  duration: SortOrder
  id: SortOrder
  nodeProps: NodePropsOrderByWithRelationInput
}

input NodeCountdownPropsRelationFilter {
  is: NodeCountdownPropsWhereInput
  isNot: NodeCountdownPropsWhereInput
}

enum NodeCountdownPropsScalarFieldEnum {
  duration
  id
}

input NodeCountdownPropsScalarWhereWithAggregatesInput {
  AND: [NodeCountdownPropsScalarWhereWithAggregatesInput!]
  NOT: [NodeCountdownPropsScalarWhereWithAggregatesInput!]
  OR: [NodeCountdownPropsScalarWhereWithAggregatesInput!]
  duration: IntWithAggregatesFilter
  id: IntWithAggregatesFilter
}

type NodeCountdownPropsSumAggregate {
  duration: Int
  id: Int
}

input NodeCountdownPropsSumOrderByAggregateInput {
  duration: SortOrder
  id: SortOrder
}

input NodeCountdownPropsUpdateInput {
  duration: IntFieldUpdateOperationsInput
  nodeProps: NodePropsUpdateOneRequiredWithoutNodeCountdownPropsInput
}

input NodeCountdownPropsUpdateManyMutationInput {
  duration: IntFieldUpdateOperationsInput
}

input NodeCountdownPropsUpdateOneWithoutNodePropsInput {
  connect: NodeCountdownPropsWhereUniqueInput
  connectOrCreate: NodeCountdownPropsCreateOrConnectWithoutNodePropsInput
  create: NodeCountdownPropsCreateWithoutNodePropsInput
  delete: Boolean
  disconnect: Boolean
  update: NodeCountdownPropsUpdateWithoutNodePropsInput
  upsert: NodeCountdownPropsUpsertWithoutNodePropsInput
}

input NodeCountdownPropsUpdateWithoutNodePropsInput {
  duration: IntFieldUpdateOperationsInput
}

input NodeCountdownPropsUpsertWithoutNodePropsInput {
  create: NodeCountdownPropsCreateWithoutNodePropsInput!
  update: NodeCountdownPropsUpdateWithoutNodePropsInput!
}

input NodeCountdownPropsWhereInput {
  AND: [NodeCountdownPropsWhereInput!]
  NOT: [NodeCountdownPropsWhereInput!]
  OR: [NodeCountdownPropsWhereInput!]
  duration: IntFilter
  id: IntFilter
  nodeProps: NodePropsRelationFilter
}

input NodeCountdownPropsWhereUniqueInput {
  id: Int
}

type NodeFileProps {
  id: Int!
  info: String!
  nodeProps: NodeProps!
  url: String!
}

type NodeFilePropsAvgAggregate {
  id: Float
}

input NodeFilePropsAvgOrderByAggregateInput {
  id: SortOrder
}

type NodeFilePropsCountAggregate {
  _all: Int!
  id: Int!
  info: Int!
  url: Int!
}

input NodeFilePropsCountOrderByAggregateInput {
  id: SortOrder
  info: SortOrder
  url: SortOrder
}

input NodeFilePropsCreateInput {
  info: String!
  nodeProps: NodePropsCreateNestedOneWithoutNodeFilePropsInput
  url: String!
}

input NodeFilePropsCreateManyInput {
  id: Int
  info: String!
  url: String!
}

input NodeFilePropsCreateNestedOneWithoutNodePropsInput {
  connect: NodeFilePropsWhereUniqueInput
  connectOrCreate: NodeFilePropsCreateOrConnectWithoutNodePropsInput
  create: NodeFilePropsCreateWithoutNodePropsInput
}

input NodeFilePropsCreateOrConnectWithoutNodePropsInput {
  create: NodeFilePropsCreateWithoutNodePropsInput!
  where: NodeFilePropsWhereUniqueInput!
}

input NodeFilePropsCreateWithoutNodePropsInput {
  info: String!
  url: String!
}

type NodeFilePropsGroupBy {
  _avg: NodeFilePropsAvgAggregate
  _count: NodeFilePropsCountAggregate
  _max: NodeFilePropsMaxAggregate
  _min: NodeFilePropsMinAggregate
  _sum: NodeFilePropsSumAggregate
  id: Int!
  info: String!
  url: String!
}

type NodeFilePropsMaxAggregate {
  id: Int
  info: String
  url: String
}

input NodeFilePropsMaxOrderByAggregateInput {
  id: SortOrder
  info: SortOrder
  url: SortOrder
}

type NodeFilePropsMinAggregate {
  id: Int
  info: String
  url: String
}

input NodeFilePropsMinOrderByAggregateInput {
  id: SortOrder
  info: SortOrder
  url: SortOrder
}

input NodeFilePropsOrderByWithAggregationInput {
  _avg: NodeFilePropsAvgOrderByAggregateInput
  _count: NodeFilePropsCountOrderByAggregateInput
  _max: NodeFilePropsMaxOrderByAggregateInput
  _min: NodeFilePropsMinOrderByAggregateInput
  _sum: NodeFilePropsSumOrderByAggregateInput
  id: SortOrder
  info: SortOrder
  url: SortOrder
}

input NodeFilePropsOrderByWithRelationInput {
  id: SortOrder
  info: SortOrder
  nodeProps: NodePropsOrderByWithRelationInput
  url: SortOrder
}

input NodeFilePropsRelationFilter {
  is: NodeFilePropsWhereInput
  isNot: NodeFilePropsWhereInput
}

enum NodeFilePropsScalarFieldEnum {
  id
  info
  url
}

input NodeFilePropsScalarWhereWithAggregatesInput {
  AND: [NodeFilePropsScalarWhereWithAggregatesInput!]
  NOT: [NodeFilePropsScalarWhereWithAggregatesInput!]
  OR: [NodeFilePropsScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  info: StringWithAggregatesFilter
  url: StringWithAggregatesFilter
}

type NodeFilePropsSumAggregate {
  id: Int
}

input NodeFilePropsSumOrderByAggregateInput {
  id: SortOrder
}

input NodeFilePropsUpdateInput {
  info: StringFieldUpdateOperationsInput
  nodeProps: NodePropsUpdateOneRequiredWithoutNodeFilePropsInput
  url: StringFieldUpdateOperationsInput
}

input NodeFilePropsUpdateManyMutationInput {
  info: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input NodeFilePropsUpdateOneWithoutNodePropsInput {
  connect: NodeFilePropsWhereUniqueInput
  connectOrCreate: NodeFilePropsCreateOrConnectWithoutNodePropsInput
  create: NodeFilePropsCreateWithoutNodePropsInput
  delete: Boolean
  disconnect: Boolean
  update: NodeFilePropsUpdateWithoutNodePropsInput
  upsert: NodeFilePropsUpsertWithoutNodePropsInput
}

input NodeFilePropsUpdateWithoutNodePropsInput {
  info: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input NodeFilePropsUpsertWithoutNodePropsInput {
  create: NodeFilePropsCreateWithoutNodePropsInput!
  update: NodeFilePropsUpdateWithoutNodePropsInput!
}

input NodeFilePropsWhereInput {
  AND: [NodeFilePropsWhereInput!]
  NOT: [NodeFilePropsWhereInput!]
  OR: [NodeFilePropsWhereInput!]
  id: IntFilter
  info: StringFilter
  nodeProps: NodePropsRelationFilter
  url: StringFilter
}

input NodeFilePropsWhereUniqueInput {
  id: Int
}

type NodeImageProps {
  id: Int!
  nodeProps: NodeProps!
  src: String!
}

type NodeImagePropsAvgAggregate {
  id: Float
}

input NodeImagePropsAvgOrderByAggregateInput {
  id: SortOrder
}

type NodeImagePropsCountAggregate {
  _all: Int!
  id: Int!
  src: Int!
}

input NodeImagePropsCountOrderByAggregateInput {
  id: SortOrder
  src: SortOrder
}

input NodeImagePropsCreateInput {
  nodeProps: NodePropsCreateNestedOneWithoutNodeImagePropsInput
  src: String!
}

input NodeImagePropsCreateManyInput {
  id: Int
  src: String!
}

input NodeImagePropsCreateNestedOneWithoutNodePropsInput {
  connect: NodeImagePropsWhereUniqueInput
  connectOrCreate: NodeImagePropsCreateOrConnectWithoutNodePropsInput
  create: NodeImagePropsCreateWithoutNodePropsInput
}

input NodeImagePropsCreateOrConnectWithoutNodePropsInput {
  create: NodeImagePropsCreateWithoutNodePropsInput!
  where: NodeImagePropsWhereUniqueInput!
}

input NodeImagePropsCreateWithoutNodePropsInput {
  src: String!
}

type NodeImagePropsGroupBy {
  _avg: NodeImagePropsAvgAggregate
  _count: NodeImagePropsCountAggregate
  _max: NodeImagePropsMaxAggregate
  _min: NodeImagePropsMinAggregate
  _sum: NodeImagePropsSumAggregate
  id: Int!
  src: String!
}

type NodeImagePropsMaxAggregate {
  id: Int
  src: String
}

input NodeImagePropsMaxOrderByAggregateInput {
  id: SortOrder
  src: SortOrder
}

type NodeImagePropsMinAggregate {
  id: Int
  src: String
}

input NodeImagePropsMinOrderByAggregateInput {
  id: SortOrder
  src: SortOrder
}

input NodeImagePropsOrderByWithAggregationInput {
  _avg: NodeImagePropsAvgOrderByAggregateInput
  _count: NodeImagePropsCountOrderByAggregateInput
  _max: NodeImagePropsMaxOrderByAggregateInput
  _min: NodeImagePropsMinOrderByAggregateInput
  _sum: NodeImagePropsSumOrderByAggregateInput
  id: SortOrder
  src: SortOrder
}

input NodeImagePropsOrderByWithRelationInput {
  id: SortOrder
  nodeProps: NodePropsOrderByWithRelationInput
  src: SortOrder
}

input NodeImagePropsRelationFilter {
  is: NodeImagePropsWhereInput
  isNot: NodeImagePropsWhereInput
}

enum NodeImagePropsScalarFieldEnum {
  id
  src
}

input NodeImagePropsScalarWhereWithAggregatesInput {
  AND: [NodeImagePropsScalarWhereWithAggregatesInput!]
  NOT: [NodeImagePropsScalarWhereWithAggregatesInput!]
  OR: [NodeImagePropsScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  src: StringWithAggregatesFilter
}

type NodeImagePropsSumAggregate {
  id: Int
}

input NodeImagePropsSumOrderByAggregateInput {
  id: SortOrder
}

input NodeImagePropsUpdateInput {
  nodeProps: NodePropsUpdateOneRequiredWithoutNodeImagePropsInput
  src: StringFieldUpdateOperationsInput
}

input NodeImagePropsUpdateManyMutationInput {
  src: StringFieldUpdateOperationsInput
}

input NodeImagePropsUpdateOneWithoutNodePropsInput {
  connect: NodeImagePropsWhereUniqueInput
  connectOrCreate: NodeImagePropsCreateOrConnectWithoutNodePropsInput
  create: NodeImagePropsCreateWithoutNodePropsInput
  delete: Boolean
  disconnect: Boolean
  update: NodeImagePropsUpdateWithoutNodePropsInput
  upsert: NodeImagePropsUpsertWithoutNodePropsInput
}

input NodeImagePropsUpdateWithoutNodePropsInput {
  src: StringFieldUpdateOperationsInput
}

input NodeImagePropsUpsertWithoutNodePropsInput {
  create: NodeImagePropsCreateWithoutNodePropsInput!
  update: NodeImagePropsUpdateWithoutNodePropsInput!
}

input NodeImagePropsWhereInput {
  AND: [NodeImagePropsWhereInput!]
  NOT: [NodeImagePropsWhereInput!]
  OR: [NodeImagePropsWhereInput!]
  id: IntFilter
  nodeProps: NodePropsRelationFilter
  src: StringFilter
}

input NodeImagePropsWhereUniqueInput {
  id: Int
}

type NodeInfo {
  FlowNode: FlowNode
  TemplateNode: TemplateNode
  description: String!
  iconLink: String!
  id: Int!
  name: String!
}

type NodeInfoAvgAggregate {
  id: Float
}

input NodeInfoAvgOrderByAggregateInput {
  id: SortOrder
}

type NodeInfoCountAggregate {
  _all: Int!
  description: Int!
  iconLink: Int!
  id: Int!
  name: Int!
}

input NodeInfoCountOrderByAggregateInput {
  description: SortOrder
  iconLink: SortOrder
  id: SortOrder
  name: SortOrder
}

input NodeInfoCreateInput {
  FlowNode: FlowNodeCreateNestedOneWithoutInfoInput
  TemplateNode: TemplateNodeCreateNestedOneWithoutInfoInput
  description: String!
  iconLink: String!
  name: String!
}

input NodeInfoCreateManyInput {
  description: String!
  iconLink: String!
  id: Int
  name: String!
}

input NodeInfoCreateNestedOneWithoutFlowNodeInput {
  connect: NodeInfoWhereUniqueInput
  connectOrCreate: NodeInfoCreateOrConnectWithoutFlowNodeInput
  create: NodeInfoCreateWithoutFlowNodeInput
}

input NodeInfoCreateNestedOneWithoutTemplateNodeInput {
  connect: NodeInfoWhereUniqueInput
  connectOrCreate: NodeInfoCreateOrConnectWithoutTemplateNodeInput
  create: NodeInfoCreateWithoutTemplateNodeInput
}

input NodeInfoCreateOrConnectWithoutFlowNodeInput {
  create: NodeInfoCreateWithoutFlowNodeInput!
  where: NodeInfoWhereUniqueInput!
}

input NodeInfoCreateOrConnectWithoutTemplateNodeInput {
  create: NodeInfoCreateWithoutTemplateNodeInput!
  where: NodeInfoWhereUniqueInput!
}

input NodeInfoCreateWithoutFlowNodeInput {
  TemplateNode: TemplateNodeCreateNestedOneWithoutInfoInput
  description: String!
  iconLink: String!
  name: String!
}

input NodeInfoCreateWithoutTemplateNodeInput {
  FlowNode: FlowNodeCreateNestedOneWithoutInfoInput
  description: String!
  iconLink: String!
  name: String!
}

type NodeInfoGroupBy {
  _avg: NodeInfoAvgAggregate
  _count: NodeInfoCountAggregate
  _max: NodeInfoMaxAggregate
  _min: NodeInfoMinAggregate
  _sum: NodeInfoSumAggregate
  description: String!
  iconLink: String!
  id: Int!
  name: String!
}

type NodeInfoMaxAggregate {
  description: String
  iconLink: String
  id: Int
  name: String
}

input NodeInfoMaxOrderByAggregateInput {
  description: SortOrder
  iconLink: SortOrder
  id: SortOrder
  name: SortOrder
}

type NodeInfoMinAggregate {
  description: String
  iconLink: String
  id: Int
  name: String
}

input NodeInfoMinOrderByAggregateInput {
  description: SortOrder
  iconLink: SortOrder
  id: SortOrder
  name: SortOrder
}

input NodeInfoOrderByWithAggregationInput {
  _avg: NodeInfoAvgOrderByAggregateInput
  _count: NodeInfoCountOrderByAggregateInput
  _max: NodeInfoMaxOrderByAggregateInput
  _min: NodeInfoMinOrderByAggregateInput
  _sum: NodeInfoSumOrderByAggregateInput
  description: SortOrder
  iconLink: SortOrder
  id: SortOrder
  name: SortOrder
}

input NodeInfoOrderByWithRelationInput {
  FlowNode: FlowNodeOrderByWithRelationInput
  TemplateNode: TemplateNodeOrderByWithRelationInput
  description: SortOrder
  iconLink: SortOrder
  id: SortOrder
  name: SortOrder
}

input NodeInfoRelationFilter {
  is: NodeInfoWhereInput
  isNot: NodeInfoWhereInput
}

enum NodeInfoScalarFieldEnum {
  description
  iconLink
  id
  name
}

input NodeInfoScalarWhereWithAggregatesInput {
  AND: [NodeInfoScalarWhereWithAggregatesInput!]
  NOT: [NodeInfoScalarWhereWithAggregatesInput!]
  OR: [NodeInfoScalarWhereWithAggregatesInput!]
  description: StringWithAggregatesFilter
  iconLink: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
}

type NodeInfoSumAggregate {
  id: Int
}

input NodeInfoSumOrderByAggregateInput {
  id: SortOrder
}

input NodeInfoUpdateInput {
  FlowNode: FlowNodeUpdateOneWithoutInfoInput
  TemplateNode: TemplateNodeUpdateOneWithoutInfoInput
  description: StringFieldUpdateOperationsInput
  iconLink: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input NodeInfoUpdateManyMutationInput {
  description: StringFieldUpdateOperationsInput
  iconLink: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input NodeInfoUpdateOneRequiredWithoutFlowNodeInput {
  connect: NodeInfoWhereUniqueInput
  connectOrCreate: NodeInfoCreateOrConnectWithoutFlowNodeInput
  create: NodeInfoCreateWithoutFlowNodeInput
  update: NodeInfoUpdateWithoutFlowNodeInput
  upsert: NodeInfoUpsertWithoutFlowNodeInput
}

input NodeInfoUpdateOneRequiredWithoutTemplateNodeInput {
  connect: NodeInfoWhereUniqueInput
  connectOrCreate: NodeInfoCreateOrConnectWithoutTemplateNodeInput
  create: NodeInfoCreateWithoutTemplateNodeInput
  update: NodeInfoUpdateWithoutTemplateNodeInput
  upsert: NodeInfoUpsertWithoutTemplateNodeInput
}

input NodeInfoUpdateWithoutFlowNodeInput {
  TemplateNode: TemplateNodeUpdateOneWithoutInfoInput
  description: StringFieldUpdateOperationsInput
  iconLink: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input NodeInfoUpdateWithoutTemplateNodeInput {
  FlowNode: FlowNodeUpdateOneWithoutInfoInput
  description: StringFieldUpdateOperationsInput
  iconLink: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input NodeInfoUpsertWithoutFlowNodeInput {
  create: NodeInfoCreateWithoutFlowNodeInput!
  update: NodeInfoUpdateWithoutFlowNodeInput!
}

input NodeInfoUpsertWithoutTemplateNodeInput {
  create: NodeInfoCreateWithoutTemplateNodeInput!
  update: NodeInfoUpdateWithoutTemplateNodeInput!
}

input NodeInfoWhereInput {
  AND: [NodeInfoWhereInput!]
  FlowNode: FlowNodeRelationFilter
  NOT: [NodeInfoWhereInput!]
  OR: [NodeInfoWhereInput!]
  TemplateNode: TemplateNodeRelationFilter
  description: StringFilter
  iconLink: StringFilter
  id: IntFilter
  name: StringFilter
}

input NodeInfoWhereUniqueInput {
  id: Int
}

type NodeLinkProps {
  id: Int!
  nodeProps: NodeProps!
  src: String!
  text: String!
}

type NodeLinkPropsAvgAggregate {
  id: Float
}

input NodeLinkPropsAvgOrderByAggregateInput {
  id: SortOrder
}

type NodeLinkPropsCountAggregate {
  _all: Int!
  id: Int!
  src: Int!
  text: Int!
}

input NodeLinkPropsCountOrderByAggregateInput {
  id: SortOrder
  src: SortOrder
  text: SortOrder
}

input NodeLinkPropsCreateInput {
  nodeProps: NodePropsCreateNestedOneWithoutNodeLinkPropsInput
  src: String!
  text: String!
}

input NodeLinkPropsCreateManyInput {
  id: Int
  src: String!
  text: String!
}

input NodeLinkPropsCreateNestedOneWithoutNodePropsInput {
  connect: NodeLinkPropsWhereUniqueInput
  connectOrCreate: NodeLinkPropsCreateOrConnectWithoutNodePropsInput
  create: NodeLinkPropsCreateWithoutNodePropsInput
}

input NodeLinkPropsCreateOrConnectWithoutNodePropsInput {
  create: NodeLinkPropsCreateWithoutNodePropsInput!
  where: NodeLinkPropsWhereUniqueInput!
}

input NodeLinkPropsCreateWithoutNodePropsInput {
  src: String!
  text: String!
}

type NodeLinkPropsGroupBy {
  _avg: NodeLinkPropsAvgAggregate
  _count: NodeLinkPropsCountAggregate
  _max: NodeLinkPropsMaxAggregate
  _min: NodeLinkPropsMinAggregate
  _sum: NodeLinkPropsSumAggregate
  id: Int!
  src: String!
  text: String!
}

type NodeLinkPropsMaxAggregate {
  id: Int
  src: String
  text: String
}

input NodeLinkPropsMaxOrderByAggregateInput {
  id: SortOrder
  src: SortOrder
  text: SortOrder
}

type NodeLinkPropsMinAggregate {
  id: Int
  src: String
  text: String
}

input NodeLinkPropsMinOrderByAggregateInput {
  id: SortOrder
  src: SortOrder
  text: SortOrder
}

input NodeLinkPropsOrderByWithAggregationInput {
  _avg: NodeLinkPropsAvgOrderByAggregateInput
  _count: NodeLinkPropsCountOrderByAggregateInput
  _max: NodeLinkPropsMaxOrderByAggregateInput
  _min: NodeLinkPropsMinOrderByAggregateInput
  _sum: NodeLinkPropsSumOrderByAggregateInput
  id: SortOrder
  src: SortOrder
  text: SortOrder
}

input NodeLinkPropsOrderByWithRelationInput {
  id: SortOrder
  nodeProps: NodePropsOrderByWithRelationInput
  src: SortOrder
  text: SortOrder
}

input NodeLinkPropsRelationFilter {
  is: NodeLinkPropsWhereInput
  isNot: NodeLinkPropsWhereInput
}

enum NodeLinkPropsScalarFieldEnum {
  id
  src
  text
}

input NodeLinkPropsScalarWhereWithAggregatesInput {
  AND: [NodeLinkPropsScalarWhereWithAggregatesInput!]
  NOT: [NodeLinkPropsScalarWhereWithAggregatesInput!]
  OR: [NodeLinkPropsScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  src: StringWithAggregatesFilter
  text: StringWithAggregatesFilter
}

type NodeLinkPropsSumAggregate {
  id: Int
}

input NodeLinkPropsSumOrderByAggregateInput {
  id: SortOrder
}

input NodeLinkPropsUpdateInput {
  nodeProps: NodePropsUpdateOneRequiredWithoutNodeLinkPropsInput
  src: StringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
}

input NodeLinkPropsUpdateManyMutationInput {
  src: StringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
}

input NodeLinkPropsUpdateOneWithoutNodePropsInput {
  connect: NodeLinkPropsWhereUniqueInput
  connectOrCreate: NodeLinkPropsCreateOrConnectWithoutNodePropsInput
  create: NodeLinkPropsCreateWithoutNodePropsInput
  delete: Boolean
  disconnect: Boolean
  update: NodeLinkPropsUpdateWithoutNodePropsInput
  upsert: NodeLinkPropsUpsertWithoutNodePropsInput
}

input NodeLinkPropsUpdateWithoutNodePropsInput {
  src: StringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
}

input NodeLinkPropsUpsertWithoutNodePropsInput {
  create: NodeLinkPropsCreateWithoutNodePropsInput!
  update: NodeLinkPropsUpdateWithoutNodePropsInput!
}

input NodeLinkPropsWhereInput {
  AND: [NodeLinkPropsWhereInput!]
  NOT: [NodeLinkPropsWhereInput!]
  OR: [NodeLinkPropsWhereInput!]
  id: IntFilter
  nodeProps: NodePropsRelationFilter
  src: StringFilter
  text: StringFilter
}

input NodeLinkPropsWhereUniqueInput {
  id: Int
}

type NodeProps {
  NodeAudioProps: NodeAudioProps
  NodeCountdownProps: NodeCountdownProps
  NodeFileProps: NodeFileProps
  NodeImageProps: NodeImageProps
  NodeLinkProps: NodeLinkProps
  NodeSwitchOptionProps: NodeSwitchOptionProps
  NodeSwitchProps: NodeSwitchProps
  NodeTextProps: NodeTextProps
  NodeVideoProps: NodeVideoProps
  NodeWaitProps: NodeWaitProps
  createdAt: DateTime!
  flowNode: FlowNode
  id: Int!
  templateNode: TemplateNode
  type: NodeType!
}

type NodePropsAvgAggregate {
  id: Float
}

input NodePropsAvgOrderByAggregateInput {
  id: SortOrder
}

type NodePropsCountAggregate {
  _all: Int!
  createdAt: Int!
  id: Int!
  type: Int!
}

input NodePropsCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  type: SortOrder
}

input NodePropsCreateInput {
  NodeAudioProps: NodeAudioPropsCreateNestedOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsCreateNestedOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsCreateNestedOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsCreateNestedOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsCreateNestedOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsCreateNestedOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsCreateNestedOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsCreateNestedOneWithoutNodePropsInput
  createdAt: DateTime
  flowNode: FlowNodeCreateNestedOneWithoutNodePropsInput
  templateNode: TemplateNodeCreateNestedOneWithoutNodePropsInput
  type: NodeType
}

input NodePropsCreateManyInput {
  createdAt: DateTime
  id: Int
  type: NodeType
}

input NodePropsCreateNestedOneWithoutFlowNodeInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutFlowNodeInput
  create: NodePropsCreateWithoutFlowNodeInput
}

input NodePropsCreateNestedOneWithoutNodeAudioPropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeAudioPropsInput
  create: NodePropsCreateWithoutNodeAudioPropsInput
}

input NodePropsCreateNestedOneWithoutNodeCountdownPropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeCountdownPropsInput
  create: NodePropsCreateWithoutNodeCountdownPropsInput
}

input NodePropsCreateNestedOneWithoutNodeFilePropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeFilePropsInput
  create: NodePropsCreateWithoutNodeFilePropsInput
}

input NodePropsCreateNestedOneWithoutNodeImagePropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeImagePropsInput
  create: NodePropsCreateWithoutNodeImagePropsInput
}

input NodePropsCreateNestedOneWithoutNodeLinkPropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeLinkPropsInput
  create: NodePropsCreateWithoutNodeLinkPropsInput
}

input NodePropsCreateNestedOneWithoutNodeSwitchOptionPropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeSwitchOptionPropsInput
  create: NodePropsCreateWithoutNodeSwitchOptionPropsInput
}

input NodePropsCreateNestedOneWithoutNodeSwitchPropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeSwitchPropsInput
  create: NodePropsCreateWithoutNodeSwitchPropsInput
}

input NodePropsCreateNestedOneWithoutNodeTextPropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeTextPropsInput
  create: NodePropsCreateWithoutNodeTextPropsInput
}

input NodePropsCreateNestedOneWithoutNodeVideoPropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeVideoPropsInput
  create: NodePropsCreateWithoutNodeVideoPropsInput
}

input NodePropsCreateNestedOneWithoutNodeWaitPropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeWaitPropsInput
  create: NodePropsCreateWithoutNodeWaitPropsInput
}

input NodePropsCreateNestedOneWithoutTemplateNodeInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutTemplateNodeInput
  create: NodePropsCreateWithoutTemplateNodeInput
}

input NodePropsCreateOrConnectWithoutFlowNodeInput {
  create: NodePropsCreateWithoutFlowNodeInput!
  where: NodePropsWhereUniqueInput!
}

input NodePropsCreateOrConnectWithoutNodeAudioPropsInput {
  create: NodePropsCreateWithoutNodeAudioPropsInput!
  where: NodePropsWhereUniqueInput!
}

input NodePropsCreateOrConnectWithoutNodeCountdownPropsInput {
  create: NodePropsCreateWithoutNodeCountdownPropsInput!
  where: NodePropsWhereUniqueInput!
}

input NodePropsCreateOrConnectWithoutNodeFilePropsInput {
  create: NodePropsCreateWithoutNodeFilePropsInput!
  where: NodePropsWhereUniqueInput!
}

input NodePropsCreateOrConnectWithoutNodeImagePropsInput {
  create: NodePropsCreateWithoutNodeImagePropsInput!
  where: NodePropsWhereUniqueInput!
}

input NodePropsCreateOrConnectWithoutNodeLinkPropsInput {
  create: NodePropsCreateWithoutNodeLinkPropsInput!
  where: NodePropsWhereUniqueInput!
}

input NodePropsCreateOrConnectWithoutNodeSwitchOptionPropsInput {
  create: NodePropsCreateWithoutNodeSwitchOptionPropsInput!
  where: NodePropsWhereUniqueInput!
}

input NodePropsCreateOrConnectWithoutNodeSwitchPropsInput {
  create: NodePropsCreateWithoutNodeSwitchPropsInput!
  where: NodePropsWhereUniqueInput!
}

input NodePropsCreateOrConnectWithoutNodeTextPropsInput {
  create: NodePropsCreateWithoutNodeTextPropsInput!
  where: NodePropsWhereUniqueInput!
}

input NodePropsCreateOrConnectWithoutNodeVideoPropsInput {
  create: NodePropsCreateWithoutNodeVideoPropsInput!
  where: NodePropsWhereUniqueInput!
}

input NodePropsCreateOrConnectWithoutNodeWaitPropsInput {
  create: NodePropsCreateWithoutNodeWaitPropsInput!
  where: NodePropsWhereUniqueInput!
}

input NodePropsCreateOrConnectWithoutTemplateNodeInput {
  create: NodePropsCreateWithoutTemplateNodeInput!
  where: NodePropsWhereUniqueInput!
}

input NodePropsCreateWithoutFlowNodeInput {
  NodeAudioProps: NodeAudioPropsCreateNestedOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsCreateNestedOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsCreateNestedOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsCreateNestedOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsCreateNestedOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsCreateNestedOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsCreateNestedOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsCreateNestedOneWithoutNodePropsInput
  createdAt: DateTime
  templateNode: TemplateNodeCreateNestedOneWithoutNodePropsInput
  type: NodeType
}

input NodePropsCreateWithoutNodeAudioPropsInput {
  NodeCountdownProps: NodeCountdownPropsCreateNestedOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsCreateNestedOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsCreateNestedOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsCreateNestedOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsCreateNestedOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsCreateNestedOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsCreateNestedOneWithoutNodePropsInput
  createdAt: DateTime
  flowNode: FlowNodeCreateNestedOneWithoutNodePropsInput
  templateNode: TemplateNodeCreateNestedOneWithoutNodePropsInput
  type: NodeType
}

input NodePropsCreateWithoutNodeCountdownPropsInput {
  NodeAudioProps: NodeAudioPropsCreateNestedOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsCreateNestedOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsCreateNestedOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsCreateNestedOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsCreateNestedOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsCreateNestedOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsCreateNestedOneWithoutNodePropsInput
  createdAt: DateTime
  flowNode: FlowNodeCreateNestedOneWithoutNodePropsInput
  templateNode: TemplateNodeCreateNestedOneWithoutNodePropsInput
  type: NodeType
}

input NodePropsCreateWithoutNodeFilePropsInput {
  NodeAudioProps: NodeAudioPropsCreateNestedOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsCreateNestedOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsCreateNestedOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsCreateNestedOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsCreateNestedOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsCreateNestedOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsCreateNestedOneWithoutNodePropsInput
  createdAt: DateTime
  flowNode: FlowNodeCreateNestedOneWithoutNodePropsInput
  templateNode: TemplateNodeCreateNestedOneWithoutNodePropsInput
  type: NodeType
}

input NodePropsCreateWithoutNodeImagePropsInput {
  NodeAudioProps: NodeAudioPropsCreateNestedOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsCreateNestedOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsCreateNestedOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsCreateNestedOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsCreateNestedOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsCreateNestedOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsCreateNestedOneWithoutNodePropsInput
  createdAt: DateTime
  flowNode: FlowNodeCreateNestedOneWithoutNodePropsInput
  templateNode: TemplateNodeCreateNestedOneWithoutNodePropsInput
  type: NodeType
}

input NodePropsCreateWithoutNodeLinkPropsInput {
  NodeAudioProps: NodeAudioPropsCreateNestedOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsCreateNestedOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsCreateNestedOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsCreateNestedOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsCreateNestedOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsCreateNestedOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsCreateNestedOneWithoutNodePropsInput
  createdAt: DateTime
  flowNode: FlowNodeCreateNestedOneWithoutNodePropsInput
  templateNode: TemplateNodeCreateNestedOneWithoutNodePropsInput
  type: NodeType
}

input NodePropsCreateWithoutNodeSwitchOptionPropsInput {
  NodeAudioProps: NodeAudioPropsCreateNestedOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsCreateNestedOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsCreateNestedOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsCreateNestedOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsCreateNestedOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsCreateNestedOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsCreateNestedOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsCreateNestedOneWithoutNodePropsInput
  createdAt: DateTime
  flowNode: FlowNodeCreateNestedOneWithoutNodePropsInput
  templateNode: TemplateNodeCreateNestedOneWithoutNodePropsInput
  type: NodeType
}

input NodePropsCreateWithoutNodeSwitchPropsInput {
  NodeAudioProps: NodeAudioPropsCreateNestedOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsCreateNestedOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsCreateNestedOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsCreateNestedOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsCreateNestedOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsCreateNestedOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsCreateNestedOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsCreateNestedOneWithoutNodePropsInput
  createdAt: DateTime
  flowNode: FlowNodeCreateNestedOneWithoutNodePropsInput
  templateNode: TemplateNodeCreateNestedOneWithoutNodePropsInput
  type: NodeType
}

input NodePropsCreateWithoutNodeTextPropsInput {
  NodeAudioProps: NodeAudioPropsCreateNestedOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsCreateNestedOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsCreateNestedOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsCreateNestedOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsCreateNestedOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsCreateNestedOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsCreateNestedOneWithoutNodePropsInput
  createdAt: DateTime
  flowNode: FlowNodeCreateNestedOneWithoutNodePropsInput
  templateNode: TemplateNodeCreateNestedOneWithoutNodePropsInput
  type: NodeType
}

input NodePropsCreateWithoutNodeVideoPropsInput {
  NodeAudioProps: NodeAudioPropsCreateNestedOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsCreateNestedOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsCreateNestedOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsCreateNestedOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsCreateNestedOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsCreateNestedOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsCreateNestedOneWithoutNodePropsInput
  createdAt: DateTime
  flowNode: FlowNodeCreateNestedOneWithoutNodePropsInput
  templateNode: TemplateNodeCreateNestedOneWithoutNodePropsInput
  type: NodeType
}

input NodePropsCreateWithoutNodeWaitPropsInput {
  NodeAudioProps: NodeAudioPropsCreateNestedOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsCreateNestedOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsCreateNestedOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsCreateNestedOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsCreateNestedOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsCreateNestedOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsCreateNestedOneWithoutNodePropsInput
  createdAt: DateTime
  flowNode: FlowNodeCreateNestedOneWithoutNodePropsInput
  templateNode: TemplateNodeCreateNestedOneWithoutNodePropsInput
  type: NodeType
}

input NodePropsCreateWithoutTemplateNodeInput {
  NodeAudioProps: NodeAudioPropsCreateNestedOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsCreateNestedOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsCreateNestedOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsCreateNestedOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsCreateNestedOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsCreateNestedOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsCreateNestedOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsCreateNestedOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsCreateNestedOneWithoutNodePropsInput
  createdAt: DateTime
  flowNode: FlowNodeCreateNestedOneWithoutNodePropsInput
  type: NodeType
}

type NodePropsGroupBy {
  _avg: NodePropsAvgAggregate
  _count: NodePropsCountAggregate
  _max: NodePropsMaxAggregate
  _min: NodePropsMinAggregate
  _sum: NodePropsSumAggregate
  createdAt: DateTime!
  id: Int!
  type: NodeType!
}

type NodePropsMaxAggregate {
  createdAt: DateTime
  id: Int
  type: NodeType
}

input NodePropsMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  type: SortOrder
}

type NodePropsMinAggregate {
  createdAt: DateTime
  id: Int
  type: NodeType
}

input NodePropsMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  type: SortOrder
}

input NodePropsOrderByWithAggregationInput {
  _avg: NodePropsAvgOrderByAggregateInput
  _count: NodePropsCountOrderByAggregateInput
  _max: NodePropsMaxOrderByAggregateInput
  _min: NodePropsMinOrderByAggregateInput
  _sum: NodePropsSumOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  type: SortOrder
}

input NodePropsOrderByWithRelationInput {
  NodeAudioProps: NodeAudioPropsOrderByWithRelationInput
  NodeCountdownProps: NodeCountdownPropsOrderByWithRelationInput
  NodeFileProps: NodeFilePropsOrderByWithRelationInput
  NodeImageProps: NodeImagePropsOrderByWithRelationInput
  NodeLinkProps: NodeLinkPropsOrderByWithRelationInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsOrderByWithRelationInput
  NodeSwitchProps: NodeSwitchPropsOrderByWithRelationInput
  NodeTextProps: NodeTextPropsOrderByWithRelationInput
  NodeVideoProps: NodeVideoPropsOrderByWithRelationInput
  NodeWaitProps: NodeWaitPropsOrderByWithRelationInput
  createdAt: SortOrder
  flowNode: FlowNodeOrderByWithRelationInput
  id: SortOrder
  templateNode: TemplateNodeOrderByWithRelationInput
  type: SortOrder
}

input NodePropsRelationFilter {
  is: NodePropsWhereInput
  isNot: NodePropsWhereInput
}

enum NodePropsScalarFieldEnum {
  createdAt
  id
  type
}

input NodePropsScalarWhereWithAggregatesInput {
  AND: [NodePropsScalarWhereWithAggregatesInput!]
  NOT: [NodePropsScalarWhereWithAggregatesInput!]
  OR: [NodePropsScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  type: EnumNodeTypeWithAggregatesFilter
}

type NodePropsSumAggregate {
  id: Int
}

input NodePropsSumOrderByAggregateInput {
  id: SortOrder
}

input NodePropsUpdateInput {
  NodeAudioProps: NodeAudioPropsUpdateOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsUpdateOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsUpdateOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsUpdateOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsUpdateOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsUpdateOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsUpdateOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsUpdateOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsUpdateOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsUpdateOneWithoutNodePropsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  flowNode: FlowNodeUpdateOneWithoutNodePropsInput
  templateNode: TemplateNodeUpdateOneWithoutNodePropsInput
  type: EnumNodeTypeFieldUpdateOperationsInput
}

input NodePropsUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  type: EnumNodeTypeFieldUpdateOperationsInput
}

input NodePropsUpdateOneRequiredWithoutFlowNodeInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutFlowNodeInput
  create: NodePropsCreateWithoutFlowNodeInput
  update: NodePropsUpdateWithoutFlowNodeInput
  upsert: NodePropsUpsertWithoutFlowNodeInput
}

input NodePropsUpdateOneRequiredWithoutNodeAudioPropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeAudioPropsInput
  create: NodePropsCreateWithoutNodeAudioPropsInput
  update: NodePropsUpdateWithoutNodeAudioPropsInput
  upsert: NodePropsUpsertWithoutNodeAudioPropsInput
}

input NodePropsUpdateOneRequiredWithoutNodeCountdownPropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeCountdownPropsInput
  create: NodePropsCreateWithoutNodeCountdownPropsInput
  update: NodePropsUpdateWithoutNodeCountdownPropsInput
  upsert: NodePropsUpsertWithoutNodeCountdownPropsInput
}

input NodePropsUpdateOneRequiredWithoutNodeFilePropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeFilePropsInput
  create: NodePropsCreateWithoutNodeFilePropsInput
  update: NodePropsUpdateWithoutNodeFilePropsInput
  upsert: NodePropsUpsertWithoutNodeFilePropsInput
}

input NodePropsUpdateOneRequiredWithoutNodeImagePropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeImagePropsInput
  create: NodePropsCreateWithoutNodeImagePropsInput
  update: NodePropsUpdateWithoutNodeImagePropsInput
  upsert: NodePropsUpsertWithoutNodeImagePropsInput
}

input NodePropsUpdateOneRequiredWithoutNodeLinkPropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeLinkPropsInput
  create: NodePropsCreateWithoutNodeLinkPropsInput
  update: NodePropsUpdateWithoutNodeLinkPropsInput
  upsert: NodePropsUpsertWithoutNodeLinkPropsInput
}

input NodePropsUpdateOneRequiredWithoutNodeSwitchOptionPropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeSwitchOptionPropsInput
  create: NodePropsCreateWithoutNodeSwitchOptionPropsInput
  update: NodePropsUpdateWithoutNodeSwitchOptionPropsInput
  upsert: NodePropsUpsertWithoutNodeSwitchOptionPropsInput
}

input NodePropsUpdateOneRequiredWithoutNodeSwitchPropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeSwitchPropsInput
  create: NodePropsCreateWithoutNodeSwitchPropsInput
  update: NodePropsUpdateWithoutNodeSwitchPropsInput
  upsert: NodePropsUpsertWithoutNodeSwitchPropsInput
}

input NodePropsUpdateOneRequiredWithoutNodeTextPropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeTextPropsInput
  create: NodePropsCreateWithoutNodeTextPropsInput
  update: NodePropsUpdateWithoutNodeTextPropsInput
  upsert: NodePropsUpsertWithoutNodeTextPropsInput
}

input NodePropsUpdateOneRequiredWithoutNodeVideoPropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeVideoPropsInput
  create: NodePropsCreateWithoutNodeVideoPropsInput
  update: NodePropsUpdateWithoutNodeVideoPropsInput
  upsert: NodePropsUpsertWithoutNodeVideoPropsInput
}

input NodePropsUpdateOneRequiredWithoutNodeWaitPropsInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutNodeWaitPropsInput
  create: NodePropsCreateWithoutNodeWaitPropsInput
  update: NodePropsUpdateWithoutNodeWaitPropsInput
  upsert: NodePropsUpsertWithoutNodeWaitPropsInput
}

input NodePropsUpdateOneRequiredWithoutTemplateNodeInput {
  connect: NodePropsWhereUniqueInput
  connectOrCreate: NodePropsCreateOrConnectWithoutTemplateNodeInput
  create: NodePropsCreateWithoutTemplateNodeInput
  update: NodePropsUpdateWithoutTemplateNodeInput
  upsert: NodePropsUpsertWithoutTemplateNodeInput
}

input NodePropsUpdateWithoutFlowNodeInput {
  NodeAudioProps: NodeAudioPropsUpdateOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsUpdateOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsUpdateOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsUpdateOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsUpdateOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsUpdateOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsUpdateOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsUpdateOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsUpdateOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsUpdateOneWithoutNodePropsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  templateNode: TemplateNodeUpdateOneWithoutNodePropsInput
  type: EnumNodeTypeFieldUpdateOperationsInput
}

input NodePropsUpdateWithoutNodeAudioPropsInput {
  NodeCountdownProps: NodeCountdownPropsUpdateOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsUpdateOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsUpdateOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsUpdateOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsUpdateOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsUpdateOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsUpdateOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsUpdateOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsUpdateOneWithoutNodePropsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  flowNode: FlowNodeUpdateOneWithoutNodePropsInput
  templateNode: TemplateNodeUpdateOneWithoutNodePropsInput
  type: EnumNodeTypeFieldUpdateOperationsInput
}

input NodePropsUpdateWithoutNodeCountdownPropsInput {
  NodeAudioProps: NodeAudioPropsUpdateOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsUpdateOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsUpdateOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsUpdateOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsUpdateOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsUpdateOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsUpdateOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsUpdateOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsUpdateOneWithoutNodePropsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  flowNode: FlowNodeUpdateOneWithoutNodePropsInput
  templateNode: TemplateNodeUpdateOneWithoutNodePropsInput
  type: EnumNodeTypeFieldUpdateOperationsInput
}

input NodePropsUpdateWithoutNodeFilePropsInput {
  NodeAudioProps: NodeAudioPropsUpdateOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsUpdateOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsUpdateOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsUpdateOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsUpdateOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsUpdateOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsUpdateOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsUpdateOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsUpdateOneWithoutNodePropsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  flowNode: FlowNodeUpdateOneWithoutNodePropsInput
  templateNode: TemplateNodeUpdateOneWithoutNodePropsInput
  type: EnumNodeTypeFieldUpdateOperationsInput
}

input NodePropsUpdateWithoutNodeImagePropsInput {
  NodeAudioProps: NodeAudioPropsUpdateOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsUpdateOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsUpdateOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsUpdateOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsUpdateOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsUpdateOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsUpdateOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsUpdateOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsUpdateOneWithoutNodePropsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  flowNode: FlowNodeUpdateOneWithoutNodePropsInput
  templateNode: TemplateNodeUpdateOneWithoutNodePropsInput
  type: EnumNodeTypeFieldUpdateOperationsInput
}

input NodePropsUpdateWithoutNodeLinkPropsInput {
  NodeAudioProps: NodeAudioPropsUpdateOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsUpdateOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsUpdateOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsUpdateOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsUpdateOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsUpdateOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsUpdateOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsUpdateOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsUpdateOneWithoutNodePropsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  flowNode: FlowNodeUpdateOneWithoutNodePropsInput
  templateNode: TemplateNodeUpdateOneWithoutNodePropsInput
  type: EnumNodeTypeFieldUpdateOperationsInput
}

input NodePropsUpdateWithoutNodeSwitchOptionPropsInput {
  NodeAudioProps: NodeAudioPropsUpdateOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsUpdateOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsUpdateOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsUpdateOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsUpdateOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsUpdateOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsUpdateOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsUpdateOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsUpdateOneWithoutNodePropsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  flowNode: FlowNodeUpdateOneWithoutNodePropsInput
  templateNode: TemplateNodeUpdateOneWithoutNodePropsInput
  type: EnumNodeTypeFieldUpdateOperationsInput
}

input NodePropsUpdateWithoutNodeSwitchPropsInput {
  NodeAudioProps: NodeAudioPropsUpdateOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsUpdateOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsUpdateOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsUpdateOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsUpdateOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsUpdateOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsUpdateOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsUpdateOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsUpdateOneWithoutNodePropsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  flowNode: FlowNodeUpdateOneWithoutNodePropsInput
  templateNode: TemplateNodeUpdateOneWithoutNodePropsInput
  type: EnumNodeTypeFieldUpdateOperationsInput
}

input NodePropsUpdateWithoutNodeTextPropsInput {
  NodeAudioProps: NodeAudioPropsUpdateOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsUpdateOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsUpdateOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsUpdateOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsUpdateOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsUpdateOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsUpdateOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsUpdateOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsUpdateOneWithoutNodePropsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  flowNode: FlowNodeUpdateOneWithoutNodePropsInput
  templateNode: TemplateNodeUpdateOneWithoutNodePropsInput
  type: EnumNodeTypeFieldUpdateOperationsInput
}

input NodePropsUpdateWithoutNodeVideoPropsInput {
  NodeAudioProps: NodeAudioPropsUpdateOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsUpdateOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsUpdateOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsUpdateOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsUpdateOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsUpdateOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsUpdateOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsUpdateOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsUpdateOneWithoutNodePropsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  flowNode: FlowNodeUpdateOneWithoutNodePropsInput
  templateNode: TemplateNodeUpdateOneWithoutNodePropsInput
  type: EnumNodeTypeFieldUpdateOperationsInput
}

input NodePropsUpdateWithoutNodeWaitPropsInput {
  NodeAudioProps: NodeAudioPropsUpdateOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsUpdateOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsUpdateOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsUpdateOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsUpdateOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsUpdateOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsUpdateOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsUpdateOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsUpdateOneWithoutNodePropsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  flowNode: FlowNodeUpdateOneWithoutNodePropsInput
  templateNode: TemplateNodeUpdateOneWithoutNodePropsInput
  type: EnumNodeTypeFieldUpdateOperationsInput
}

input NodePropsUpdateWithoutTemplateNodeInput {
  NodeAudioProps: NodeAudioPropsUpdateOneWithoutNodePropsInput
  NodeCountdownProps: NodeCountdownPropsUpdateOneWithoutNodePropsInput
  NodeFileProps: NodeFilePropsUpdateOneWithoutNodePropsInput
  NodeImageProps: NodeImagePropsUpdateOneWithoutNodePropsInput
  NodeLinkProps: NodeLinkPropsUpdateOneWithoutNodePropsInput
  NodeSwitchOptionProps: NodeSwitchOptionPropsUpdateOneWithoutNodePropsInput
  NodeSwitchProps: NodeSwitchPropsUpdateOneWithoutNodePropsInput
  NodeTextProps: NodeTextPropsUpdateOneWithoutNodePropsInput
  NodeVideoProps: NodeVideoPropsUpdateOneWithoutNodePropsInput
  NodeWaitProps: NodeWaitPropsUpdateOneWithoutNodePropsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  flowNode: FlowNodeUpdateOneWithoutNodePropsInput
  type: EnumNodeTypeFieldUpdateOperationsInput
}

input NodePropsUpsertWithoutFlowNodeInput {
  create: NodePropsCreateWithoutFlowNodeInput!
  update: NodePropsUpdateWithoutFlowNodeInput!
}

input NodePropsUpsertWithoutNodeAudioPropsInput {
  create: NodePropsCreateWithoutNodeAudioPropsInput!
  update: NodePropsUpdateWithoutNodeAudioPropsInput!
}

input NodePropsUpsertWithoutNodeCountdownPropsInput {
  create: NodePropsCreateWithoutNodeCountdownPropsInput!
  update: NodePropsUpdateWithoutNodeCountdownPropsInput!
}

input NodePropsUpsertWithoutNodeFilePropsInput {
  create: NodePropsCreateWithoutNodeFilePropsInput!
  update: NodePropsUpdateWithoutNodeFilePropsInput!
}

input NodePropsUpsertWithoutNodeImagePropsInput {
  create: NodePropsCreateWithoutNodeImagePropsInput!
  update: NodePropsUpdateWithoutNodeImagePropsInput!
}

input NodePropsUpsertWithoutNodeLinkPropsInput {
  create: NodePropsCreateWithoutNodeLinkPropsInput!
  update: NodePropsUpdateWithoutNodeLinkPropsInput!
}

input NodePropsUpsertWithoutNodeSwitchOptionPropsInput {
  create: NodePropsCreateWithoutNodeSwitchOptionPropsInput!
  update: NodePropsUpdateWithoutNodeSwitchOptionPropsInput!
}

input NodePropsUpsertWithoutNodeSwitchPropsInput {
  create: NodePropsCreateWithoutNodeSwitchPropsInput!
  update: NodePropsUpdateWithoutNodeSwitchPropsInput!
}

input NodePropsUpsertWithoutNodeTextPropsInput {
  create: NodePropsCreateWithoutNodeTextPropsInput!
  update: NodePropsUpdateWithoutNodeTextPropsInput!
}

input NodePropsUpsertWithoutNodeVideoPropsInput {
  create: NodePropsCreateWithoutNodeVideoPropsInput!
  update: NodePropsUpdateWithoutNodeVideoPropsInput!
}

input NodePropsUpsertWithoutNodeWaitPropsInput {
  create: NodePropsCreateWithoutNodeWaitPropsInput!
  update: NodePropsUpdateWithoutNodeWaitPropsInput!
}

input NodePropsUpsertWithoutTemplateNodeInput {
  create: NodePropsCreateWithoutTemplateNodeInput!
  update: NodePropsUpdateWithoutTemplateNodeInput!
}

input NodePropsWhereInput {
  AND: [NodePropsWhereInput!]
  NOT: [NodePropsWhereInput!]
  NodeAudioProps: NodeAudioPropsRelationFilter
  NodeCountdownProps: NodeCountdownPropsRelationFilter
  NodeFileProps: NodeFilePropsRelationFilter
  NodeImageProps: NodeImagePropsRelationFilter
  NodeLinkProps: NodeLinkPropsRelationFilter
  NodeSwitchOptionProps: NodeSwitchOptionPropsRelationFilter
  NodeSwitchProps: NodeSwitchPropsRelationFilter
  NodeTextProps: NodeTextPropsRelationFilter
  NodeVideoProps: NodeVideoPropsRelationFilter
  NodeWaitProps: NodeWaitPropsRelationFilter
  OR: [NodePropsWhereInput!]
  createdAt: DateTimeFilter
  flowNode: FlowNodeRelationFilter
  id: IntFilter
  templateNode: TemplateNodeRelationFilter
  type: EnumNodeTypeFilter
}

input NodePropsWhereUniqueInput {
  id: Int
}

type NodeSwitchOptionProps {
  id: Int!
  imageLink: String!
  nodeProps: NodeProps!
  text: String!
}

type NodeSwitchOptionPropsAvgAggregate {
  id: Float
}

input NodeSwitchOptionPropsAvgOrderByAggregateInput {
  id: SortOrder
}

type NodeSwitchOptionPropsCountAggregate {
  _all: Int!
  id: Int!
  imageLink: Int!
  text: Int!
}

input NodeSwitchOptionPropsCountOrderByAggregateInput {
  id: SortOrder
  imageLink: SortOrder
  text: SortOrder
}

input NodeSwitchOptionPropsCreateInput {
  imageLink: String!
  nodeProps: NodePropsCreateNestedOneWithoutNodeSwitchOptionPropsInput
  text: String!
}

input NodeSwitchOptionPropsCreateManyInput {
  id: Int
  imageLink: String!
  text: String!
}

input NodeSwitchOptionPropsCreateNestedOneWithoutNodePropsInput {
  connect: NodeSwitchOptionPropsWhereUniqueInput
  connectOrCreate: NodeSwitchOptionPropsCreateOrConnectWithoutNodePropsInput
  create: NodeSwitchOptionPropsCreateWithoutNodePropsInput
}

input NodeSwitchOptionPropsCreateOrConnectWithoutNodePropsInput {
  create: NodeSwitchOptionPropsCreateWithoutNodePropsInput!
  where: NodeSwitchOptionPropsWhereUniqueInput!
}

input NodeSwitchOptionPropsCreateWithoutNodePropsInput {
  imageLink: String!
  text: String!
}

type NodeSwitchOptionPropsGroupBy {
  _avg: NodeSwitchOptionPropsAvgAggregate
  _count: NodeSwitchOptionPropsCountAggregate
  _max: NodeSwitchOptionPropsMaxAggregate
  _min: NodeSwitchOptionPropsMinAggregate
  _sum: NodeSwitchOptionPropsSumAggregate
  id: Int!
  imageLink: String!
  text: String!
}

type NodeSwitchOptionPropsMaxAggregate {
  id: Int
  imageLink: String
  text: String
}

input NodeSwitchOptionPropsMaxOrderByAggregateInput {
  id: SortOrder
  imageLink: SortOrder
  text: SortOrder
}

type NodeSwitchOptionPropsMinAggregate {
  id: Int
  imageLink: String
  text: String
}

input NodeSwitchOptionPropsMinOrderByAggregateInput {
  id: SortOrder
  imageLink: SortOrder
  text: SortOrder
}

input NodeSwitchOptionPropsOrderByWithAggregationInput {
  _avg: NodeSwitchOptionPropsAvgOrderByAggregateInput
  _count: NodeSwitchOptionPropsCountOrderByAggregateInput
  _max: NodeSwitchOptionPropsMaxOrderByAggregateInput
  _min: NodeSwitchOptionPropsMinOrderByAggregateInput
  _sum: NodeSwitchOptionPropsSumOrderByAggregateInput
  id: SortOrder
  imageLink: SortOrder
  text: SortOrder
}

input NodeSwitchOptionPropsOrderByWithRelationInput {
  id: SortOrder
  imageLink: SortOrder
  nodeProps: NodePropsOrderByWithRelationInput
  text: SortOrder
}

input NodeSwitchOptionPropsRelationFilter {
  is: NodeSwitchOptionPropsWhereInput
  isNot: NodeSwitchOptionPropsWhereInput
}

enum NodeSwitchOptionPropsScalarFieldEnum {
  id
  imageLink
  text
}

input NodeSwitchOptionPropsScalarWhereWithAggregatesInput {
  AND: [NodeSwitchOptionPropsScalarWhereWithAggregatesInput!]
  NOT: [NodeSwitchOptionPropsScalarWhereWithAggregatesInput!]
  OR: [NodeSwitchOptionPropsScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  imageLink: StringWithAggregatesFilter
  text: StringWithAggregatesFilter
}

type NodeSwitchOptionPropsSumAggregate {
  id: Int
}

input NodeSwitchOptionPropsSumOrderByAggregateInput {
  id: SortOrder
}

input NodeSwitchOptionPropsUpdateInput {
  imageLink: StringFieldUpdateOperationsInput
  nodeProps: NodePropsUpdateOneRequiredWithoutNodeSwitchOptionPropsInput
  text: StringFieldUpdateOperationsInput
}

input NodeSwitchOptionPropsUpdateManyMutationInput {
  imageLink: StringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
}

input NodeSwitchOptionPropsUpdateOneWithoutNodePropsInput {
  connect: NodeSwitchOptionPropsWhereUniqueInput
  connectOrCreate: NodeSwitchOptionPropsCreateOrConnectWithoutNodePropsInput
  create: NodeSwitchOptionPropsCreateWithoutNodePropsInput
  delete: Boolean
  disconnect: Boolean
  update: NodeSwitchOptionPropsUpdateWithoutNodePropsInput
  upsert: NodeSwitchOptionPropsUpsertWithoutNodePropsInput
}

input NodeSwitchOptionPropsUpdateWithoutNodePropsInput {
  imageLink: StringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
}

input NodeSwitchOptionPropsUpsertWithoutNodePropsInput {
  create: NodeSwitchOptionPropsCreateWithoutNodePropsInput!
  update: NodeSwitchOptionPropsUpdateWithoutNodePropsInput!
}

input NodeSwitchOptionPropsWhereInput {
  AND: [NodeSwitchOptionPropsWhereInput!]
  NOT: [NodeSwitchOptionPropsWhereInput!]
  OR: [NodeSwitchOptionPropsWhereInput!]
  id: IntFilter
  imageLink: StringFilter
  nodeProps: NodePropsRelationFilter
  text: StringFilter
}

input NodeSwitchOptionPropsWhereUniqueInput {
  id: Int
}

type NodeSwitchProps {
  SwitchDisplayType: SwitchDisplayType!
  id: Int!
  nodeProps: NodeProps!
  withImage: Boolean!
}

type NodeSwitchPropsAvgAggregate {
  id: Float
}

input NodeSwitchPropsAvgOrderByAggregateInput {
  id: SortOrder
}

type NodeSwitchPropsCountAggregate {
  SwitchDisplayType: Int!
  _all: Int!
  id: Int!
  withImage: Int!
}

input NodeSwitchPropsCountOrderByAggregateInput {
  SwitchDisplayType: SortOrder
  id: SortOrder
  withImage: SortOrder
}

input NodeSwitchPropsCreateInput {
  SwitchDisplayType: SwitchDisplayType!
  nodeProps: NodePropsCreateNestedOneWithoutNodeSwitchPropsInput
  withImage: Boolean
}

input NodeSwitchPropsCreateManyInput {
  SwitchDisplayType: SwitchDisplayType!
  id: Int
  withImage: Boolean
}

input NodeSwitchPropsCreateNestedOneWithoutNodePropsInput {
  connect: NodeSwitchPropsWhereUniqueInput
  connectOrCreate: NodeSwitchPropsCreateOrConnectWithoutNodePropsInput
  create: NodeSwitchPropsCreateWithoutNodePropsInput
}

input NodeSwitchPropsCreateOrConnectWithoutNodePropsInput {
  create: NodeSwitchPropsCreateWithoutNodePropsInput!
  where: NodeSwitchPropsWhereUniqueInput!
}

input NodeSwitchPropsCreateWithoutNodePropsInput {
  SwitchDisplayType: SwitchDisplayType!
  withImage: Boolean
}

type NodeSwitchPropsGroupBy {
  SwitchDisplayType: SwitchDisplayType!
  _avg: NodeSwitchPropsAvgAggregate
  _count: NodeSwitchPropsCountAggregate
  _max: NodeSwitchPropsMaxAggregate
  _min: NodeSwitchPropsMinAggregate
  _sum: NodeSwitchPropsSumAggregate
  id: Int!
  withImage: Boolean!
}

type NodeSwitchPropsMaxAggregate {
  SwitchDisplayType: SwitchDisplayType
  id: Int
  withImage: Boolean
}

input NodeSwitchPropsMaxOrderByAggregateInput {
  SwitchDisplayType: SortOrder
  id: SortOrder
  withImage: SortOrder
}

type NodeSwitchPropsMinAggregate {
  SwitchDisplayType: SwitchDisplayType
  id: Int
  withImage: Boolean
}

input NodeSwitchPropsMinOrderByAggregateInput {
  SwitchDisplayType: SortOrder
  id: SortOrder
  withImage: SortOrder
}

input NodeSwitchPropsOrderByWithAggregationInput {
  SwitchDisplayType: SortOrder
  _avg: NodeSwitchPropsAvgOrderByAggregateInput
  _count: NodeSwitchPropsCountOrderByAggregateInput
  _max: NodeSwitchPropsMaxOrderByAggregateInput
  _min: NodeSwitchPropsMinOrderByAggregateInput
  _sum: NodeSwitchPropsSumOrderByAggregateInput
  id: SortOrder
  withImage: SortOrder
}

input NodeSwitchPropsOrderByWithRelationInput {
  SwitchDisplayType: SortOrder
  id: SortOrder
  nodeProps: NodePropsOrderByWithRelationInput
  withImage: SortOrder
}

input NodeSwitchPropsRelationFilter {
  is: NodeSwitchPropsWhereInput
  isNot: NodeSwitchPropsWhereInput
}

enum NodeSwitchPropsScalarFieldEnum {
  SwitchDisplayType
  id
  withImage
}

input NodeSwitchPropsScalarWhereWithAggregatesInput {
  AND: [NodeSwitchPropsScalarWhereWithAggregatesInput!]
  NOT: [NodeSwitchPropsScalarWhereWithAggregatesInput!]
  OR: [NodeSwitchPropsScalarWhereWithAggregatesInput!]
  SwitchDisplayType: EnumSwitchDisplayTypeWithAggregatesFilter
  id: IntWithAggregatesFilter
  withImage: BoolWithAggregatesFilter
}

type NodeSwitchPropsSumAggregate {
  id: Int
}

input NodeSwitchPropsSumOrderByAggregateInput {
  id: SortOrder
}

input NodeSwitchPropsUpdateInput {
  SwitchDisplayType: EnumSwitchDisplayTypeFieldUpdateOperationsInput
  nodeProps: NodePropsUpdateOneRequiredWithoutNodeSwitchPropsInput
  withImage: BoolFieldUpdateOperationsInput
}

input NodeSwitchPropsUpdateManyMutationInput {
  SwitchDisplayType: EnumSwitchDisplayTypeFieldUpdateOperationsInput
  withImage: BoolFieldUpdateOperationsInput
}

input NodeSwitchPropsUpdateOneWithoutNodePropsInput {
  connect: NodeSwitchPropsWhereUniqueInput
  connectOrCreate: NodeSwitchPropsCreateOrConnectWithoutNodePropsInput
  create: NodeSwitchPropsCreateWithoutNodePropsInput
  delete: Boolean
  disconnect: Boolean
  update: NodeSwitchPropsUpdateWithoutNodePropsInput
  upsert: NodeSwitchPropsUpsertWithoutNodePropsInput
}

input NodeSwitchPropsUpdateWithoutNodePropsInput {
  SwitchDisplayType: EnumSwitchDisplayTypeFieldUpdateOperationsInput
  withImage: BoolFieldUpdateOperationsInput
}

input NodeSwitchPropsUpsertWithoutNodePropsInput {
  create: NodeSwitchPropsCreateWithoutNodePropsInput!
  update: NodeSwitchPropsUpdateWithoutNodePropsInput!
}

input NodeSwitchPropsWhereInput {
  AND: [NodeSwitchPropsWhereInput!]
  NOT: [NodeSwitchPropsWhereInput!]
  OR: [NodeSwitchPropsWhereInput!]
  SwitchDisplayType: EnumSwitchDisplayTypeFilter
  id: IntFilter
  nodeProps: NodePropsRelationFilter
  withImage: BoolFilter
}

input NodeSwitchPropsWhereUniqueInput {
  id: Int
}

type NodeTextProps {
  id: Int!
  nodeProps: NodeProps!
  src: String!
}

type NodeTextPropsAvgAggregate {
  id: Float
}

input NodeTextPropsAvgOrderByAggregateInput {
  id: SortOrder
}

type NodeTextPropsCountAggregate {
  _all: Int!
  id: Int!
  src: Int!
}

input NodeTextPropsCountOrderByAggregateInput {
  id: SortOrder
  src: SortOrder
}

input NodeTextPropsCreateInput {
  nodeProps: NodePropsCreateNestedOneWithoutNodeTextPropsInput
  src: String!
}

input NodeTextPropsCreateManyInput {
  id: Int
  src: String!
}

input NodeTextPropsCreateNestedOneWithoutNodePropsInput {
  connect: NodeTextPropsWhereUniqueInput
  connectOrCreate: NodeTextPropsCreateOrConnectWithoutNodePropsInput
  create: NodeTextPropsCreateWithoutNodePropsInput
}

input NodeTextPropsCreateOrConnectWithoutNodePropsInput {
  create: NodeTextPropsCreateWithoutNodePropsInput!
  where: NodeTextPropsWhereUniqueInput!
}

input NodeTextPropsCreateWithoutNodePropsInput {
  src: String!
}

type NodeTextPropsGroupBy {
  _avg: NodeTextPropsAvgAggregate
  _count: NodeTextPropsCountAggregate
  _max: NodeTextPropsMaxAggregate
  _min: NodeTextPropsMinAggregate
  _sum: NodeTextPropsSumAggregate
  id: Int!
  src: String!
}

type NodeTextPropsMaxAggregate {
  id: Int
  src: String
}

input NodeTextPropsMaxOrderByAggregateInput {
  id: SortOrder
  src: SortOrder
}

type NodeTextPropsMinAggregate {
  id: Int
  src: String
}

input NodeTextPropsMinOrderByAggregateInput {
  id: SortOrder
  src: SortOrder
}

input NodeTextPropsOrderByWithAggregationInput {
  _avg: NodeTextPropsAvgOrderByAggregateInput
  _count: NodeTextPropsCountOrderByAggregateInput
  _max: NodeTextPropsMaxOrderByAggregateInput
  _min: NodeTextPropsMinOrderByAggregateInput
  _sum: NodeTextPropsSumOrderByAggregateInput
  id: SortOrder
  src: SortOrder
}

input NodeTextPropsOrderByWithRelationInput {
  id: SortOrder
  nodeProps: NodePropsOrderByWithRelationInput
  src: SortOrder
}

input NodeTextPropsRelationFilter {
  is: NodeTextPropsWhereInput
  isNot: NodeTextPropsWhereInput
}

enum NodeTextPropsScalarFieldEnum {
  id
  src
}

input NodeTextPropsScalarWhereWithAggregatesInput {
  AND: [NodeTextPropsScalarWhereWithAggregatesInput!]
  NOT: [NodeTextPropsScalarWhereWithAggregatesInput!]
  OR: [NodeTextPropsScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  src: StringWithAggregatesFilter
}

type NodeTextPropsSumAggregate {
  id: Int
}

input NodeTextPropsSumOrderByAggregateInput {
  id: SortOrder
}

input NodeTextPropsUpdateInput {
  nodeProps: NodePropsUpdateOneRequiredWithoutNodeTextPropsInput
  src: StringFieldUpdateOperationsInput
}

input NodeTextPropsUpdateManyMutationInput {
  src: StringFieldUpdateOperationsInput
}

input NodeTextPropsUpdateOneWithoutNodePropsInput {
  connect: NodeTextPropsWhereUniqueInput
  connectOrCreate: NodeTextPropsCreateOrConnectWithoutNodePropsInput
  create: NodeTextPropsCreateWithoutNodePropsInput
  delete: Boolean
  disconnect: Boolean
  update: NodeTextPropsUpdateWithoutNodePropsInput
  upsert: NodeTextPropsUpsertWithoutNodePropsInput
}

input NodeTextPropsUpdateWithoutNodePropsInput {
  src: StringFieldUpdateOperationsInput
}

input NodeTextPropsUpsertWithoutNodePropsInput {
  create: NodeTextPropsCreateWithoutNodePropsInput!
  update: NodeTextPropsUpdateWithoutNodePropsInput!
}

input NodeTextPropsWhereInput {
  AND: [NodeTextPropsWhereInput!]
  NOT: [NodeTextPropsWhereInput!]
  OR: [NodeTextPropsWhereInput!]
  id: IntFilter
  nodeProps: NodePropsRelationFilter
  src: StringFilter
}

input NodeTextPropsWhereUniqueInput {
  id: Int
}

enum NodeType {
  Audio
  Countdown
  File
  Image
  Link
  Switch
  SwitchOption
  Text
  Video
  Wait
}

type NodeVideoProps {
  id: Int!
  nodeProps: NodeProps!
  src: String!
}

type NodeVideoPropsAvgAggregate {
  id: Float
}

input NodeVideoPropsAvgOrderByAggregateInput {
  id: SortOrder
}

type NodeVideoPropsCountAggregate {
  _all: Int!
  id: Int!
  src: Int!
}

input NodeVideoPropsCountOrderByAggregateInput {
  id: SortOrder
  src: SortOrder
}

input NodeVideoPropsCreateInput {
  nodeProps: NodePropsCreateNestedOneWithoutNodeVideoPropsInput
  src: String!
}

input NodeVideoPropsCreateManyInput {
  id: Int
  src: String!
}

input NodeVideoPropsCreateNestedOneWithoutNodePropsInput {
  connect: NodeVideoPropsWhereUniqueInput
  connectOrCreate: NodeVideoPropsCreateOrConnectWithoutNodePropsInput
  create: NodeVideoPropsCreateWithoutNodePropsInput
}

input NodeVideoPropsCreateOrConnectWithoutNodePropsInput {
  create: NodeVideoPropsCreateWithoutNodePropsInput!
  where: NodeVideoPropsWhereUniqueInput!
}

input NodeVideoPropsCreateWithoutNodePropsInput {
  src: String!
}

type NodeVideoPropsGroupBy {
  _avg: NodeVideoPropsAvgAggregate
  _count: NodeVideoPropsCountAggregate
  _max: NodeVideoPropsMaxAggregate
  _min: NodeVideoPropsMinAggregate
  _sum: NodeVideoPropsSumAggregate
  id: Int!
  src: String!
}

type NodeVideoPropsMaxAggregate {
  id: Int
  src: String
}

input NodeVideoPropsMaxOrderByAggregateInput {
  id: SortOrder
  src: SortOrder
}

type NodeVideoPropsMinAggregate {
  id: Int
  src: String
}

input NodeVideoPropsMinOrderByAggregateInput {
  id: SortOrder
  src: SortOrder
}

input NodeVideoPropsOrderByWithAggregationInput {
  _avg: NodeVideoPropsAvgOrderByAggregateInput
  _count: NodeVideoPropsCountOrderByAggregateInput
  _max: NodeVideoPropsMaxOrderByAggregateInput
  _min: NodeVideoPropsMinOrderByAggregateInput
  _sum: NodeVideoPropsSumOrderByAggregateInput
  id: SortOrder
  src: SortOrder
}

input NodeVideoPropsOrderByWithRelationInput {
  id: SortOrder
  nodeProps: NodePropsOrderByWithRelationInput
  src: SortOrder
}

input NodeVideoPropsRelationFilter {
  is: NodeVideoPropsWhereInput
  isNot: NodeVideoPropsWhereInput
}

enum NodeVideoPropsScalarFieldEnum {
  id
  src
}

input NodeVideoPropsScalarWhereWithAggregatesInput {
  AND: [NodeVideoPropsScalarWhereWithAggregatesInput!]
  NOT: [NodeVideoPropsScalarWhereWithAggregatesInput!]
  OR: [NodeVideoPropsScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  src: StringWithAggregatesFilter
}

type NodeVideoPropsSumAggregate {
  id: Int
}

input NodeVideoPropsSumOrderByAggregateInput {
  id: SortOrder
}

input NodeVideoPropsUpdateInput {
  nodeProps: NodePropsUpdateOneRequiredWithoutNodeVideoPropsInput
  src: StringFieldUpdateOperationsInput
}

input NodeVideoPropsUpdateManyMutationInput {
  src: StringFieldUpdateOperationsInput
}

input NodeVideoPropsUpdateOneWithoutNodePropsInput {
  connect: NodeVideoPropsWhereUniqueInput
  connectOrCreate: NodeVideoPropsCreateOrConnectWithoutNodePropsInput
  create: NodeVideoPropsCreateWithoutNodePropsInput
  delete: Boolean
  disconnect: Boolean
  update: NodeVideoPropsUpdateWithoutNodePropsInput
  upsert: NodeVideoPropsUpsertWithoutNodePropsInput
}

input NodeVideoPropsUpdateWithoutNodePropsInput {
  src: StringFieldUpdateOperationsInput
}

input NodeVideoPropsUpsertWithoutNodePropsInput {
  create: NodeVideoPropsCreateWithoutNodePropsInput!
  update: NodeVideoPropsUpdateWithoutNodePropsInput!
}

input NodeVideoPropsWhereInput {
  AND: [NodeVideoPropsWhereInput!]
  NOT: [NodeVideoPropsWhereInput!]
  OR: [NodeVideoPropsWhereInput!]
  id: IntFilter
  nodeProps: NodePropsRelationFilter
  src: StringFilter
}

input NodeVideoPropsWhereUniqueInput {
  id: Int
}

type NodeWaitProps {
  delay: Int!
  id: Int!
  nodeProps: NodeProps!
  src: String!
}

type NodeWaitPropsAvgAggregate {
  delay: Float
  id: Float
}

input NodeWaitPropsAvgOrderByAggregateInput {
  delay: SortOrder
  id: SortOrder
}

type NodeWaitPropsCountAggregate {
  _all: Int!
  delay: Int!
  id: Int!
  src: Int!
}

input NodeWaitPropsCountOrderByAggregateInput {
  delay: SortOrder
  id: SortOrder
  src: SortOrder
}

input NodeWaitPropsCreateInput {
  delay: Int!
  nodeProps: NodePropsCreateNestedOneWithoutNodeWaitPropsInput
  src: String!
}

input NodeWaitPropsCreateManyInput {
  delay: Int!
  id: Int
  src: String!
}

input NodeWaitPropsCreateNestedOneWithoutNodePropsInput {
  connect: NodeWaitPropsWhereUniqueInput
  connectOrCreate: NodeWaitPropsCreateOrConnectWithoutNodePropsInput
  create: NodeWaitPropsCreateWithoutNodePropsInput
}

input NodeWaitPropsCreateOrConnectWithoutNodePropsInput {
  create: NodeWaitPropsCreateWithoutNodePropsInput!
  where: NodeWaitPropsWhereUniqueInput!
}

input NodeWaitPropsCreateWithoutNodePropsInput {
  delay: Int!
  src: String!
}

type NodeWaitPropsGroupBy {
  _avg: NodeWaitPropsAvgAggregate
  _count: NodeWaitPropsCountAggregate
  _max: NodeWaitPropsMaxAggregate
  _min: NodeWaitPropsMinAggregate
  _sum: NodeWaitPropsSumAggregate
  delay: Int!
  id: Int!
  src: String!
}

type NodeWaitPropsMaxAggregate {
  delay: Int
  id: Int
  src: String
}

input NodeWaitPropsMaxOrderByAggregateInput {
  delay: SortOrder
  id: SortOrder
  src: SortOrder
}

type NodeWaitPropsMinAggregate {
  delay: Int
  id: Int
  src: String
}

input NodeWaitPropsMinOrderByAggregateInput {
  delay: SortOrder
  id: SortOrder
  src: SortOrder
}

input NodeWaitPropsOrderByWithAggregationInput {
  _avg: NodeWaitPropsAvgOrderByAggregateInput
  _count: NodeWaitPropsCountOrderByAggregateInput
  _max: NodeWaitPropsMaxOrderByAggregateInput
  _min: NodeWaitPropsMinOrderByAggregateInput
  _sum: NodeWaitPropsSumOrderByAggregateInput
  delay: SortOrder
  id: SortOrder
  src: SortOrder
}

input NodeWaitPropsOrderByWithRelationInput {
  delay: SortOrder
  id: SortOrder
  nodeProps: NodePropsOrderByWithRelationInput
  src: SortOrder
}

input NodeWaitPropsRelationFilter {
  is: NodeWaitPropsWhereInput
  isNot: NodeWaitPropsWhereInput
}

enum NodeWaitPropsScalarFieldEnum {
  delay
  id
  src
}

input NodeWaitPropsScalarWhereWithAggregatesInput {
  AND: [NodeWaitPropsScalarWhereWithAggregatesInput!]
  NOT: [NodeWaitPropsScalarWhereWithAggregatesInput!]
  OR: [NodeWaitPropsScalarWhereWithAggregatesInput!]
  delay: IntWithAggregatesFilter
  id: IntWithAggregatesFilter
  src: StringWithAggregatesFilter
}

type NodeWaitPropsSumAggregate {
  delay: Int
  id: Int
}

input NodeWaitPropsSumOrderByAggregateInput {
  delay: SortOrder
  id: SortOrder
}

input NodeWaitPropsUpdateInput {
  delay: IntFieldUpdateOperationsInput
  nodeProps: NodePropsUpdateOneRequiredWithoutNodeWaitPropsInput
  src: StringFieldUpdateOperationsInput
}

input NodeWaitPropsUpdateManyMutationInput {
  delay: IntFieldUpdateOperationsInput
  src: StringFieldUpdateOperationsInput
}

input NodeWaitPropsUpdateOneWithoutNodePropsInput {
  connect: NodeWaitPropsWhereUniqueInput
  connectOrCreate: NodeWaitPropsCreateOrConnectWithoutNodePropsInput
  create: NodeWaitPropsCreateWithoutNodePropsInput
  delete: Boolean
  disconnect: Boolean
  update: NodeWaitPropsUpdateWithoutNodePropsInput
  upsert: NodeWaitPropsUpsertWithoutNodePropsInput
}

input NodeWaitPropsUpdateWithoutNodePropsInput {
  delay: IntFieldUpdateOperationsInput
  src: StringFieldUpdateOperationsInput
}

input NodeWaitPropsUpsertWithoutNodePropsInput {
  create: NodeWaitPropsCreateWithoutNodePropsInput!
  update: NodeWaitPropsUpdateWithoutNodePropsInput!
}

input NodeWaitPropsWhereInput {
  AND: [NodeWaitPropsWhereInput!]
  NOT: [NodeWaitPropsWhereInput!]
  OR: [NodeWaitPropsWhereInput!]
  delay: IntFilter
  id: IntFilter
  nodeProps: NodePropsRelationFilter
  src: StringFilter
}

input NodeWaitPropsWhereUniqueInput {
  id: Int
}

type Port {
  _count: PortCount
  flowNodeId: Int!
  id: Int!
  inConnection: Connection
  index: Int!
  node: FlowNode!
  outConnections(cursor: ConnectionWhereUniqueInput, distinct: [ConnectionScalarFieldEnum!], orderBy: [ConnectionOrderByWithRelationInput!], skip: Int, take: Int, where: ConnectionWhereInput): [Connection!]!
}

type PortAvgAggregate {
  flowNodeId: Float
  id: Float
  index: Float
}

input PortAvgOrderByAggregateInput {
  flowNodeId: SortOrder
  id: SortOrder
  index: SortOrder
}

type PortCount {
  outConnections: Int!
}

type PortCountAggregate {
  _all: Int!
  flowNodeId: Int!
  id: Int!
  index: Int!
}

input PortCountOrderByAggregateInput {
  flowNodeId: SortOrder
  id: SortOrder
  index: SortOrder
}

input PortCreateInput {
  inConnection: ConnectionCreateNestedOneWithoutToPortInput
  index: Int!
  node: FlowNodeCreateNestedOneWithoutPortsInput!
  outConnections: ConnectionCreateNestedManyWithoutFromPortInput
}

input PortCreateManyInput {
  flowNodeId: Int!
  id: Int
  index: Int!
}

input PortCreateManyNodeInput {
  id: Int
  index: Int!
}

input PortCreateManyNodeInputEnvelope {
  data: [PortCreateManyNodeInput!]!
  skipDuplicates: Boolean
}

input PortCreateNestedManyWithoutNodeInput {
  connect: [PortWhereUniqueInput!]
  connectOrCreate: [PortCreateOrConnectWithoutNodeInput!]
  create: [PortCreateWithoutNodeInput!]
  createMany: PortCreateManyNodeInputEnvelope
}

input PortCreateNestedOneWithoutInConnectionInput {
  connect: PortWhereUniqueInput
  connectOrCreate: PortCreateOrConnectWithoutInConnectionInput
  create: PortCreateWithoutInConnectionInput
}

input PortCreateNestedOneWithoutOutConnectionsInput {
  connect: PortWhereUniqueInput
  connectOrCreate: PortCreateOrConnectWithoutOutConnectionsInput
  create: PortCreateWithoutOutConnectionsInput
}

input PortCreateOrConnectWithoutInConnectionInput {
  create: PortCreateWithoutInConnectionInput!
  where: PortWhereUniqueInput!
}

input PortCreateOrConnectWithoutNodeInput {
  create: PortCreateWithoutNodeInput!
  where: PortWhereUniqueInput!
}

input PortCreateOrConnectWithoutOutConnectionsInput {
  create: PortCreateWithoutOutConnectionsInput!
  where: PortWhereUniqueInput!
}

input PortCreateWithoutInConnectionInput {
  index: Int!
  node: FlowNodeCreateNestedOneWithoutPortsInput!
  outConnections: ConnectionCreateNestedManyWithoutFromPortInput
}

input PortCreateWithoutNodeInput {
  inConnection: ConnectionCreateNestedOneWithoutToPortInput
  index: Int!
  outConnections: ConnectionCreateNestedManyWithoutFromPortInput
}

input PortCreateWithoutOutConnectionsInput {
  inConnection: ConnectionCreateNestedOneWithoutToPortInput
  index: Int!
  node: FlowNodeCreateNestedOneWithoutPortsInput!
}

type PortGroupBy {
  _avg: PortAvgAggregate
  _count: PortCountAggregate
  _max: PortMaxAggregate
  _min: PortMinAggregate
  _sum: PortSumAggregate
  flowNodeId: Int!
  id: Int!
  index: Int!
}

input PortListRelationFilter {
  every: PortWhereInput
  none: PortWhereInput
  some: PortWhereInput
}

type PortMaxAggregate {
  flowNodeId: Int
  id: Int
  index: Int
}

input PortMaxOrderByAggregateInput {
  flowNodeId: SortOrder
  id: SortOrder
  index: SortOrder
}

type PortMinAggregate {
  flowNodeId: Int
  id: Int
  index: Int
}

input PortMinOrderByAggregateInput {
  flowNodeId: SortOrder
  id: SortOrder
  index: SortOrder
}

input PortOrderByRelationAggregateInput {
  _count: SortOrder
}

input PortOrderByWithAggregationInput {
  _avg: PortAvgOrderByAggregateInput
  _count: PortCountOrderByAggregateInput
  _max: PortMaxOrderByAggregateInput
  _min: PortMinOrderByAggregateInput
  _sum: PortSumOrderByAggregateInput
  flowNodeId: SortOrder
  id: SortOrder
  index: SortOrder
}

input PortOrderByWithRelationInput {
  flowNodeId: SortOrder
  id: SortOrder
  inConnection: ConnectionOrderByWithRelationInput
  index: SortOrder
  node: FlowNodeOrderByWithRelationInput
  outConnections: ConnectionOrderByRelationAggregateInput
}

input PortRelationFilter {
  is: PortWhereInput
  isNot: PortWhereInput
}

enum PortScalarFieldEnum {
  flowNodeId
  id
  index
}

input PortScalarWhereInput {
  AND: [PortScalarWhereInput!]
  NOT: [PortScalarWhereInput!]
  OR: [PortScalarWhereInput!]
  flowNodeId: IntFilter
  id: IntFilter
  index: IntFilter
}

input PortScalarWhereWithAggregatesInput {
  AND: [PortScalarWhereWithAggregatesInput!]
  NOT: [PortScalarWhereWithAggregatesInput!]
  OR: [PortScalarWhereWithAggregatesInput!]
  flowNodeId: IntWithAggregatesFilter
  id: IntWithAggregatesFilter
  index: IntWithAggregatesFilter
}

type PortSumAggregate {
  flowNodeId: Int
  id: Int
  index: Int
}

input PortSumOrderByAggregateInput {
  flowNodeId: SortOrder
  id: SortOrder
  index: SortOrder
}

input PortUpdateInput {
  inConnection: ConnectionUpdateOneWithoutToPortInput
  index: IntFieldUpdateOperationsInput
  node: FlowNodeUpdateOneRequiredWithoutPortsInput
  outConnections: ConnectionUpdateManyWithoutFromPortInput
}

input PortUpdateManyMutationInput {
  index: IntFieldUpdateOperationsInput
}

input PortUpdateManyWithWhereWithoutNodeInput {
  data: PortUpdateManyMutationInput!
  where: PortScalarWhereInput!
}

input PortUpdateManyWithoutNodeInput {
  connect: [PortWhereUniqueInput!]
  connectOrCreate: [PortCreateOrConnectWithoutNodeInput!]
  create: [PortCreateWithoutNodeInput!]
  createMany: PortCreateManyNodeInputEnvelope
  delete: [PortWhereUniqueInput!]
  deleteMany: [PortScalarWhereInput!]
  disconnect: [PortWhereUniqueInput!]
  set: [PortWhereUniqueInput!]
  update: [PortUpdateWithWhereUniqueWithoutNodeInput!]
  updateMany: [PortUpdateManyWithWhereWithoutNodeInput!]
  upsert: [PortUpsertWithWhereUniqueWithoutNodeInput!]
}

input PortUpdateOneRequiredWithoutInConnectionInput {
  connect: PortWhereUniqueInput
  connectOrCreate: PortCreateOrConnectWithoutInConnectionInput
  create: PortCreateWithoutInConnectionInput
  update: PortUpdateWithoutInConnectionInput
  upsert: PortUpsertWithoutInConnectionInput
}

input PortUpdateOneRequiredWithoutOutConnectionsInput {
  connect: PortWhereUniqueInput
  connectOrCreate: PortCreateOrConnectWithoutOutConnectionsInput
  create: PortCreateWithoutOutConnectionsInput
  update: PortUpdateWithoutOutConnectionsInput
  upsert: PortUpsertWithoutOutConnectionsInput
}

input PortUpdateWithWhereUniqueWithoutNodeInput {
  data: PortUpdateWithoutNodeInput!
  where: PortWhereUniqueInput!
}

input PortUpdateWithoutInConnectionInput {
  index: IntFieldUpdateOperationsInput
  node: FlowNodeUpdateOneRequiredWithoutPortsInput
  outConnections: ConnectionUpdateManyWithoutFromPortInput
}

input PortUpdateWithoutNodeInput {
  inConnection: ConnectionUpdateOneWithoutToPortInput
  index: IntFieldUpdateOperationsInput
  outConnections: ConnectionUpdateManyWithoutFromPortInput
}

input PortUpdateWithoutOutConnectionsInput {
  inConnection: ConnectionUpdateOneWithoutToPortInput
  index: IntFieldUpdateOperationsInput
  node: FlowNodeUpdateOneRequiredWithoutPortsInput
}

input PortUpsertWithWhereUniqueWithoutNodeInput {
  create: PortCreateWithoutNodeInput!
  update: PortUpdateWithoutNodeInput!
  where: PortWhereUniqueInput!
}

input PortUpsertWithoutInConnectionInput {
  create: PortCreateWithoutInConnectionInput!
  update: PortUpdateWithoutInConnectionInput!
}

input PortUpsertWithoutOutConnectionsInput {
  create: PortCreateWithoutOutConnectionsInput!
  update: PortUpdateWithoutOutConnectionsInput!
}

input PortWhereInput {
  AND: [PortWhereInput!]
  NOT: [PortWhereInput!]
  OR: [PortWhereInput!]
  flowNodeId: IntFilter
  id: IntFilter
  inConnection: ConnectionRelationFilter
  index: IntFilter
  node: FlowNodeRelationFilter
  outConnections: ConnectionListRelationFilter
}

input PortWhereUniqueInput {
  id: Int
}

type Query {
  aggregateBotFlow(cursor: BotFlowWhereUniqueInput, orderBy: [BotFlowOrderByWithRelationInput!], skip: Int, take: Int, where: BotFlowWhereInput): AggregateBotFlow!
  aggregateBotFlowVersion(cursor: BotFlowVersionWhereUniqueInput, orderBy: [BotFlowVersionOrderByWithRelationInput!], skip: Int, take: Int, where: BotFlowVersionWhereInput): AggregateBotFlowVersion!
  aggregateConnection(cursor: ConnectionWhereUniqueInput, orderBy: [ConnectionOrderByWithRelationInput!], skip: Int, take: Int, where: ConnectionWhereInput): AggregateConnection!
  aggregateFlowNode(cursor: FlowNodeWhereUniqueInput, orderBy: [FlowNodeOrderByWithRelationInput!], skip: Int, take: Int, where: FlowNodeWhereInput): AggregateFlowNode!
  aggregateNodeAudioProps(cursor: NodeAudioPropsWhereUniqueInput, orderBy: [NodeAudioPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeAudioPropsWhereInput): AggregateNodeAudioProps!
  aggregateNodeCountdownProps(cursor: NodeCountdownPropsWhereUniqueInput, orderBy: [NodeCountdownPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeCountdownPropsWhereInput): AggregateNodeCountdownProps!
  aggregateNodeFileProps(cursor: NodeFilePropsWhereUniqueInput, orderBy: [NodeFilePropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeFilePropsWhereInput): AggregateNodeFileProps!
  aggregateNodeImageProps(cursor: NodeImagePropsWhereUniqueInput, orderBy: [NodeImagePropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeImagePropsWhereInput): AggregateNodeImageProps!
  aggregateNodeInfo(cursor: NodeInfoWhereUniqueInput, orderBy: [NodeInfoOrderByWithRelationInput!], skip: Int, take: Int, where: NodeInfoWhereInput): AggregateNodeInfo!
  aggregateNodeLinkProps(cursor: NodeLinkPropsWhereUniqueInput, orderBy: [NodeLinkPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeLinkPropsWhereInput): AggregateNodeLinkProps!
  aggregateNodeProps(cursor: NodePropsWhereUniqueInput, orderBy: [NodePropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodePropsWhereInput): AggregateNodeProps!
  aggregateNodeSwitchOptionProps(cursor: NodeSwitchOptionPropsWhereUniqueInput, orderBy: [NodeSwitchOptionPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeSwitchOptionPropsWhereInput): AggregateNodeSwitchOptionProps!
  aggregateNodeSwitchProps(cursor: NodeSwitchPropsWhereUniqueInput, orderBy: [NodeSwitchPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeSwitchPropsWhereInput): AggregateNodeSwitchProps!
  aggregateNodeTextProps(cursor: NodeTextPropsWhereUniqueInput, orderBy: [NodeTextPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeTextPropsWhereInput): AggregateNodeTextProps!
  aggregateNodeVideoProps(cursor: NodeVideoPropsWhereUniqueInput, orderBy: [NodeVideoPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeVideoPropsWhereInput): AggregateNodeVideoProps!
  aggregateNodeWaitProps(cursor: NodeWaitPropsWhereUniqueInput, orderBy: [NodeWaitPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeWaitPropsWhereInput): AggregateNodeWaitProps!
  aggregatePort(cursor: PortWhereUniqueInput, orderBy: [PortOrderByWithRelationInput!], skip: Int, take: Int, where: PortWhereInput): AggregatePort!
  aggregateTemplateNode(cursor: TemplateNodeWhereUniqueInput, orderBy: [TemplateNodeOrderByWithRelationInput!], skip: Int, take: Int, where: TemplateNodeWhereInput): AggregateTemplateNode!
  aggregateTemplateNodesGroup(cursor: TemplateNodesGroupWhereUniqueInput, orderBy: [TemplateNodesGroupOrderByWithRelationInput!], skip: Int, take: Int, where: TemplateNodesGroupWhereInput): AggregateTemplateNodesGroup!
  botFlow(where: BotFlowWhereUniqueInput!): BotFlow
  botFlowVersion(where: BotFlowVersionWhereUniqueInput!): BotFlowVersion
  botFlowVersions(cursor: BotFlowVersionWhereUniqueInput, distinct: [BotFlowVersionScalarFieldEnum!], orderBy: [BotFlowVersionOrderByWithRelationInput!], skip: Int, take: Int, where: BotFlowVersionWhereInput): [BotFlowVersion!]!
  botFlows(cursor: BotFlowWhereUniqueInput, distinct: [BotFlowScalarFieldEnum!], orderBy: [BotFlowOrderByWithRelationInput!], skip: Int, take: Int, where: BotFlowWhereInput): [BotFlow!]!
  connection(where: ConnectionWhereUniqueInput!): Connection
  connections(cursor: ConnectionWhereUniqueInput, distinct: [ConnectionScalarFieldEnum!], orderBy: [ConnectionOrderByWithRelationInput!], skip: Int, take: Int, where: ConnectionWhereInput): [Connection!]!
  findFirstBotFlow(cursor: BotFlowWhereUniqueInput, distinct: [BotFlowScalarFieldEnum!], orderBy: [BotFlowOrderByWithRelationInput!], skip: Int, take: Int, where: BotFlowWhereInput): BotFlow
  findFirstBotFlowVersion(cursor: BotFlowVersionWhereUniqueInput, distinct: [BotFlowVersionScalarFieldEnum!], orderBy: [BotFlowVersionOrderByWithRelationInput!], skip: Int, take: Int, where: BotFlowVersionWhereInput): BotFlowVersion
  findFirstConnection(cursor: ConnectionWhereUniqueInput, distinct: [ConnectionScalarFieldEnum!], orderBy: [ConnectionOrderByWithRelationInput!], skip: Int, take: Int, where: ConnectionWhereInput): Connection
  findFirstFlowNode(cursor: FlowNodeWhereUniqueInput, distinct: [FlowNodeScalarFieldEnum!], orderBy: [FlowNodeOrderByWithRelationInput!], skip: Int, take: Int, where: FlowNodeWhereInput): FlowNode
  findFirstNodeAudioProps(cursor: NodeAudioPropsWhereUniqueInput, distinct: [NodeAudioPropsScalarFieldEnum!], orderBy: [NodeAudioPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeAudioPropsWhereInput): NodeAudioProps
  findFirstNodeCountdownProps(cursor: NodeCountdownPropsWhereUniqueInput, distinct: [NodeCountdownPropsScalarFieldEnum!], orderBy: [NodeCountdownPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeCountdownPropsWhereInput): NodeCountdownProps
  findFirstNodeFileProps(cursor: NodeFilePropsWhereUniqueInput, distinct: [NodeFilePropsScalarFieldEnum!], orderBy: [NodeFilePropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeFilePropsWhereInput): NodeFileProps
  findFirstNodeImageProps(cursor: NodeImagePropsWhereUniqueInput, distinct: [NodeImagePropsScalarFieldEnum!], orderBy: [NodeImagePropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeImagePropsWhereInput): NodeImageProps
  findFirstNodeInfo(cursor: NodeInfoWhereUniqueInput, distinct: [NodeInfoScalarFieldEnum!], orderBy: [NodeInfoOrderByWithRelationInput!], skip: Int, take: Int, where: NodeInfoWhereInput): NodeInfo
  findFirstNodeLinkProps(cursor: NodeLinkPropsWhereUniqueInput, distinct: [NodeLinkPropsScalarFieldEnum!], orderBy: [NodeLinkPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeLinkPropsWhereInput): NodeLinkProps
  findFirstNodeProps(cursor: NodePropsWhereUniqueInput, distinct: [NodePropsScalarFieldEnum!], orderBy: [NodePropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodePropsWhereInput): NodeProps
  findFirstNodeSwitchOptionProps(cursor: NodeSwitchOptionPropsWhereUniqueInput, distinct: [NodeSwitchOptionPropsScalarFieldEnum!], orderBy: [NodeSwitchOptionPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeSwitchOptionPropsWhereInput): NodeSwitchOptionProps
  findFirstNodeSwitchProps(cursor: NodeSwitchPropsWhereUniqueInput, distinct: [NodeSwitchPropsScalarFieldEnum!], orderBy: [NodeSwitchPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeSwitchPropsWhereInput): NodeSwitchProps
  findFirstNodeTextProps(cursor: NodeTextPropsWhereUniqueInput, distinct: [NodeTextPropsScalarFieldEnum!], orderBy: [NodeTextPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeTextPropsWhereInput): NodeTextProps
  findFirstNodeVideoProps(cursor: NodeVideoPropsWhereUniqueInput, distinct: [NodeVideoPropsScalarFieldEnum!], orderBy: [NodeVideoPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeVideoPropsWhereInput): NodeVideoProps
  findFirstNodeWaitProps(cursor: NodeWaitPropsWhereUniqueInput, distinct: [NodeWaitPropsScalarFieldEnum!], orderBy: [NodeWaitPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeWaitPropsWhereInput): NodeWaitProps
  findFirstPort(cursor: PortWhereUniqueInput, distinct: [PortScalarFieldEnum!], orderBy: [PortOrderByWithRelationInput!], skip: Int, take: Int, where: PortWhereInput): Port
  findFirstTemplateNode(cursor: TemplateNodeWhereUniqueInput, distinct: [TemplateNodeScalarFieldEnum!], orderBy: [TemplateNodeOrderByWithRelationInput!], skip: Int, take: Int, where: TemplateNodeWhereInput): TemplateNode
  findFirstTemplateNodesGroup(cursor: TemplateNodesGroupWhereUniqueInput, distinct: [TemplateNodesGroupScalarFieldEnum!], orderBy: [TemplateNodesGroupOrderByWithRelationInput!], skip: Int, take: Int, where: TemplateNodesGroupWhereInput): TemplateNodesGroup
  findManyNodeAudioProps(cursor: NodeAudioPropsWhereUniqueInput, distinct: [NodeAudioPropsScalarFieldEnum!], orderBy: [NodeAudioPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeAudioPropsWhereInput): [NodeAudioProps!]!
  findManyNodeCountdownProps(cursor: NodeCountdownPropsWhereUniqueInput, distinct: [NodeCountdownPropsScalarFieldEnum!], orderBy: [NodeCountdownPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeCountdownPropsWhereInput): [NodeCountdownProps!]!
  findManyNodeFileProps(cursor: NodeFilePropsWhereUniqueInput, distinct: [NodeFilePropsScalarFieldEnum!], orderBy: [NodeFilePropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeFilePropsWhereInput): [NodeFileProps!]!
  findManyNodeImageProps(cursor: NodeImagePropsWhereUniqueInput, distinct: [NodeImagePropsScalarFieldEnum!], orderBy: [NodeImagePropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeImagePropsWhereInput): [NodeImageProps!]!
  findManyNodeLinkProps(cursor: NodeLinkPropsWhereUniqueInput, distinct: [NodeLinkPropsScalarFieldEnum!], orderBy: [NodeLinkPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeLinkPropsWhereInput): [NodeLinkProps!]!
  findManyNodeProps(cursor: NodePropsWhereUniqueInput, distinct: [NodePropsScalarFieldEnum!], orderBy: [NodePropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodePropsWhereInput): [NodeProps!]!
  findManyNodeSwitchOptionProps(cursor: NodeSwitchOptionPropsWhereUniqueInput, distinct: [NodeSwitchOptionPropsScalarFieldEnum!], orderBy: [NodeSwitchOptionPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeSwitchOptionPropsWhereInput): [NodeSwitchOptionProps!]!
  findManyNodeSwitchProps(cursor: NodeSwitchPropsWhereUniqueInput, distinct: [NodeSwitchPropsScalarFieldEnum!], orderBy: [NodeSwitchPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeSwitchPropsWhereInput): [NodeSwitchProps!]!
  findManyNodeTextProps(cursor: NodeTextPropsWhereUniqueInput, distinct: [NodeTextPropsScalarFieldEnum!], orderBy: [NodeTextPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeTextPropsWhereInput): [NodeTextProps!]!
  findManyNodeVideoProps(cursor: NodeVideoPropsWhereUniqueInput, distinct: [NodeVideoPropsScalarFieldEnum!], orderBy: [NodeVideoPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeVideoPropsWhereInput): [NodeVideoProps!]!
  findManyNodeWaitProps(cursor: NodeWaitPropsWhereUniqueInput, distinct: [NodeWaitPropsScalarFieldEnum!], orderBy: [NodeWaitPropsOrderByWithRelationInput!], skip: Int, take: Int, where: NodeWaitPropsWhereInput): [NodeWaitProps!]!
  findUniqueNodeAudioProps(where: NodeAudioPropsWhereUniqueInput!): NodeAudioProps
  findUniqueNodeCountdownProps(where: NodeCountdownPropsWhereUniqueInput!): NodeCountdownProps
  findUniqueNodeFileProps(where: NodeFilePropsWhereUniqueInput!): NodeFileProps
  findUniqueNodeImageProps(where: NodeImagePropsWhereUniqueInput!): NodeImageProps
  findUniqueNodeLinkProps(where: NodeLinkPropsWhereUniqueInput!): NodeLinkProps
  findUniqueNodeProps(where: NodePropsWhereUniqueInput!): NodeProps
  findUniqueNodeSwitchOptionProps(where: NodeSwitchOptionPropsWhereUniqueInput!): NodeSwitchOptionProps
  findUniqueNodeSwitchProps(where: NodeSwitchPropsWhereUniqueInput!): NodeSwitchProps
  findUniqueNodeTextProps(where: NodeTextPropsWhereUniqueInput!): NodeTextProps
  findUniqueNodeVideoProps(where: NodeVideoPropsWhereUniqueInput!): NodeVideoProps
  findUniqueNodeWaitProps(where: NodeWaitPropsWhereUniqueInput!): NodeWaitProps
  flowNode(where: FlowNodeWhereUniqueInput!): FlowNode
  flowNodes(cursor: FlowNodeWhereUniqueInput, distinct: [FlowNodeScalarFieldEnum!], orderBy: [FlowNodeOrderByWithRelationInput!], skip: Int, take: Int, where: FlowNodeWhereInput): [FlowNode!]!
  groupByBotFlow(by: [BotFlowScalarFieldEnum!]!, having: BotFlowScalarWhereWithAggregatesInput, orderBy: [BotFlowOrderByWithAggregationInput!], skip: Int, take: Int, where: BotFlowWhereInput): [BotFlowGroupBy!]!
  groupByBotFlowVersion(by: [BotFlowVersionScalarFieldEnum!]!, having: BotFlowVersionScalarWhereWithAggregatesInput, orderBy: [BotFlowVersionOrderByWithAggregationInput!], skip: Int, take: Int, where: BotFlowVersionWhereInput): [BotFlowVersionGroupBy!]!
  groupByConnection(by: [ConnectionScalarFieldEnum!]!, having: ConnectionScalarWhereWithAggregatesInput, orderBy: [ConnectionOrderByWithAggregationInput!], skip: Int, take: Int, where: ConnectionWhereInput): [ConnectionGroupBy!]!
  groupByFlowNode(by: [FlowNodeScalarFieldEnum!]!, having: FlowNodeScalarWhereWithAggregatesInput, orderBy: [FlowNodeOrderByWithAggregationInput!], skip: Int, take: Int, where: FlowNodeWhereInput): [FlowNodeGroupBy!]!
  groupByNodeAudioProps(by: [NodeAudioPropsScalarFieldEnum!]!, having: NodeAudioPropsScalarWhereWithAggregatesInput, orderBy: [NodeAudioPropsOrderByWithAggregationInput!], skip: Int, take: Int, where: NodeAudioPropsWhereInput): [NodeAudioPropsGroupBy!]!
  groupByNodeCountdownProps(by: [NodeCountdownPropsScalarFieldEnum!]!, having: NodeCountdownPropsScalarWhereWithAggregatesInput, orderBy: [NodeCountdownPropsOrderByWithAggregationInput!], skip: Int, take: Int, where: NodeCountdownPropsWhereInput): [NodeCountdownPropsGroupBy!]!
  groupByNodeFileProps(by: [NodeFilePropsScalarFieldEnum!]!, having: NodeFilePropsScalarWhereWithAggregatesInput, orderBy: [NodeFilePropsOrderByWithAggregationInput!], skip: Int, take: Int, where: NodeFilePropsWhereInput): [NodeFilePropsGroupBy!]!
  groupByNodeImageProps(by: [NodeImagePropsScalarFieldEnum!]!, having: NodeImagePropsScalarWhereWithAggregatesInput, orderBy: [NodeImagePropsOrderByWithAggregationInput!], skip: Int, take: Int, where: NodeImagePropsWhereInput): [NodeImagePropsGroupBy!]!
  groupByNodeInfo(by: [NodeInfoScalarFieldEnum!]!, having: NodeInfoScalarWhereWithAggregatesInput, orderBy: [NodeInfoOrderByWithAggregationInput!], skip: Int, take: Int, where: NodeInfoWhereInput): [NodeInfoGroupBy!]!
  groupByNodeLinkProps(by: [NodeLinkPropsScalarFieldEnum!]!, having: NodeLinkPropsScalarWhereWithAggregatesInput, orderBy: [NodeLinkPropsOrderByWithAggregationInput!], skip: Int, take: Int, where: NodeLinkPropsWhereInput): [NodeLinkPropsGroupBy!]!
  groupByNodeProps(by: [NodePropsScalarFieldEnum!]!, having: NodePropsScalarWhereWithAggregatesInput, orderBy: [NodePropsOrderByWithAggregationInput!], skip: Int, take: Int, where: NodePropsWhereInput): [NodePropsGroupBy!]!
  groupByNodeSwitchOptionProps(by: [NodeSwitchOptionPropsScalarFieldEnum!]!, having: NodeSwitchOptionPropsScalarWhereWithAggregatesInput, orderBy: [NodeSwitchOptionPropsOrderByWithAggregationInput!], skip: Int, take: Int, where: NodeSwitchOptionPropsWhereInput): [NodeSwitchOptionPropsGroupBy!]!
  groupByNodeSwitchProps(by: [NodeSwitchPropsScalarFieldEnum!]!, having: NodeSwitchPropsScalarWhereWithAggregatesInput, orderBy: [NodeSwitchPropsOrderByWithAggregationInput!], skip: Int, take: Int, where: NodeSwitchPropsWhereInput): [NodeSwitchPropsGroupBy!]!
  groupByNodeTextProps(by: [NodeTextPropsScalarFieldEnum!]!, having: NodeTextPropsScalarWhereWithAggregatesInput, orderBy: [NodeTextPropsOrderByWithAggregationInput!], skip: Int, take: Int, where: NodeTextPropsWhereInput): [NodeTextPropsGroupBy!]!
  groupByNodeVideoProps(by: [NodeVideoPropsScalarFieldEnum!]!, having: NodeVideoPropsScalarWhereWithAggregatesInput, orderBy: [NodeVideoPropsOrderByWithAggregationInput!], skip: Int, take: Int, where: NodeVideoPropsWhereInput): [NodeVideoPropsGroupBy!]!
  groupByNodeWaitProps(by: [NodeWaitPropsScalarFieldEnum!]!, having: NodeWaitPropsScalarWhereWithAggregatesInput, orderBy: [NodeWaitPropsOrderByWithAggregationInput!], skip: Int, take: Int, where: NodeWaitPropsWhereInput): [NodeWaitPropsGroupBy!]!
  groupByPort(by: [PortScalarFieldEnum!]!, having: PortScalarWhereWithAggregatesInput, orderBy: [PortOrderByWithAggregationInput!], skip: Int, take: Int, where: PortWhereInput): [PortGroupBy!]!
  groupByTemplateNode(by: [TemplateNodeScalarFieldEnum!]!, having: TemplateNodeScalarWhereWithAggregatesInput, orderBy: [TemplateNodeOrderByWithAggregationInput!], skip: Int, take: Int, where: TemplateNodeWhereInput): [TemplateNodeGroupBy!]!
  groupByTemplateNodesGroup(by: [TemplateNodesGroupScalarFieldEnum!]!, having: TemplateNodesGroupScalarWhereWithAggregatesInput, orderBy: [TemplateNodesGroupOrderByWithAggregationInput!], skip: Int, take: Int, where: TemplateNodesGroupWhereInput): [TemplateNodesGroupGroupBy!]!
  nodeInfo(where: NodeInfoWhereUniqueInput!): NodeInfo
  nodeInfos(cursor: NodeInfoWhereUniqueInput, distinct: [NodeInfoScalarFieldEnum!], orderBy: [NodeInfoOrderByWithRelationInput!], skip: Int, take: Int, where: NodeInfoWhereInput): [NodeInfo!]!
  port(where: PortWhereUniqueInput!): Port
  ports(cursor: PortWhereUniqueInput, distinct: [PortScalarFieldEnum!], orderBy: [PortOrderByWithRelationInput!], skip: Int, take: Int, where: PortWhereInput): [Port!]!
  templateNode(where: TemplateNodeWhereUniqueInput!): TemplateNode
  templateNodes(cursor: TemplateNodeWhereUniqueInput, distinct: [TemplateNodeScalarFieldEnum!], orderBy: [TemplateNodeOrderByWithRelationInput!], skip: Int, take: Int, where: TemplateNodeWhereInput): [TemplateNode!]!
  templateNodesGroup(where: TemplateNodesGroupWhereUniqueInput!): TemplateNodesGroup
  templateNodesGroups(cursor: TemplateNodesGroupWhereUniqueInput, distinct: [TemplateNodesGroupScalarFieldEnum!], orderBy: [TemplateNodesGroupOrderByWithRelationInput!], skip: Int, take: Int, where: TemplateNodesGroupWhereInput): [TemplateNodesGroup!]!
}

enum QueryMode {
  default
  insensitive
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

enum SwitchDisplayType {
  Carousel
  List
  Select
}

type TemplateNode {
  FlowNode(cursor: FlowNodeWhereUniqueInput, distinct: [FlowNodeScalarFieldEnum!], orderBy: [FlowNodeOrderByWithRelationInput!], skip: Int, take: Int, where: FlowNodeWhereInput): [FlowNode!]!
  NodeProps: NodeProps!
  _count: TemplateNodeCount
  group: TemplateNodesGroup!
  id: Int!
  info: NodeInfo!
  nodeInfoId: Int!
  nodePropsId: Int!
  order: Int!
  templateNodesGroupId: Int!
}

type TemplateNodeAvgAggregate {
  id: Float
  nodeInfoId: Float
  nodePropsId: Float
  order: Float
  templateNodesGroupId: Float
}

input TemplateNodeAvgOrderByAggregateInput {
  id: SortOrder
  nodeInfoId: SortOrder
  nodePropsId: SortOrder
  order: SortOrder
  templateNodesGroupId: SortOrder
}

type TemplateNodeCount {
  FlowNode: Int!
}

type TemplateNodeCountAggregate {
  _all: Int!
  id: Int!
  nodeInfoId: Int!
  nodePropsId: Int!
  order: Int!
  templateNodesGroupId: Int!
}

input TemplateNodeCountOrderByAggregateInput {
  id: SortOrder
  nodeInfoId: SortOrder
  nodePropsId: SortOrder
  order: SortOrder
  templateNodesGroupId: SortOrder
}

input TemplateNodeCreateInput {
  FlowNode: FlowNodeCreateNestedManyWithoutTemplateNodeInput
  NodeProps: NodePropsCreateNestedOneWithoutTemplateNodeInput!
  group: TemplateNodesGroupCreateNestedOneWithoutNodesInput!
  info: NodeInfoCreateNestedOneWithoutTemplateNodeInput!
  order: Int!
}

input TemplateNodeCreateManyGroupInput {
  id: Int
  nodeInfoId: Int!
  nodePropsId: Int!
  order: Int!
}

input TemplateNodeCreateManyGroupInputEnvelope {
  data: [TemplateNodeCreateManyGroupInput!]!
  skipDuplicates: Boolean
}

input TemplateNodeCreateManyInput {
  id: Int
  nodeInfoId: Int!
  nodePropsId: Int!
  order: Int!
  templateNodesGroupId: Int!
}

input TemplateNodeCreateNestedManyWithoutGroupInput {
  connect: [TemplateNodeWhereUniqueInput!]
  connectOrCreate: [TemplateNodeCreateOrConnectWithoutGroupInput!]
  create: [TemplateNodeCreateWithoutGroupInput!]
  createMany: TemplateNodeCreateManyGroupInputEnvelope
}

input TemplateNodeCreateNestedOneWithoutFlowNodeInput {
  connect: TemplateNodeWhereUniqueInput
  connectOrCreate: TemplateNodeCreateOrConnectWithoutFlowNodeInput
  create: TemplateNodeCreateWithoutFlowNodeInput
}

input TemplateNodeCreateNestedOneWithoutInfoInput {
  connect: TemplateNodeWhereUniqueInput
  connectOrCreate: TemplateNodeCreateOrConnectWithoutInfoInput
  create: TemplateNodeCreateWithoutInfoInput
}

input TemplateNodeCreateNestedOneWithoutNodePropsInput {
  connect: TemplateNodeWhereUniqueInput
  connectOrCreate: TemplateNodeCreateOrConnectWithoutNodePropsInput
  create: TemplateNodeCreateWithoutNodePropsInput
}

input TemplateNodeCreateOrConnectWithoutFlowNodeInput {
  create: TemplateNodeCreateWithoutFlowNodeInput!
  where: TemplateNodeWhereUniqueInput!
}

input TemplateNodeCreateOrConnectWithoutGroupInput {
  create: TemplateNodeCreateWithoutGroupInput!
  where: TemplateNodeWhereUniqueInput!
}

input TemplateNodeCreateOrConnectWithoutInfoInput {
  create: TemplateNodeCreateWithoutInfoInput!
  where: TemplateNodeWhereUniqueInput!
}

input TemplateNodeCreateOrConnectWithoutNodePropsInput {
  create: TemplateNodeCreateWithoutNodePropsInput!
  where: TemplateNodeWhereUniqueInput!
}

input TemplateNodeCreateWithoutFlowNodeInput {
  NodeProps: NodePropsCreateNestedOneWithoutTemplateNodeInput!
  group: TemplateNodesGroupCreateNestedOneWithoutNodesInput!
  info: NodeInfoCreateNestedOneWithoutTemplateNodeInput!
  order: Int!
}

input TemplateNodeCreateWithoutGroupInput {
  FlowNode: FlowNodeCreateNestedManyWithoutTemplateNodeInput
  NodeProps: NodePropsCreateNestedOneWithoutTemplateNodeInput!
  info: NodeInfoCreateNestedOneWithoutTemplateNodeInput!
  order: Int!
}

input TemplateNodeCreateWithoutInfoInput {
  FlowNode: FlowNodeCreateNestedManyWithoutTemplateNodeInput
  NodeProps: NodePropsCreateNestedOneWithoutTemplateNodeInput!
  group: TemplateNodesGroupCreateNestedOneWithoutNodesInput!
  order: Int!
}

input TemplateNodeCreateWithoutNodePropsInput {
  FlowNode: FlowNodeCreateNestedManyWithoutTemplateNodeInput
  group: TemplateNodesGroupCreateNestedOneWithoutNodesInput!
  info: NodeInfoCreateNestedOneWithoutTemplateNodeInput!
  order: Int!
}

type TemplateNodeGroupBy {
  _avg: TemplateNodeAvgAggregate
  _count: TemplateNodeCountAggregate
  _max: TemplateNodeMaxAggregate
  _min: TemplateNodeMinAggregate
  _sum: TemplateNodeSumAggregate
  id: Int!
  nodeInfoId: Int!
  nodePropsId: Int!
  order: Int!
  templateNodesGroupId: Int!
}

input TemplateNodeListRelationFilter {
  every: TemplateNodeWhereInput
  none: TemplateNodeWhereInput
  some: TemplateNodeWhereInput
}

type TemplateNodeMaxAggregate {
  id: Int
  nodeInfoId: Int
  nodePropsId: Int
  order: Int
  templateNodesGroupId: Int
}

input TemplateNodeMaxOrderByAggregateInput {
  id: SortOrder
  nodeInfoId: SortOrder
  nodePropsId: SortOrder
  order: SortOrder
  templateNodesGroupId: SortOrder
}

type TemplateNodeMinAggregate {
  id: Int
  nodeInfoId: Int
  nodePropsId: Int
  order: Int
  templateNodesGroupId: Int
}

input TemplateNodeMinOrderByAggregateInput {
  id: SortOrder
  nodeInfoId: SortOrder
  nodePropsId: SortOrder
  order: SortOrder
  templateNodesGroupId: SortOrder
}

input TemplateNodeOrderByRelationAggregateInput {
  _count: SortOrder
}

input TemplateNodeOrderByWithAggregationInput {
  _avg: TemplateNodeAvgOrderByAggregateInput
  _count: TemplateNodeCountOrderByAggregateInput
  _max: TemplateNodeMaxOrderByAggregateInput
  _min: TemplateNodeMinOrderByAggregateInput
  _sum: TemplateNodeSumOrderByAggregateInput
  id: SortOrder
  nodeInfoId: SortOrder
  nodePropsId: SortOrder
  order: SortOrder
  templateNodesGroupId: SortOrder
}

input TemplateNodeOrderByWithRelationInput {
  FlowNode: FlowNodeOrderByRelationAggregateInput
  NodeProps: NodePropsOrderByWithRelationInput
  group: TemplateNodesGroupOrderByWithRelationInput
  id: SortOrder
  info: NodeInfoOrderByWithRelationInput
  nodeInfoId: SortOrder
  nodePropsId: SortOrder
  order: SortOrder
  templateNodesGroupId: SortOrder
}

input TemplateNodeRelationFilter {
  is: TemplateNodeWhereInput
  isNot: TemplateNodeWhereInput
}

enum TemplateNodeScalarFieldEnum {
  id
  nodeInfoId
  nodePropsId
  order
  templateNodesGroupId
}

input TemplateNodeScalarWhereInput {
  AND: [TemplateNodeScalarWhereInput!]
  NOT: [TemplateNodeScalarWhereInput!]
  OR: [TemplateNodeScalarWhereInput!]
  id: IntFilter
  nodeInfoId: IntFilter
  nodePropsId: IntFilter
  order: IntFilter
  templateNodesGroupId: IntFilter
}

input TemplateNodeScalarWhereWithAggregatesInput {
  AND: [TemplateNodeScalarWhereWithAggregatesInput!]
  NOT: [TemplateNodeScalarWhereWithAggregatesInput!]
  OR: [TemplateNodeScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  nodeInfoId: IntWithAggregatesFilter
  nodePropsId: IntWithAggregatesFilter
  order: IntWithAggregatesFilter
  templateNodesGroupId: IntWithAggregatesFilter
}

type TemplateNodeSumAggregate {
  id: Int
  nodeInfoId: Int
  nodePropsId: Int
  order: Int
  templateNodesGroupId: Int
}

input TemplateNodeSumOrderByAggregateInput {
  id: SortOrder
  nodeInfoId: SortOrder
  nodePropsId: SortOrder
  order: SortOrder
  templateNodesGroupId: SortOrder
}

input TemplateNodeUpdateInput {
  FlowNode: FlowNodeUpdateManyWithoutTemplateNodeInput
  NodeProps: NodePropsUpdateOneRequiredWithoutTemplateNodeInput
  group: TemplateNodesGroupUpdateOneRequiredWithoutNodesInput
  info: NodeInfoUpdateOneRequiredWithoutTemplateNodeInput
  order: IntFieldUpdateOperationsInput
}

input TemplateNodeUpdateManyMutationInput {
  order: IntFieldUpdateOperationsInput
}

input TemplateNodeUpdateManyWithWhereWithoutGroupInput {
  data: TemplateNodeUpdateManyMutationInput!
  where: TemplateNodeScalarWhereInput!
}

input TemplateNodeUpdateManyWithoutGroupInput {
  connect: [TemplateNodeWhereUniqueInput!]
  connectOrCreate: [TemplateNodeCreateOrConnectWithoutGroupInput!]
  create: [TemplateNodeCreateWithoutGroupInput!]
  createMany: TemplateNodeCreateManyGroupInputEnvelope
  delete: [TemplateNodeWhereUniqueInput!]
  deleteMany: [TemplateNodeScalarWhereInput!]
  disconnect: [TemplateNodeWhereUniqueInput!]
  set: [TemplateNodeWhereUniqueInput!]
  update: [TemplateNodeUpdateWithWhereUniqueWithoutGroupInput!]
  updateMany: [TemplateNodeUpdateManyWithWhereWithoutGroupInput!]
  upsert: [TemplateNodeUpsertWithWhereUniqueWithoutGroupInput!]
}

input TemplateNodeUpdateOneWithoutFlowNodeInput {
  connect: TemplateNodeWhereUniqueInput
  connectOrCreate: TemplateNodeCreateOrConnectWithoutFlowNodeInput
  create: TemplateNodeCreateWithoutFlowNodeInput
  delete: Boolean
  disconnect: Boolean
  update: TemplateNodeUpdateWithoutFlowNodeInput
  upsert: TemplateNodeUpsertWithoutFlowNodeInput
}

input TemplateNodeUpdateOneWithoutInfoInput {
  connect: TemplateNodeWhereUniqueInput
  connectOrCreate: TemplateNodeCreateOrConnectWithoutInfoInput
  create: TemplateNodeCreateWithoutInfoInput
  delete: Boolean
  disconnect: Boolean
  update: TemplateNodeUpdateWithoutInfoInput
  upsert: TemplateNodeUpsertWithoutInfoInput
}

input TemplateNodeUpdateOneWithoutNodePropsInput {
  connect: TemplateNodeWhereUniqueInput
  connectOrCreate: TemplateNodeCreateOrConnectWithoutNodePropsInput
  create: TemplateNodeCreateWithoutNodePropsInput
  delete: Boolean
  disconnect: Boolean
  update: TemplateNodeUpdateWithoutNodePropsInput
  upsert: TemplateNodeUpsertWithoutNodePropsInput
}

input TemplateNodeUpdateWithWhereUniqueWithoutGroupInput {
  data: TemplateNodeUpdateWithoutGroupInput!
  where: TemplateNodeWhereUniqueInput!
}

input TemplateNodeUpdateWithoutFlowNodeInput {
  NodeProps: NodePropsUpdateOneRequiredWithoutTemplateNodeInput
  group: TemplateNodesGroupUpdateOneRequiredWithoutNodesInput
  info: NodeInfoUpdateOneRequiredWithoutTemplateNodeInput
  order: IntFieldUpdateOperationsInput
}

input TemplateNodeUpdateWithoutGroupInput {
  FlowNode: FlowNodeUpdateManyWithoutTemplateNodeInput
  NodeProps: NodePropsUpdateOneRequiredWithoutTemplateNodeInput
  info: NodeInfoUpdateOneRequiredWithoutTemplateNodeInput
  order: IntFieldUpdateOperationsInput
}

input TemplateNodeUpdateWithoutInfoInput {
  FlowNode: FlowNodeUpdateManyWithoutTemplateNodeInput
  NodeProps: NodePropsUpdateOneRequiredWithoutTemplateNodeInput
  group: TemplateNodesGroupUpdateOneRequiredWithoutNodesInput
  order: IntFieldUpdateOperationsInput
}

input TemplateNodeUpdateWithoutNodePropsInput {
  FlowNode: FlowNodeUpdateManyWithoutTemplateNodeInput
  group: TemplateNodesGroupUpdateOneRequiredWithoutNodesInput
  info: NodeInfoUpdateOneRequiredWithoutTemplateNodeInput
  order: IntFieldUpdateOperationsInput
}

input TemplateNodeUpsertWithWhereUniqueWithoutGroupInput {
  create: TemplateNodeCreateWithoutGroupInput!
  update: TemplateNodeUpdateWithoutGroupInput!
  where: TemplateNodeWhereUniqueInput!
}

input TemplateNodeUpsertWithoutFlowNodeInput {
  create: TemplateNodeCreateWithoutFlowNodeInput!
  update: TemplateNodeUpdateWithoutFlowNodeInput!
}

input TemplateNodeUpsertWithoutInfoInput {
  create: TemplateNodeCreateWithoutInfoInput!
  update: TemplateNodeUpdateWithoutInfoInput!
}

input TemplateNodeUpsertWithoutNodePropsInput {
  create: TemplateNodeCreateWithoutNodePropsInput!
  update: TemplateNodeUpdateWithoutNodePropsInput!
}

input TemplateNodeWhereInput {
  AND: [TemplateNodeWhereInput!]
  FlowNode: FlowNodeListRelationFilter
  NOT: [TemplateNodeWhereInput!]
  NodeProps: NodePropsRelationFilter
  OR: [TemplateNodeWhereInput!]
  group: TemplateNodesGroupRelationFilter
  id: IntFilter
  info: NodeInfoRelationFilter
  nodeInfoId: IntFilter
  nodePropsId: IntFilter
  order: IntFilter
  templateNodesGroupId: IntFilter
}

input TemplateNodeWhereUniqueInput {
  id: Int
  nodeInfoId: Int
  nodePropsId: Int
  order: Int
}

type TemplateNodesGroup {
  _count: TemplateNodesGroupCount
  description: String!
  id: Int!
  name: String!
  nodes(cursor: TemplateNodeWhereUniqueInput, distinct: [TemplateNodeScalarFieldEnum!], orderBy: [TemplateNodeOrderByWithRelationInput!], skip: Int, take: Int, where: TemplateNodeWhereInput): [TemplateNode!]!
}

type TemplateNodesGroupAvgAggregate {
  id: Float
}

input TemplateNodesGroupAvgOrderByAggregateInput {
  id: SortOrder
}

type TemplateNodesGroupCount {
  nodes: Int!
}

type TemplateNodesGroupCountAggregate {
  _all: Int!
  description: Int!
  id: Int!
  name: Int!
}

input TemplateNodesGroupCountOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input TemplateNodesGroupCreateInput {
  description: String!
  name: String!
  nodes: TemplateNodeCreateNestedManyWithoutGroupInput
}

input TemplateNodesGroupCreateManyInput {
  description: String!
  id: Int
  name: String!
}

input TemplateNodesGroupCreateNestedOneWithoutNodesInput {
  connect: TemplateNodesGroupWhereUniqueInput
  connectOrCreate: TemplateNodesGroupCreateOrConnectWithoutNodesInput
  create: TemplateNodesGroupCreateWithoutNodesInput
}

input TemplateNodesGroupCreateOrConnectWithoutNodesInput {
  create: TemplateNodesGroupCreateWithoutNodesInput!
  where: TemplateNodesGroupWhereUniqueInput!
}

input TemplateNodesGroupCreateWithoutNodesInput {
  description: String!
  name: String!
}

type TemplateNodesGroupGroupBy {
  _avg: TemplateNodesGroupAvgAggregate
  _count: TemplateNodesGroupCountAggregate
  _max: TemplateNodesGroupMaxAggregate
  _min: TemplateNodesGroupMinAggregate
  _sum: TemplateNodesGroupSumAggregate
  description: String!
  id: Int!
  name: String!
}

type TemplateNodesGroupMaxAggregate {
  description: String
  id: Int
  name: String
}

input TemplateNodesGroupMaxOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

type TemplateNodesGroupMinAggregate {
  description: String
  id: Int
  name: String
}

input TemplateNodesGroupMinOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input TemplateNodesGroupOrderByWithAggregationInput {
  _avg: TemplateNodesGroupAvgOrderByAggregateInput
  _count: TemplateNodesGroupCountOrderByAggregateInput
  _max: TemplateNodesGroupMaxOrderByAggregateInput
  _min: TemplateNodesGroupMinOrderByAggregateInput
  _sum: TemplateNodesGroupSumOrderByAggregateInput
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input TemplateNodesGroupOrderByWithRelationInput {
  description: SortOrder
  id: SortOrder
  name: SortOrder
  nodes: TemplateNodeOrderByRelationAggregateInput
}

input TemplateNodesGroupRelationFilter {
  is: TemplateNodesGroupWhereInput
  isNot: TemplateNodesGroupWhereInput
}

enum TemplateNodesGroupScalarFieldEnum {
  description
  id
  name
}

input TemplateNodesGroupScalarWhereWithAggregatesInput {
  AND: [TemplateNodesGroupScalarWhereWithAggregatesInput!]
  NOT: [TemplateNodesGroupScalarWhereWithAggregatesInput!]
  OR: [TemplateNodesGroupScalarWhereWithAggregatesInput!]
  description: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
}

type TemplateNodesGroupSumAggregate {
  id: Int
}

input TemplateNodesGroupSumOrderByAggregateInput {
  id: SortOrder
}

input TemplateNodesGroupUpdateInput {
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nodes: TemplateNodeUpdateManyWithoutGroupInput
}

input TemplateNodesGroupUpdateManyMutationInput {
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TemplateNodesGroupUpdateOneRequiredWithoutNodesInput {
  connect: TemplateNodesGroupWhereUniqueInput
  connectOrCreate: TemplateNodesGroupCreateOrConnectWithoutNodesInput
  create: TemplateNodesGroupCreateWithoutNodesInput
  update: TemplateNodesGroupUpdateWithoutNodesInput
  upsert: TemplateNodesGroupUpsertWithoutNodesInput
}

input TemplateNodesGroupUpdateWithoutNodesInput {
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TemplateNodesGroupUpsertWithoutNodesInput {
  create: TemplateNodesGroupCreateWithoutNodesInput!
  update: TemplateNodesGroupUpdateWithoutNodesInput!
}

input TemplateNodesGroupWhereInput {
  AND: [TemplateNodesGroupWhereInput!]
  NOT: [TemplateNodesGroupWhereInput!]
  OR: [TemplateNodesGroupWhereInput!]
  description: StringFilter
  id: IntFilter
  name: StringFilter
  nodes: TemplateNodeListRelationFilter
}

input TemplateNodesGroupWhereUniqueInput {
  id: Int
}
